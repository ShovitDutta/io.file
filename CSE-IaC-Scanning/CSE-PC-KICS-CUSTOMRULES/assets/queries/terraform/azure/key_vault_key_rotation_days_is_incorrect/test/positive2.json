{
  "format_version": "1.2",
  "terraform_version": "1.10.5",
  "planned_values": {
    "root_module": {
      "child_modules": [
        {
          "resources": [
            {
              "address": "module.spoke_asgwy_qa.azurerm_disk_encryption_set.base_kv_des[0]",
              "mode": "managed",
              "type": "azurerm_disk_encryption_set",
              "name": "base_kv_des",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "auto_key_rotation_enabled": false,
                "encryption_type": "EncryptionAtRestWithCustomerKey",
                "federated_client_id": "",
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.Compute/diskEncryptionSets/des-asgwy-centralus-qa",
                "identity": [
                  {
                    "identity_ids": [],
                    "principal_id": "36899313-5270-482d-b156-57fc8b6f494e",
                    "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
                    "type": "SystemAssigned"
                  }
                ],
                "key_vault_key_id": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa/9b705eae3d5c4d96905ac4ced87b7ba3",
                "key_vault_key_url": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa/9b705eae3d5c4d96905ac4ced87b7ba3",
                "location": "centralus",
                "managed_hsm_key_id": null,
                "name": "des-asgwy-centralus-qa",
                "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
                "tags": {
                  "costcenter": "792513",
                  "createdondate": "2024-12-18",
                  "cvsappid": "APM0015151",
                  "dataclassification": "restrictedD",
                  "environmentsubtype": "QA",
                  "environmenttype": "NonProd",
                  "itpmid": "16118",
                  "managedby": "ExpressCloud",
                  "sharedemailaddress": "GhaiR2@cvshealth.com"
                },
                "timeouts": null
              },
              "sensitive_values": {
                "identity": [
                  {
                    "identity_ids": []
                  }
                ],
                "tags": {}
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_key_vault.ud_key_vaults[\"db\"]",
              "mode": "managed",
              "type": "azurerm_key_vault",
              "name": "ud_key_vaults",
              "index": "db",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 2,
              "values": {
                "access_policy": [],
                "contact": [],
                "enable_rbac_authorization": true,
                "enabled_for_deployment": false,
                "enabled_for_disk_encryption": false,
                "enabled_for_template_deployment": false,
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
                "location": "centralus",
                "name": "kv-hcbasgwy0402db",
                "network_acls": [
                  {
                    "bypass": "AzureServices",
                    "default_action": "Deny",
                    "ip_rules": [],
                    "virtual_network_subnet_ids": []
                  }
                ],
                "public_network_access_enabled": false,
                "purge_protection_enabled": true,
                "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
                "sku_name": "premium",
                "soft_delete_retention_days": 7,
                "tags": {
                  "costcenter": "792513",
                  "createdondate": "2024-12-18",
                  "cvsappid": "APM0015151",
                  "dataclassification": "restrictedD",
                  "environmentsubtype": "QA",
                  "environmenttype": "NonProd",
                  "itpmid": "16118",
                  "managedby": "ExpressCloud",
                  "sharedemailaddress": "GhaiR2@cvshealth.com"
                },
                "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
                "timeouts": null,
                "vault_uri": "https://kv-hcbasgwy0402db.vault.azure.net/"
              },
              "sensitive_values": {
                "access_policy": [],
                "contact": [],
                "network_acls": [
                  {
                    "ip_rules": [],
                    "virtual_network_subnet_ids": []
                  }
                ],
                "tags": {}
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_key_vault_key.base_kv_key[0]",
              "mode": "managed",
              "type": "azurerm_key_vault_key",
              "name": "base_kv_key",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "curve": "",
                "e": "AQAB",
                "expiration_date": null,
                "id": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa/9b705eae3d5c4d96905ac4ced87b7ba3",
                "key_opts": [
                  "decrypt",
                  "encrypt",
                  "unwrapKey",
                  "wrapKey"
                ],
                "key_size": 2048,
                "key_type": "RSA-HSM",
                "key_vault_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu",
                "n": "miq8N1FWbB59Srh8rR3Ha1eazps1QXdPJCtBYQJqui3LgBmafW1PNcFgmQcoByUzmmisdnI40jAEH_pDVr5-zOKkqz41H1rn_qbb5LNlGJfgA1V9yS7Yqk5lnmCyYCpwZQTfO2khgZauAzY_-ATGvfDKmocA5PNchalcxis4CZLw1xgyagic_uFgIorMOGJ42RQrddDZJf5CjU4GKAbh9Msh6WZnD-wAFN67MI2h4WbRL3d6aDbJ_x5xn6Rc8imgOjbqr99QGUuZLKuBKb7eDO2TlK69Rq9sjMVSvCZf8iCEI2gnbQJm4_tSBU_Vk1tacrOn548ixoqaRzXLv1IGkw",
                "name": "key-asgwy-centralus-qa",
                "not_before_date": null,
                "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCaKrw3UVZsHn1KuHytHcdrV5rOmzVBd08kK0FhAmq6LcuAGZp9bU81wWCZBygHJTOaaKx2cjjSMAQf+kNWvn7M4qSrPjUfWuf+ptvks2UYl+ADVX3JLtiqTmWeYLJgKnBlBN87aSGBlq4DNj/4BMa98MqahwDk81yFqVzGKzgJkvDXGDJqCJz+4WAiisw4YnjZFCt10Nkl/kKNTgYoBuH0yyHpZmcP7AAU3rswjaHhZtEvd3poNsn/HnGfpFzyKaA6Nuqv31AZS5ksq4Epvt4M7ZOUrr1Gr2yMxVK8Jl/yIIQjaCdtAmbj+1IFT9WTW1pys6fnjyLGippHNcu/UgaT\n",
                "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmiq8N1FWbB59Srh8rR3H\na1eazps1QXdPJCtBYQJqui3LgBmafW1PNcFgmQcoByUzmmisdnI40jAEH/pDVr5+\nzOKkqz41H1rn/qbb5LNlGJfgA1V9yS7Yqk5lnmCyYCpwZQTfO2khgZauAzY/+ATG\nvfDKmocA5PNchalcxis4CZLw1xgyagic/uFgIorMOGJ42RQrddDZJf5CjU4GKAbh\n9Msh6WZnD+wAFN67MI2h4WbRL3d6aDbJ/x5xn6Rc8imgOjbqr99QGUuZLKuBKb7e\nDO2TlK69Rq9sjMVSvCZf8iCEI2gnbQJm4/tSBU/Vk1tacrOn548ixoqaRzXLv1IG\nkwIDAQAB\n-----END PUBLIC KEY-----\n",
                "resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu/keys/key-asgwy-centralus-qa/versions/9b705eae3d5c4d96905ac4ced87b7ba3",
                "resource_versionless_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu/keys/key-asgwy-centralus-qa",
                "rotation_policy": [
                  {}
                ],
                "tags": {},
                "timeouts": null,
                "version": "9b705eae3d5c4d96905ac4ced87b7ba3",
                "versionless_id": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa",
                "x": "",
                "y": ""
              },
              "sensitive_values": {
                "key_opts": [
                  false,
                  false,
                  false,
                  false
                ],
                "rotation_policy": [
                  {
                    "automatic": [
                      {}
                    ]
                  }
                ],
                "tags": {}
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_log_analytics_workspace.log_analytics_workspace[0]",
              "mode": "managed",
              "type": "azurerm_log_analytics_workspace",
              "name": "log_analytics_workspace",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 3,
              "values": {
                "allow_resource_only_permissions": true,
                "cmk_for_query_forced": false,
                "daily_quota_gb": -1,
                "data_collection_rule_id": "",
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.OperationalInsights/workspaces/log-hcb-asgwy-qa-usc",
                "identity": [],
                "immediate_data_purge_on_30_days_enabled": false,
                "internet_ingestion_enabled": true,
                "internet_query_enabled": true,
                "local_authentication_disabled": false,
                "location": "centralus",
                "name": "log-hcb-asgwy-qa-usc",
                "primary_shared_key": "mYiEYXQpldg2vKyOkYEeQ+ctkfGqKA5fFqetoy4EjLM6YxRqJTfXCRG+viNrTsDZAo2zkeeKrzKcoefVSCXUOg==",
                "reservation_capacity_in_gb_per_day": null,
                "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
                "retention_in_days": 30,
                "secondary_shared_key": "55adVuGSym8ZN5b+HyQ1kaC0B87AM5wrJmx4jk5xq9kAUUhFCVnziMIW2aDtOxUmUmvbOi3K5YATAH+hUrT62A==",
                "sku": "PerGB2018",
                "tags": {
                  "costcenter": "792513",
                  "createdondate": "2024-12-18",
                  "cvsappid": "APM0015151",
                  "dataclassification": "restrictedD",
                  "environmentsubtype": "QA",
                  "environmenttype": "NonProd",
                  "itpmid": "16118",
                  "managedby": "ExpressCloud",
                  "sharedemailaddress": "GhaiR2@cvshealth.com"
                },
                "timeouts": null,
                "workspace_id": "bf046fda-638e-44f8-b099-8abd2bdaa859"
              },
              "sensitive_values": {
                "identity": [],
                "primary_shared_key": true,
                "secondary_shared_key": true,
                "tags": {}
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_management_lock.ud_key_vaults[\"db\"]",
              "mode": "managed",
              "type": "azurerm_management_lock",
              "name": "ud_key_vaults",
              "index": "db",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db/providers/Microsoft.Authorization/locks/EIS_CSS_Delete_Lock",
                "lock_level": "CanNotDelete",
                "name": "EIS_CSS_Delete_Lock",
                "notes": "GRP 71 [AR] Enforce delete prevention for Azure KeyVault",
                "scope": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
                "timeouts": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_monitor_diagnostic_setting.diag_ud_key_vaults[\"db\"]",
              "mode": "managed",
              "type": "azurerm_monitor_diagnostic_setting",
              "name": "diag_ud_key_vaults",
              "index": "db",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "enabled_log": [
                  {
                    "category": "",
                    "category_group": "audit",
                    "retention_policy": [
                      {
                        "days": 0,
                        "enabled": false
                      }
                    ]
                  }
                ],
                "eventhub_authorization_rule_id": "/subscriptions/7f81ff32-74f5-45e3-bc03-a8141f72754d/resourceGroups/RG-CVS-SharedServices-2/providers/Microsoft.EventHub/namespaces/rac2ehnpp2v/authorizationRules/RootManageSharedAccessKey",
                "eventhub_name": "cvs-splunk-azure-logs",
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db|diag-kv-hcbasgwy0402db",
                "log": [
                  {
                    "category": "",
                    "category_group": "allLogs",
                    "enabled": false,
                    "retention_policy": [
                      {
                        "days": 0,
                        "enabled": false
                      }
                    ]
                  },
                  {
                    "category": "",
                    "category_group": "audit",
                    "enabled": true,
                    "retention_policy": [
                      {
                        "days": 0,
                        "enabled": false
                      }
                    ]
                  }
                ],
                "log_analytics_destination_type": "AzureDiagnostics",
                "log_analytics_workspace_id": "",
                "metric": [
                  {
                    "category": "AllMetrics",
                    "enabled": false,
                    "retention_policy": [
                      {
                        "days": 0,
                        "enabled": false
                      }
                    ]
                  }
                ],
                "name": "diag-kv-hcbasgwy0402db",
                "partner_solution_id": null,
                "storage_account_id": null,
                "target_resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
                "timeouts": null
              },
              "sensitive_values": {
                "enabled_log": [
                  {
                    "retention_policy": [
                      {}
                    ]
                  }
                ],
                "log": [
                  {
                    "retention_policy": [
                      {}
                    ]
                  },
                  {
                    "retention_policy": [
                      {}
                    ]
                  }
                ],
                "metric": [
                  {
                    "retention_policy": [
                      {}
                    ]
                  }
                ]
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_monitor_diagnostic_setting.law_diagnostics_eventhub[0]",
              "mode": "managed",
              "type": "azurerm_monitor_diagnostic_setting",
              "name": "law_diagnostics_eventhub",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "enabled_log": [
                  {
                    "category": "",
                    "category_group": "allLogs",
                    "retention_policy": [
                      {
                        "days": 0,
                        "enabled": false
                      }
                    ]
                  },
                  {
                    "category": "",
                    "category_group": "audit",
                    "retention_policy": [
                      {
                        "days": 0,
                        "enabled": false
                      }
                    ]
                  }
                ],
                "eventhub_authorization_rule_id": "/subscriptions/7f81ff32-74f5-45e3-bc03-a8141f72754d/resourceGroups/RG-CVS-SharedServices-2/providers/Microsoft.EventHub/namespaces/rac2ehnpp2v/authorizationRules/RootManageSharedAccessKey",
                "eventhub_name": "cvs-splunk-azure-logs",
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.OperationalInsights/workspaces/log-hcb-asgwy-qa-usc|diag-log-hcb-asgwy-qa-usc",
                "log": [
                  {
                    "category": "",
                    "category_group": "allLogs",
                    "enabled": true,
                    "retention_policy": [
                      {
                        "days": 0,
                        "enabled": false
                      }
                    ]
                  },
                  {
                    "category": "",
                    "category_group": "audit",
                    "enabled": true,
                    "retention_policy": [
                      {
                        "days": 0,
                        "enabled": false
                      }
                    ]
                  }
                ],
                "log_analytics_destination_type": "",
                "log_analytics_workspace_id": "",
                "metric": [
                  {
                    "category": "AllMetrics",
                    "enabled": false,
                    "retention_policy": [
                      {
                        "days": 0,
                        "enabled": false
                      }
                    ]
                  }
                ],
                "name": "diag-log-hcb-asgwy-qa-usc",
                "partner_solution_id": null,
                "storage_account_id": null,
                "target_resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.OperationalInsights/workspaces/log-hcb-asgwy-qa-usc",
                "timeouts": null
              },
              "sensitive_values": {
                "enabled_log": [
                  {
                    "retention_policy": [
                      {}
                    ]
                  },
                  {
                    "retention_policy": [
                      {}
                    ]
                  }
                ],
                "log": [
                  {
                    "retention_policy": [
                      {}
                    ]
                  },
                  {
                    "retention_policy": [
                      {}
                    ]
                  }
                ],
                "metric": [
                  {
                    "retention_policy": [
                      {}
                    ]
                  }
                ]
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_network_security_group.network_security_group[0]",
              "mode": "managed",
              "type": "azurerm_network_security_group",
              "name": "network_security_group",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk",
                "location": "centralus",
                "name": "nsg-hcb-asgwy-qa-usc-ntwk",
                "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                "security_rule": [
                  {
                    "access": "Allow",
                    "description": "",
                    "destination_address_prefix": "",
                    "destination_address_prefixes": [
                      "10.229.224.112/28",
                      "10.229.224.128/28",
                      "10.229.224.144/28"
                    ],
                    "destination_application_security_group_ids": [],
                    "destination_port_range": "443",
                    "destination_port_ranges": [],
                    "direction": "Inbound",
                    "name": "AllowInternalHttpsTrafficInbound",
                    "priority": 4020,
                    "protocol": "*",
                    "source_address_prefix": "",
                    "source_address_prefixes": [
                      "10.0.0.0/8",
                      "157.121.0.0/16",
                      "167.69.0.0/16",
                      "172.16.0.0/12",
                      "198.187.64.0/18",
                      "204.99.0.0/17",
                      "206.213.0.0/16"
                    ],
                    "source_application_security_group_ids": [],
                    "source_port_range": "*",
                    "source_port_ranges": []
                  },
                  {
                    "access": "Allow",
                    "description": "",
                    "destination_address_prefix": "10.229.224.112/28",
                    "destination_address_prefixes": [],
                    "destination_application_security_group_ids": [],
                    "destination_port_range": "5432",
                    "destination_port_ranges": [],
                    "direction": "Inbound",
                    "name": "AllowPostgresTrafficFromInternalInbound",
                    "priority": 4033,
                    "protocol": "*",
                    "source_address_prefix": "",
                    "source_address_prefixes": [
                      "10.0.0.0/8",
                      "157.121.0.0/16",
                      "167.69.0.0/16",
                      "172.16.0.0/12",
                      "198.187.64.0/18",
                      "204.99.0.0/17",
                      "206.213.0.0/16"
                    ],
                    "source_application_security_group_ids": [],
                    "source_port_range": "*",
                    "source_port_ranges": []
                  },
                  {
                    "access": "Allow",
                    "description": "",
                    "destination_address_prefix": "10.229.224.112/28",
                    "destination_address_prefixes": [],
                    "destination_application_security_group_ids": [],
                    "destination_port_range": "5432",
                    "destination_port_ranges": [],
                    "direction": "Inbound",
                    "name": "AllowPostgresTrafficSelfInbound",
                    "priority": 4030,
                    "protocol": "*",
                    "source_address_prefix": "10.229.224.112/28",
                    "source_address_prefixes": [],
                    "source_application_security_group_ids": [],
                    "source_port_range": "*",
                    "source_port_ranges": []
                  },
                  {
                    "access": "Allow",
                    "description": "",
                    "destination_address_prefix": "10.229.224.112/28",
                    "destination_address_prefixes": [],
                    "destination_application_security_group_ids": [],
                    "destination_port_range": "5432",
                    "destination_port_ranges": [],
                    "direction": "Outbound",
                    "name": "AllowPostgresTrafficSelfOutbound",
                    "priority": 4030,
                    "protocol": "*",
                    "source_address_prefix": "10.229.224.112/28",
                    "source_address_prefixes": [],
                    "source_application_security_group_ids": [],
                    "source_port_range": "*",
                    "source_port_ranges": []
                  },
                  {
                    "access": "Allow",
                    "description": "",
                    "destination_address_prefix": "AzureActiveDirectory",
                    "destination_address_prefixes": [],
                    "destination_application_security_group_ids": [],
                    "destination_port_range": "443",
                    "destination_port_ranges": [],
                    "direction": "Outbound",
                    "name": "AllowPostgresToAzureADOutbound",
                    "priority": 4032,
                    "protocol": "*",
                    "source_address_prefix": "10.229.224.112/28",
                    "source_address_prefixes": [],
                    "source_application_security_group_ids": [],
                    "source_port_range": "*",
                    "source_port_ranges": []
                  },
                  {
                    "access": "Allow",
                    "description": "",
                    "destination_address_prefix": "Storage",
                    "destination_address_prefixes": [],
                    "destination_application_security_group_ids": [],
                    "destination_port_range": "443",
                    "destination_port_ranges": [],
                    "direction": "Outbound",
                    "name": "AllowPostgresToAzureStorageOutbound",
                    "priority": 4031,
                    "protocol": "*",
                    "source_address_prefix": "10.229.224.112/28",
                    "source_address_prefixes": [],
                    "source_application_security_group_ids": [],
                    "source_port_range": "*",
                    "source_port_ranges": []
                  },
                  {
                    "access": "Deny",
                    "description": "",
                    "destination_address_prefix": "*",
                    "destination_address_prefixes": [],
                    "destination_application_security_group_ids": [],
                    "destination_port_range": "*",
                    "destination_port_ranges": [],
                    "direction": "Inbound",
                    "name": "DenyAllInbound",
                    "priority": 4096,
                    "protocol": "*",
                    "source_address_prefix": "*",
                    "source_address_prefixes": [],
                    "source_application_security_group_ids": [],
                    "source_port_range": "*",
                    "source_port_ranges": []
                  },
                  {
                    "access": "Deny",
                    "description": "",
                    "destination_address_prefix": "*",
                    "destination_address_prefixes": [],
                    "destination_application_security_group_ids": [],
                    "destination_port_range": "*",
                    "destination_port_ranges": [],
                    "direction": "Outbound",
                    "name": "DenyAllOutbound",
                    "priority": 4096,
                    "protocol": "*",
                    "source_address_prefix": "*",
                    "source_address_prefixes": [],
                    "source_application_security_group_ids": [],
                    "source_port_range": "*",
                    "source_port_ranges": []
                  }
                ],
                "tags": {
                  "costcenter": "792513",
                  "createdondate": "2024-12-18",
                  "cvsappid": "APM0015151",
                  "dataclassification": "restrictedD",
                  "environmentsubtype": "QA",
                  "environmenttype": "NonProd",
                  "itpmid": "16118",
                  "managedby": "ExpressCloud",
                  "sharedemailaddress": "GhaiR2@cvshealth.com"
                },
                "timeouts": null
              },
              "sensitive_values": {
                "security_rule": [
                  {
                    "destination_address_prefixes": [
                      false,
                      false,
                      false
                    ],
                    "destination_application_security_group_ids": [],
                    "destination_port_ranges": [],
                    "source_address_prefixes": [
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false
                    ],
                    "source_application_security_group_ids": [],
                    "source_port_ranges": []
                  },
                  {
                    "destination_address_prefixes": [],
                    "destination_application_security_group_ids": [],
                    "destination_port_ranges": [],
                    "source_address_prefixes": [
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false
                    ],
                    "source_application_security_group_ids": [],
                    "source_port_ranges": []
                  },
                  {
                    "destination_address_prefixes": [],
                    "destination_application_security_group_ids": [],
                    "destination_port_ranges": [],
                    "source_address_prefixes": [],
                    "source_application_security_group_ids": [],
                    "source_port_ranges": []
                  },
                  {
                    "destination_address_prefixes": [],
                    "destination_application_security_group_ids": [],
                    "destination_port_ranges": [],
                    "source_address_prefixes": [],
                    "source_application_security_group_ids": [],
                    "source_port_ranges": []
                  },
                  {
                    "destination_address_prefixes": [],
                    "destination_application_security_group_ids": [],
                    "destination_port_ranges": [],
                    "source_address_prefixes": [],
                    "source_application_security_group_ids": [],
                    "source_port_ranges": []
                  },
                  {
                    "destination_address_prefixes": [],
                    "destination_application_security_group_ids": [],
                    "destination_port_ranges": [],
                    "source_address_prefixes": [],
                    "source_application_security_group_ids": [],
                    "source_port_ranges": []
                  },
                  {
                    "destination_address_prefixes": [],
                    "destination_application_security_group_ids": [],
                    "destination_port_ranges": [],
                    "source_address_prefixes": [],
                    "source_application_security_group_ids": [],
                    "source_port_ranges": []
                  },
                  {
                    "destination_address_prefixes": [],
                    "destination_application_security_group_ids": [],
                    "destination_port_ranges": [],
                    "source_address_prefixes": [],
                    "source_application_security_group_ids": [],
                    "source_port_ranges": []
                  }
                ],
                "tags": {}
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowInternalHttpsTrafficInbound\"]",
              "mode": "managed",
              "type": "azurerm_network_security_rule",
              "name": "network_security_rules",
              "index": "AllowInternalHttpsTrafficInbound",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "access": "Allow",
                "description": "",
                "destination_address_prefix": "",
                "destination_address_prefixes": [
                  "10.229.224.112/28",
                  "10.229.224.128/28",
                  "10.229.224.144/28"
                ],
                "destination_application_security_group_ids": [],
                "destination_port_range": "443",
                "destination_port_ranges": [],
                "direction": "Inbound",
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowInternalHttpsTrafficInbound",
                "name": "AllowInternalHttpsTrafficInbound",
                "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
                "priority": 4020,
                "protocol": "*",
                "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                "source_address_prefix": "",
                "source_address_prefixes": [
                  "10.0.0.0/8",
                  "157.121.0.0/16",
                  "167.69.0.0/16",
                  "172.16.0.0/12",
                  "198.187.64.0/18",
                  "204.99.0.0/17",
                  "206.213.0.0/16"
                ],
                "source_application_security_group_ids": [],
                "source_port_range": "*",
                "source_port_ranges": [],
                "timeouts": null
              },
              "sensitive_values": {
                "destination_address_prefixes": [
                  false,
                  false,
                  false
                ],
                "destination_application_security_group_ids": [],
                "destination_port_ranges": [],
                "source_address_prefixes": [
                  false,
                  false,
                  false,
                  false,
                  false,
                  false,
                  false
                ],
                "source_application_security_group_ids": [],
                "source_port_ranges": []
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowPostgresToAzureADOutbound\"]",
              "mode": "managed",
              "type": "azurerm_network_security_rule",
              "name": "network_security_rules",
              "index": "AllowPostgresToAzureADOutbound",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "access": "Allow",
                "description": "",
                "destination_address_prefix": "AzureActiveDirectory",
                "destination_address_prefixes": [],
                "destination_application_security_group_ids": [],
                "destination_port_range": "443",
                "destination_port_ranges": [],
                "direction": "Outbound",
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresToAzureADOutbound",
                "name": "AllowPostgresToAzureADOutbound",
                "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
                "priority": 4032,
                "protocol": "*",
                "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                "source_address_prefix": "10.229.224.112/28",
                "source_address_prefixes": [],
                "source_application_security_group_ids": [],
                "source_port_range": "*",
                "source_port_ranges": [],
                "timeouts": null
              },
              "sensitive_values": {
                "destination_address_prefixes": [],
                "destination_application_security_group_ids": [],
                "destination_port_ranges": [],
                "source_address_prefixes": [],
                "source_application_security_group_ids": [],
                "source_port_ranges": []
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowPostgresToAzureStorageOutbound\"]",
              "mode": "managed",
              "type": "azurerm_network_security_rule",
              "name": "network_security_rules",
              "index": "AllowPostgresToAzureStorageOutbound",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "access": "Allow",
                "description": "",
                "destination_address_prefix": "Storage",
                "destination_address_prefixes": [],
                "destination_application_security_group_ids": [],
                "destination_port_range": "443",
                "destination_port_ranges": [],
                "direction": "Outbound",
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresToAzureStorageOutbound",
                "name": "AllowPostgresToAzureStorageOutbound",
                "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
                "priority": 4031,
                "protocol": "*",
                "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                "source_address_prefix": "10.229.224.112/28",
                "source_address_prefixes": [],
                "source_application_security_group_ids": [],
                "source_port_range": "*",
                "source_port_ranges": [],
                "timeouts": null
              },
              "sensitive_values": {
                "destination_address_prefixes": [],
                "destination_application_security_group_ids": [],
                "destination_port_ranges": [],
                "source_address_prefixes": [],
                "source_application_security_group_ids": [],
                "source_port_ranges": []
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowPostgresTrafficFromInternalInbound\"]",
              "mode": "managed",
              "type": "azurerm_network_security_rule",
              "name": "network_security_rules",
              "index": "AllowPostgresTrafficFromInternalInbound",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "access": "Allow",
                "description": "",
                "destination_address_prefix": "10.229.224.112/28",
                "destination_address_prefixes": [],
                "destination_application_security_group_ids": [],
                "destination_port_range": "5432",
                "destination_port_ranges": [],
                "direction": "Inbound",
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresTrafficFromInternalInbound",
                "name": "AllowPostgresTrafficFromInternalInbound",
                "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
                "priority": 4033,
                "protocol": "*",
                "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                "source_address_prefix": "",
                "source_address_prefixes": [
                  "10.0.0.0/8",
                  "157.121.0.0/16",
                  "167.69.0.0/16",
                  "172.16.0.0/12",
                  "198.187.64.0/18",
                  "204.99.0.0/17",
                  "206.213.0.0/16"
                ],
                "source_application_security_group_ids": [],
                "source_port_range": "*",
                "source_port_ranges": [],
                "timeouts": null
              },
              "sensitive_values": {
                "destination_address_prefixes": [],
                "destination_application_security_group_ids": [],
                "destination_port_ranges": [],
                "source_address_prefixes": [
                  false,
                  false,
                  false,
                  false,
                  false,
                  false,
                  false
                ],
                "source_application_security_group_ids": [],
                "source_port_ranges": []
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowPostgresTrafficSelfInbound\"]",
              "mode": "managed",
              "type": "azurerm_network_security_rule",
              "name": "network_security_rules",
              "index": "AllowPostgresTrafficSelfInbound",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "access": "Allow",
                "description": "",
                "destination_address_prefix": "10.229.224.112/28",
                "destination_address_prefixes": [],
                "destination_application_security_group_ids": [],
                "destination_port_range": "5432",
                "destination_port_ranges": [],
                "direction": "Inbound",
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresTrafficSelfInbound",
                "name": "AllowPostgresTrafficSelfInbound",
                "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
                "priority": 4030,
                "protocol": "*",
                "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                "source_address_prefix": "10.229.224.112/28",
                "source_address_prefixes": [],
                "source_application_security_group_ids": [],
                "source_port_range": "*",
                "source_port_ranges": [],
                "timeouts": null
              },
              "sensitive_values": {
                "destination_address_prefixes": [],
                "destination_application_security_group_ids": [],
                "destination_port_ranges": [],
                "source_address_prefixes": [],
                "source_application_security_group_ids": [],
                "source_port_ranges": []
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowPostgresTrafficSelfOutbound\"]",
              "mode": "managed",
              "type": "azurerm_network_security_rule",
              "name": "network_security_rules",
              "index": "AllowPostgresTrafficSelfOutbound",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "access": "Allow",
                "description": "",
                "destination_address_prefix": "10.229.224.112/28",
                "destination_address_prefixes": [],
                "destination_application_security_group_ids": [],
                "destination_port_range": "5432",
                "destination_port_ranges": [],
                "direction": "Outbound",
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresTrafficSelfOutbound",
                "name": "AllowPostgresTrafficSelfOutbound",
                "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
                "priority": 4030,
                "protocol": "*",
                "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                "source_address_prefix": "10.229.224.112/28",
                "source_address_prefixes": [],
                "source_application_security_group_ids": [],
                "source_port_range": "*",
                "source_port_ranges": [],
                "timeouts": null
              },
              "sensitive_values": {
                "destination_address_prefixes": [],
                "destination_application_security_group_ids": [],
                "destination_port_ranges": [],
                "source_address_prefixes": [],
                "source_application_security_group_ids": [],
                "source_port_ranges": []
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"DenyAllInbound\"]",
              "mode": "managed",
              "type": "azurerm_network_security_rule",
              "name": "network_security_rules",
              "index": "DenyAllInbound",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "access": "Deny",
                "description": "",
                "destination_address_prefix": "*",
                "destination_address_prefixes": [],
                "destination_application_security_group_ids": [],
                "destination_port_range": "*",
                "destination_port_ranges": [],
                "direction": "Inbound",
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/DenyAllInbound",
                "name": "DenyAllInbound",
                "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
                "priority": 4096,
                "protocol": "*",
                "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                "source_address_prefix": "*",
                "source_address_prefixes": [],
                "source_application_security_group_ids": [],
                "source_port_range": "*",
                "source_port_ranges": [],
                "timeouts": null
              },
              "sensitive_values": {
                "destination_address_prefixes": [],
                "destination_application_security_group_ids": [],
                "destination_port_ranges": [],
                "source_address_prefixes": [],
                "source_application_security_group_ids": [],
                "source_port_ranges": []
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"DenyAllOutbound\"]",
              "mode": "managed",
              "type": "azurerm_network_security_rule",
              "name": "network_security_rules",
              "index": "DenyAllOutbound",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "access": "Deny",
                "description": "",
                "destination_address_prefix": "*",
                "destination_address_prefixes": [],
                "destination_application_security_group_ids": [],
                "destination_port_range": "*",
                "destination_port_ranges": [],
                "direction": "Outbound",
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/DenyAllOutbound",
                "name": "DenyAllOutbound",
                "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
                "priority": 4096,
                "protocol": "*",
                "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                "source_address_prefix": "*",
                "source_address_prefixes": [],
                "source_application_security_group_ids": [],
                "source_port_range": "*",
                "source_port_ranges": [],
                "timeouts": null
              },
              "sensitive_values": {
                "destination_address_prefixes": [],
                "destination_application_security_group_ids": [],
                "destination_port_ranges": [],
                "source_address_prefixes": [],
                "source_application_security_group_ids": [],
                "source_port_ranges": []
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"Primary_Sec_DB_access_inbound\"]",
              "mode": "managed",
              "type": "azurerm_network_security_rule",
              "name": "network_security_rules",
              "index": "Primary_Sec_DB_access_inbound",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "access": "Allow",
                "description": null,
                "destination_address_prefix": "10.229.224.112/28",
                "destination_address_prefixes": null,
                "destination_application_security_group_ids": null,
                "destination_port_range": "5432",
                "destination_port_ranges": null,
                "direction": "Inbound",
                "name": "Primary_Sec_DB_access_inbound",
                "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
                "priority": 130,
                "protocol": "Tcp",
                "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                "source_address_prefix": "10.85.95.16/28",
                "source_address_prefixes": null,
                "source_application_security_group_ids": null,
                "source_port_range": "*",
                "source_port_ranges": null,
                "timeouts": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_network_watcher_flow_log.main[0]",
              "mode": "managed",
              "type": "azurerm_network_watcher_flow_log",
              "name": "main",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 1,
              "values": {
                "enabled": true,
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/NetworkWatcherRG/providers/Microsoft.Network/networkWatchers/NetworkWatcher_centralus/flowLogs/nwfl-hcb-asgwy-qa-usc",
                "location": "centralus",
                "name": "nwfl-hcb-asgwy-qa-usc",
                "network_security_group_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk",
                "network_watcher_name": "NetworkWatcher_centralus",
                "resource_group_name": "NetworkWatcherRG",
                "retention_policy": [
                  {
                    "days": 0,
                    "enabled": true
                  }
                ],
                "storage_account_id": "/subscriptions/29ea5d6f-8539-4a95-8198-ca801994cbdb/resourceGroups/RG-cvsnsgflhub000/providers/Microsoft.Storage/storageAccounts/sacvsnsgflhubusc000",
                "tags": {
                  "costcenter": "792513",
                  "createdondate": "2024-12-18",
                  "cvsappid": "APM0015151",
                  "dataclassification": "restrictedD",
                  "environmentsubtype": "QA",
                  "environmenttype": "NonProd",
                  "itpmid": "16118",
                  "managedby": "ExpressCloud",
                  "sharedemailaddress": "GhaiR2@cvshealth.com"
                },
                "timeouts": null,
                "traffic_analytics": [
                  {
                    "enabled": true,
                    "interval_in_minutes": 10,
                    "workspace_id": "bf046fda-638e-44f8-b099-8abd2bdaa859",
                    "workspace_region": "centralus",
                    "workspace_resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.OperationalInsights/workspaces/log-hcb-asgwy-qa-usc"
                  }
                ],
                "version": 2
              },
              "sensitive_values": {
                "retention_policy": [
                  {}
                ],
                "tags": {},
                "traffic_analytics": [
                  {}
                ]
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_private_endpoint.ud_key_vaults_pes[\"db\"]",
              "mode": "managed",
              "type": "azurerm_private_endpoint",
              "name": "ud_key_vaults_pes",
              "index": "db",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "custom_dns_configs": [
                  {
                    "fqdn": "kv-hcbasgwy0402db.vault.azure.net",
                    "ip_addresses": [
                      "10.229.224.132"
                    ]
                  }
                ],
                "custom_network_interface_name": "",
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.Network/privateEndpoints/pep-hcb-asgwy-qa-usc-kv-db",
                "ip_configuration": [],
                "location": "centralus",
                "name": "pep-hcb-asgwy-qa-usc-kv-db",
                "network_interface": [
                  {
                    "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.Network/networkInterfaces/pep-hcb-asgwy-qa-usc-kv-db.nic.e00f8d02-cc44-4feb-8394-5891ecd27664",
                    "name": "pep-hcb-asgwy-qa-usc-kv-db.nic.e00f8d02-cc44-4feb-8394-5891ecd27664"
                  }
                ],
                "private_dns_zone_configs": [],
                "private_dns_zone_group": [],
                "private_service_connection": [
                  {
                    "is_manual_connection": false,
                    "name": "db-privateserviceconnection",
                    "private_connection_resource_alias": "",
                    "private_connection_resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
                    "private_ip_address": "10.229.224.132",
                    "request_message": "",
                    "subresource_names": [
                      "vault"
                    ]
                  }
                ],
                "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
                "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
                "tags": {
                  "costcenter": "792513",
                  "createdondate": "2024-12-18",
                  "cvsappid": "APM0015151",
                  "dataclassification": "restrictedD",
                  "environmentsubtype": "QA",
                  "environmenttype": "NonProd",
                  "itpmid": "16118",
                  "managedby": "ExpressCloud",
                  "sharedemailaddress": "GhaiR2@cvshealth.com"
                },
                "timeouts": null
              },
              "sensitive_values": {
                "custom_dns_configs": [
                  {
                    "ip_addresses": [
                      false
                    ]
                  }
                ],
                "ip_configuration": [],
                "network_interface": [
                  {}
                ],
                "private_dns_zone_configs": [],
                "private_dns_zone_group": [],
                "private_service_connection": [
                  {
                    "subresource_names": [
                      false
                    ]
                  }
                ],
                "tags": {}
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_resource_group.backup_rg[0]",
              "mode": "managed",
              "type": "azurerm_resource_group",
              "name": "backup_rg",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-bkp",
                "location": "centralus",
                "managed_by": "",
                "name": "rg-hcb-asgwy-qa-usc-bkp",
                "tags": {
                  "costcenter": "792513",
                  "createdondate": "2024-12-18",
                  "cvsappid": "APM0015151",
                  "dataclassification": "restrictedD",
                  "environmentsubtype": "QA",
                  "environmenttype": "NonProd",
                  "itpmid": "16118",
                  "managedby": "ExpressCloud",
                  "sharedemailaddress": "GhaiR2@cvshealth.com"
                },
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {}
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_resource_group.mi_rg[0]",
              "mode": "managed",
              "type": "azurerm_resource_group",
              "name": "mi_rg",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-mi",
                "location": "centralus",
                "managed_by": "",
                "name": "rg-hcb-asgwy-qa-usc-mi",
                "tags": {
                  "costcenter": "792513",
                  "createdondate": "2024-12-18",
                  "cvsappid": "APM0015151",
                  "dataclassification": "restrictedD",
                  "environmentsubtype": "QA",
                  "environmenttype": "NonProd",
                  "itpmid": "16118",
                  "managedby": "ExpressCloud",
                  "sharedemailaddress": "GhaiR2@cvshealth.com"
                },
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {}
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_resource_group.network_rg[0]",
              "mode": "managed",
              "type": "azurerm_resource_group",
              "name": "network_rg",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk",
                "location": "centralus",
                "managed_by": "",
                "name": "rg-hcb-asgwy-qa-usc-ntwk",
                "tags": {
                  "costcenter": "792513",
                  "createdondate": "2024-12-18",
                  "cvsappid": "APM0015151",
                  "dataclassification": "restrictedD",
                  "environmentsubtype": "QA",
                  "environmenttype": "NonProd",
                  "itpmid": "16118",
                  "managedby": "ExpressCloud",
                  "sharedemailaddress": "GhaiR2@cvshealth.com"
                },
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {}
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_resource_group.secr_rg[0]",
              "mode": "managed",
              "type": "azurerm_resource_group",
              "name": "secr_rg",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr",
                "location": "centralus",
                "managed_by": "",
                "name": "rg-hcb-asgwy-qa-usc-secr",
                "tags": {
                  "costcenter": "792513",
                  "createdondate": "2024-12-18",
                  "cvsappid": "APM0015151",
                  "dataclassification": "restrictedD",
                  "environmentsubtype": "QA",
                  "environmenttype": "NonProd",
                  "itpmid": "16118",
                  "managedby": "ExpressCloud",
                  "sharedemailaddress": "GhaiR2@cvshealth.com"
                },
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {}
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs[\"app\"]",
              "mode": "managed",
              "type": "azurerm_resource_group",
              "name": "ud_rgs",
              "index": "app",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-app",
                "location": "centralus",
                "managed_by": "",
                "name": "rg-hcb-asgwy-qa-usc-app",
                "tags": {
                  "costcenter": "792513",
                  "createdondate": "2024-12-18",
                  "cvsappid": "APM0015151",
                  "dataclassification": "restrictedD",
                  "environmentsubtype": "QA",
                  "environmenttype": "NonProd",
                  "itpmid": "16118",
                  "managedby": "ExpressCloud",
                  "sharedemailaddress": "GhaiR2@cvshealth.com"
                },
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {}
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs[\"db\"]",
              "mode": "managed",
              "type": "azurerm_resource_group",
              "name": "ud_rgs",
              "index": "db",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-db",
                "location": "centralus",
                "managed_by": "",
                "name": "rg-hcb-asgwy-qa-usc-db",
                "tags": {
                  "costcenter": "792513",
                  "createdondate": "2024-12-18",
                  "cvsappid": "APM0015151",
                  "dataclassification": "restrictedD",
                  "environmentsubtype": "QA",
                  "environmenttype": "NonProd",
                  "itpmid": "16118",
                  "managedby": "ExpressCloud",
                  "sharedemailaddress": "GhaiR2@cvshealth.com"
                },
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {}
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_role_assignment.base_kv_key_access_aes_role[0]",
              "mode": "managed",
              "type": "azurerm_role_assignment",
              "name": "base_kv_key_access_aes_role",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "condition": "",
                "condition_version": "",
                "delegated_managed_identity_resource_id": "",
                "description": "",
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu/providers/Microsoft.Authorization/roleAssignments/91c03327-37b5-393a-4c09-f5db988321b4",
                "name": "91c03327-37b5-393a-4c09-f5db988321b4",
                "principal_id": "36899313-5270-482d-b156-57fc8b6f494e",
                "principal_type": "ServicePrincipal",
                "role_definition_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/providers/Microsoft.Authorization/roleDefinitions/e147488a-f6f5-4113-8e2d-b22465e65bf6",
                "role_definition_name": "Key Vault Crypto Service Encryption User",
                "scope": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu",
                "skip_service_principal_aad_check": null,
                "timeouts": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_role_assignment.base_kv_key_access_aes_role_managed_identity[0]",
              "mode": "managed",
              "type": "azurerm_role_assignment",
              "name": "base_kv_key_access_aes_role_managed_identity",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "condition": "",
                "condition_version": "",
                "delegated_managed_identity_resource_id": "",
                "description": "",
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu/providers/Microsoft.Authorization/roleAssignments/08911769-a98d-00c0-9d20-175a3ccf6941",
                "name": "08911769-a98d-00c0-9d20-175a3ccf6941",
                "principal_id": "2af739f2-d4fb-4e65-8d22-bb648fd34f1a",
                "principal_type": "ServicePrincipal",
                "role_definition_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/providers/Microsoft.Authorization/roleDefinitions/e147488a-f6f5-4113-8e2d-b22465e65bf6",
                "role_definition_name": "Key Vault Crypto Service Encryption User",
                "scope": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu",
                "skip_service_principal_aad_check": null,
                "timeouts": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_route.routes[\"db\"]",
              "mode": "managed",
              "type": "azurerm_route",
              "name": "routes",
              "index": "db",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "address_prefix": "0.0.0.0/0",
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-db/routes/udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
                "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
                "next_hop_in_ip_address": "10.229.129.4",
                "next_hop_type": "VirtualAppliance",
                "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                "route_table_name": "rt-hcb-asgwy-qa-usc-db",
                "timeouts": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_route.routes[\"pe\"]",
              "mode": "managed",
              "type": "azurerm_route",
              "name": "routes",
              "index": "pe",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "address_prefix": "0.0.0.0/0",
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-pe/routes/udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
                "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
                "next_hop_in_ip_address": "10.229.129.4",
                "next_hop_type": "VirtualAppliance",
                "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                "route_table_name": "rt-hcb-asgwy-qa-usc-pe",
                "timeouts": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_route.routes[\"psqldb\"]",
              "mode": "managed",
              "type": "azurerm_route",
              "name": "routes",
              "index": "psqldb",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "address_prefix": "0.0.0.0/0",
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-psqldb/routes/udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
                "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
                "next_hop_in_ip_address": "10.229.129.4",
                "next_hop_type": "VirtualAppliance",
                "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                "route_table_name": "rt-hcb-asgwy-qa-usc-psqldb",
                "timeouts": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_route_table.route_tables[\"db\"]",
              "mode": "managed",
              "type": "azurerm_route_table",
              "name": "route_tables",
              "index": "db",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "bgp_route_propagation_enabled": false,
                "disable_bgp_route_propagation": true,
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-db",
                "location": "centralus",
                "name": "rt-hcb-asgwy-qa-usc-db",
                "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                "route": [
                  {
                    "address_prefix": "0.0.0.0/0",
                    "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
                    "next_hop_in_ip_address": "10.229.129.4",
                    "next_hop_type": "VirtualAppliance"
                  }
                ],
                "subnets": [
                  "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db"
                ],
                "tags": {
                  "costcenter": "792513",
                  "createdondate": "2024-12-18",
                  "cvsappid": "APM0015151",
                  "dataclassification": "restrictedD",
                  "environmentsubtype": "QA",
                  "environmenttype": "NonProd",
                  "itpmid": "16118",
                  "managedby": "ExpressCloud",
                  "sharedemailaddress": "GhaiR2@cvshealth.com"
                },
                "timeouts": null
              },
              "sensitive_values": {
                "route": [
                  {}
                ],
                "subnets": [
                  false
                ],
                "tags": {}
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_route_table.route_tables[\"pe\"]",
              "mode": "managed",
              "type": "azurerm_route_table",
              "name": "route_tables",
              "index": "pe",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "bgp_route_propagation_enabled": false,
                "disable_bgp_route_propagation": true,
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-pe",
                "location": "centralus",
                "name": "rt-hcb-asgwy-qa-usc-pe",
                "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                "route": [
                  {
                    "address_prefix": "0.0.0.0/0",
                    "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
                    "next_hop_in_ip_address": "10.229.129.4",
                    "next_hop_type": "VirtualAppliance"
                  }
                ],
                "subnets": [
                  "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe"
                ],
                "tags": {
                  "costcenter": "792513",
                  "createdondate": "2024-12-18",
                  "cvsappid": "APM0015151",
                  "dataclassification": "restrictedD",
                  "environmentsubtype": "QA",
                  "environmenttype": "NonProd",
                  "itpmid": "16118",
                  "managedby": "ExpressCloud",
                  "sharedemailaddress": "GhaiR2@cvshealth.com"
                },
                "timeouts": null
              },
              "sensitive_values": {
                "route": [
                  {}
                ],
                "subnets": [
                  false
                ],
                "tags": {}
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_route_table.route_tables[\"psqldb\"]",
              "mode": "managed",
              "type": "azurerm_route_table",
              "name": "route_tables",
              "index": "psqldb",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "bgp_route_propagation_enabled": false,
                "disable_bgp_route_propagation": true,
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-psqldb",
                "location": "centralus",
                "name": "rt-hcb-asgwy-qa-usc-psqldb",
                "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                "route": [
                  {
                    "address_prefix": "0.0.0.0/0",
                    "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
                    "next_hop_in_ip_address": "10.229.129.4",
                    "next_hop_type": "VirtualAppliance"
                  }
                ],
                "subnets": [
                  "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb"
                ],
                "tags": {
                  "costcenter": "792513",
                  "createdondate": "2024-12-18",
                  "cvsappid": "APM0015151",
                  "dataclassification": "restrictedD",
                  "environmentsubtype": "QA",
                  "environmenttype": "NonProd",
                  "itpmid": "16118",
                  "managedby": "ExpressCloud",
                  "sharedemailaddress": "GhaiR2@cvshealth.com"
                },
                "timeouts": null
              },
              "sensitive_values": {
                "route": [
                  {}
                ],
                "subnets": [
                  false
                ],
                "tags": {}
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_subnet.subnets[\"db\"]",
              "mode": "managed",
              "type": "azurerm_subnet",
              "name": "subnets",
              "index": "db",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "address_prefixes": [
                  "10.229.224.144/28"
                ],
                "default_outbound_access_enabled": true,
                "delegation": [],
                "enforce_private_link_endpoint_network_policies": false,
                "enforce_private_link_service_network_policies": false,
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db",
                "name": "snet-hcb-asgwy-qa-usc-db",
                "private_endpoint_network_policies": "Enabled",
                "private_endpoint_network_policies_enabled": true,
                "private_link_service_network_policies_enabled": true,
                "resource_group_name": "rg-sub-hcb-common-nonprod-usc-ntwk1",
                "service_endpoint_policy_ids": [],
                "service_endpoints": [
                  "Microsoft.AzureActiveDirectory",
                  "Microsoft.KeyVault",
                  "Microsoft.Storage"
                ],
                "timeouts": null,
                "virtual_network_name": "vnet-sub-hcb-common-nonprod-usc-host1"
              },
              "sensitive_values": {
                "address_prefixes": [
                  false
                ],
                "delegation": [],
                "service_endpoint_policy_ids": [],
                "service_endpoints": [
                  false,
                  false,
                  false
                ]
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_subnet.subnets[\"pe\"]",
              "mode": "managed",
              "type": "azurerm_subnet",
              "name": "subnets",
              "index": "pe",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "address_prefixes": [
                  "10.229.224.128/28"
                ],
                "default_outbound_access_enabled": true,
                "delegation": [],
                "enforce_private_link_endpoint_network_policies": false,
                "enforce_private_link_service_network_policies": false,
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
                "name": "snet-hcb-asgwy-qa-usc-pe",
                "private_endpoint_network_policies": "Enabled",
                "private_endpoint_network_policies_enabled": true,
                "private_link_service_network_policies_enabled": true,
                "resource_group_name": "rg-sub-hcb-common-nonprod-usc-ntwk1",
                "service_endpoint_policy_ids": [],
                "service_endpoints": [],
                "timeouts": null,
                "virtual_network_name": "vnet-sub-hcb-common-nonprod-usc-host1"
              },
              "sensitive_values": {
                "address_prefixes": [
                  false
                ],
                "delegation": [],
                "service_endpoint_policy_ids": [],
                "service_endpoints": []
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_subnet.subnets[\"psqldb\"]",
              "mode": "managed",
              "type": "azurerm_subnet",
              "name": "subnets",
              "index": "psqldb",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "address_prefixes": [
                  "10.229.224.112/28"
                ],
                "default_outbound_access_enabled": true,
                "delegation": [
                  {
                    "name": "Microsoft.DBforPostgreSQL/flexibleServers",
                    "service_delegation": [
                      {
                        "actions": [
                          "Microsoft.Network/virtualNetworks/subnets/join/action"
                        ],
                        "name": "Microsoft.DBforPostgreSQL/flexibleServers"
                      }
                    ]
                  }
                ],
                "enforce_private_link_endpoint_network_policies": false,
                "enforce_private_link_service_network_policies": false,
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb",
                "name": "snet-hcb-asgwy-qa-usc-psqldb",
                "private_endpoint_network_policies": "Enabled",
                "private_endpoint_network_policies_enabled": true,
                "private_link_service_network_policies_enabled": true,
                "resource_group_name": "rg-sub-hcb-common-nonprod-usc-ntwk1",
                "service_endpoint_policy_ids": [],
                "service_endpoints": [
                  "Microsoft.AzureActiveDirectory",
                  "Microsoft.KeyVault",
                  "Microsoft.Storage"
                ],
                "timeouts": null,
                "virtual_network_name": "vnet-sub-hcb-common-nonprod-usc-host1"
              },
              "sensitive_values": {
                "address_prefixes": [
                  false
                ],
                "delegation": [
                  {
                    "service_delegation": [
                      {
                        "actions": [
                          false
                        ]
                      }
                    ]
                  }
                ],
                "service_endpoint_policy_ids": [],
                "service_endpoints": [
                  false,
                  false,
                  false
                ]
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_subnet_network_security_group_association.subnets_nsgs_associations[\"db\"]",
              "mode": "managed",
              "type": "azurerm_subnet_network_security_group_association",
              "name": "subnets_nsgs_associations",
              "index": "db",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db",
                "network_security_group_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk",
                "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db",
                "timeouts": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_subnet_network_security_group_association.subnets_nsgs_associations[\"pe\"]",
              "mode": "managed",
              "type": "azurerm_subnet_network_security_group_association",
              "name": "subnets_nsgs_associations",
              "index": "pe",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
                "network_security_group_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk",
                "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
                "timeouts": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_subnet_network_security_group_association.subnets_nsgs_associations[\"psqldb\"]",
              "mode": "managed",
              "type": "azurerm_subnet_network_security_group_association",
              "name": "subnets_nsgs_associations",
              "index": "psqldb",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb",
                "network_security_group_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk",
                "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb",
                "timeouts": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_subnet_route_table_association.route_table_subnet_association[\"db\"]",
              "mode": "managed",
              "type": "azurerm_subnet_route_table_association",
              "name": "route_table_subnet_association",
              "index": "db",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db",
                "route_table_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-db",
                "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db",
                "timeouts": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_subnet_route_table_association.route_table_subnet_association[\"pe\"]",
              "mode": "managed",
              "type": "azurerm_subnet_route_table_association",
              "name": "route_table_subnet_association",
              "index": "pe",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
                "route_table_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-pe",
                "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
                "timeouts": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_subnet_route_table_association.route_table_subnet_association[\"psqldb\"]",
              "mode": "managed",
              "type": "azurerm_subnet_route_table_association",
              "name": "route_table_subnet_association",
              "index": "psqldb",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 0,
              "values": {
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb",
                "route_table_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-psqldb",
                "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb",
                "timeouts": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_user_assigned_identity.base_kv_uai[0]",
              "mode": "managed",
              "type": "azurerm_user_assigned_identity",
              "name": "base_kv_uai",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 1,
              "values": {
                "client_id": "2ea15786-ffd2-49b2-be48-288c91b64b29",
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity-asgwy-qa",
                "location": "centralus",
                "name": "identity-asgwy-qa",
                "principal_id": "2af739f2-d4fb-4e65-8d22-bb648fd34f1a",
                "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
                "tags": {
                  "costcenter": "792513",
                  "createdondate": "2024-12-18",
                  "cvsappid": "APM0015151",
                  "dataclassification": "restrictedD",
                  "environmentsubtype": "QA",
                  "environmenttype": "NonProd",
                  "itpmid": "16118",
                  "managedby": "ExpressCloud",
                  "sharedemailaddress": "GhaiR2@cvshealth.com"
                },
                "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {}
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_user_assigned_identity.ud_managed_identity[\"db\"]",
              "mode": "managed",
              "type": "azurerm_user_assigned_identity",
              "name": "ud_managed_identity",
              "index": "db",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 1,
              "values": {
                "client_id": "7dfeb293-fd73-41bb-8b3c-cd587b34aa50",
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-mi/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mi-hcb-asgwy-qa-usc-db",
                "location": "centralus",
                "name": "mi-hcb-asgwy-qa-usc-db",
                "principal_id": "bcc39471-b447-464d-9840-65d5acb7393f",
                "resource_group_name": "rg-hcb-asgwy-qa-usc-mi",
                "tags": {
                  "costcenter": "792513",
                  "createdondate": "2024-12-18",
                  "cvsappid": "APM0015151",
                  "dataclassification": "restrictedD",
                  "environmentsubtype": "QA",
                  "environmenttype": "NonProd",
                  "itpmid": "16118",
                  "managedby": "ExpressCloud",
                  "sharedemailaddress": "GhaiR2@cvshealth.com"
                },
                "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {}
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_user_assigned_identity.ud_managed_identity[\"psql-flex-ddl-asgwy-user\"]",
              "mode": "managed",
              "type": "azurerm_user_assigned_identity",
              "name": "ud_managed_identity",
              "index": "psql-flex-ddl-asgwy-user",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 1,
              "values": {
                "client_id": "c52962a5-d6e5-41c0-b69e-d736b7ed2c1c",
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-mi/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mi-hcb-asgwy-qa-usc-psql-flex-ddl-asgwy-user",
                "location": "centralus",
                "name": "mi-hcb-asgwy-qa-usc-psql-flex-ddl-asgwy-user",
                "principal_id": "e637341a-4481-4833-84f2-18b157173038",
                "resource_group_name": "rg-hcb-asgwy-qa-usc-mi",
                "tags": {
                  "costcenter": "792513",
                  "createdondate": "2024-12-18",
                  "cvsappid": "APM0015151",
                  "dataclassification": "restrictedD",
                  "environmentsubtype": "QA",
                  "environmenttype": "NonProd",
                  "itpmid": "16118",
                  "managedby": "ExpressCloud",
                  "sharedemailaddress": "GhaiR2@cvshealth.com"
                },
                "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {}
              }
            },
            {
              "address": "module.spoke_asgwy_qa.azurerm_user_assigned_identity.ud_managed_identity[\"psql-flex-dml-asgwy-user\"]",
              "mode": "managed",
              "type": "azurerm_user_assigned_identity",
              "name": "ud_managed_identity",
              "index": "psql-flex-dml-asgwy-user",
              "provider_name": "registry.terraform.io/hashicorp/azurerm",
              "schema_version": 1,
              "values": {
                "client_id": "c8e3a81c-9c53-42a0-b874-2df7154652d2",
                "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-mi/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mi-hcb-asgwy-qa-usc-psql-flex-dml-asgwy-user",
                "location": "centralus",
                "name": "mi-hcb-asgwy-qa-usc-psql-flex-dml-asgwy-user",
                "principal_id": "d0b83609-fdb9-41ac-b96e-ef0681ad75b2",
                "resource_group_name": "rg-hcb-asgwy-qa-usc-mi",
                "tags": {
                  "costcenter": "792513",
                  "createdondate": "2024-12-18",
                  "cvsappid": "APM0015151",
                  "dataclassification": "restrictedD",
                  "environmentsubtype": "QA",
                  "environmenttype": "NonProd",
                  "itpmid": "16118",
                  "managedby": "ExpressCloud",
                  "sharedemailaddress": "GhaiR2@cvshealth.com"
                },
                "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {}
              }
            },
            {
              "address": "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list[\"db\"]",
              "mode": "managed",
              "type": "infoblox_ipv4_network",
              "name": "subnet_cidr_list",
              "index": "db",
              "provider_name": "registry.terraform.io/infobloxopen/infoblox",
              "schema_version": 0,
              "values": {
                "allocate_prefix_len": 28,
                "cidr": "10.229.224.144/28",
                "comment": "EC - snet-hcb-asgwy-qa-usc-db",
                "ext_attrs": "{\"AKA\":\"SUB-HCB-COMMON-NONPROD\",\"Region\":\"centralus\",\"Site\":\"N/A\"}",
                "gateway": "",
                "id": "network/ZG5zLm5ldHdvcmskMTAuMjI5LjIyNC4xNDQvMjgvMA:10.229.224.144/28/Lab",
                "network_view": "Lab",
                "parent_cidr": "10.229.224.0/20",
                "reserve_ip": null,
                "reserve_ipv6": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list[\"pe\"]",
              "mode": "managed",
              "type": "infoblox_ipv4_network",
              "name": "subnet_cidr_list",
              "index": "pe",
              "provider_name": "registry.terraform.io/infobloxopen/infoblox",
              "schema_version": 0,
              "values": {
                "allocate_prefix_len": 28,
                "cidr": "10.229.224.128/28",
                "comment": "EC - snet-hcb-asgwy-qa-usc-pe",
                "ext_attrs": "{\"AKA\":\"SUB-HCB-COMMON-NONPROD\",\"Region\":\"centralus\",\"Site\":\"N/A\"}",
                "gateway": "",
                "id": "network/ZG5zLm5ldHdvcmskMTAuMjI5LjIyNC4xMjgvMjgvMA:10.229.224.128/28/Lab",
                "network_view": "Lab",
                "parent_cidr": "10.229.224.0/20",
                "reserve_ip": null,
                "reserve_ipv6": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list[\"psqldb\"]",
              "mode": "managed",
              "type": "infoblox_ipv4_network",
              "name": "subnet_cidr_list",
              "index": "psqldb",
              "provider_name": "registry.terraform.io/infobloxopen/infoblox",
              "schema_version": 0,
              "values": {
                "allocate_prefix_len": 28,
                "cidr": "10.229.224.112/28",
                "comment": "EC - snet-hcb-asgwy-qa-usc-psqldb",
                "ext_attrs": "{\"AKA\":\"SUB-HCB-COMMON-NONPROD\",\"Region\":\"centralus\",\"Site\":\"N/A\"}",
                "gateway": "",
                "id": "network/ZG5zLm5ldHdvcmskMTAuMjI5LjIyNC4xMTIvMjgvMA:10.229.224.112/28/Lab",
                "network_view": "Lab",
                "parent_cidr": "10.229.224.0/20",
                "reserve_ip": null,
                "reserve_ipv6": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.spoke_asgwy_qa.random_string.kvname",
              "mode": "managed",
              "type": "random_string",
              "name": "kvname",
              "provider_name": "registry.terraform.io/hashicorp/random",
              "schema_version": 2,
              "values": {
                "id": "8wvf5v",
                "keepers": null,
                "length": 6,
                "lower": true,
                "min_lower": 0,
                "min_numeric": 0,
                "min_special": 0,
                "min_upper": 0,
                "number": true,
                "numeric": true,
                "override_special": null,
                "result": "8wvf5v",
                "special": false,
                "upper": false
              },
              "sensitive_values": {}
            },
            {
              "address": "module.spoke_asgwy_qa.random_string.peering",
              "mode": "managed",
              "type": "random_string",
              "name": "peering",
              "provider_name": "registry.terraform.io/hashicorp/random",
              "schema_version": 2,
              "values": {
                "id": "dqj1sj",
                "keepers": null,
                "length": 6,
                "lower": true,
                "min_lower": 0,
                "min_numeric": 0,
                "min_special": 0,
                "min_upper": 0,
                "number": true,
                "numeric": true,
                "override_special": null,
                "result": "dqj1sj",
                "special": false,
                "upper": false
              },
              "sensitive_values": {}
            },
            {
              "address": "module.spoke_asgwy_qa.terraform_data.go_live_date",
              "mode": "managed",
              "type": "terraform_data",
              "name": "go_live_date",
              "provider_name": "terraform.io/builtin/terraform",
              "schema_version": 0,
              "values": {
                "id": "30e76630-a20a-e1f4-4c3a-00a38c067eb6",
                "input": null,
                "output": null,
                "triggers_replace": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.spoke_asgwy_qa.terraform_data.kv_rbac_scopes",
              "mode": "managed",
              "type": "terraform_data",
              "name": "kv_rbac_scopes",
              "provider_name": "terraform.io/builtin/terraform",
              "schema_version": 0,
              "values": {
                "id": "52ec6d6a-7101-2335-b282-4bb3dba644bb",
                "input": [
                  "Key Vault Crypto Service Encryption User_/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu_36899313-5270-482d-b156-57fc8b6f494e",
                  "Key Vault Crypto Service Encryption User_/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu_2af739f2-d4fb-4e65-8d22-bb648fd34f1a"
                ],
                "output": [
                  "Key Vault Crypto Service Encryption User_/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu_36899313-5270-482d-b156-57fc8b6f494e",
                  "Key Vault Crypto Service Encryption User_/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu_2af739f2-d4fb-4e65-8d22-bb648fd34f1a"
                ],
                "triggers_replace": null
              },
              "sensitive_values": {
                "input": [
                  false,
                  false
                ],
                "output": [
                  false,
                  false
                ]
              }
            },
            {
              "address": "module.spoke_asgwy_qa.terraform_data.ud_key_vaults_lock_triggers[\"db\"]",
              "mode": "managed",
              "type": "terraform_data",
              "name": "ud_key_vaults_lock_triggers",
              "index": "db",
              "provider_name": "terraform.io/builtin/terraform",
              "schema_version": 0,
              "values": {
                "id": "6d0f9e95-f85a-9086-e7f9-c835dd14417e",
                "input": {
                  "diag_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db|diag-kv-hcbasgwy0402db",
                  "key_vault_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
                  "pep_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.Network/privateEndpoints/pep-hcb-asgwy-qa-usc-kv-db"
                },
                "output": {
                  "diag_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db|diag-kv-hcbasgwy0402db",
                  "key_vault_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
                  "pep_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.Network/privateEndpoints/pep-hcb-asgwy-qa-usc-kv-db"
                },
                "triggers_replace": null
              },
              "sensitive_values": {
                "input": {},
                "output": {}
              }
            },
            {
              "address": "module.spoke_asgwy_qa.time_sleep.base_kv_role_propagation[0]",
              "mode": "managed",
              "type": "time_sleep",
              "name": "base_kv_role_propagation",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/time",
              "schema_version": 0,
              "values": {
                "create_duration": "30s",
                "destroy_duration": null,
                "id": "2024-12-18T20:30:08Z",
                "triggers": null
              },
              "sensitive_values": {}
            }
          ],
          "address": "module.spoke_asgwy_qa"
        }
      ]
    }
  },
  "resource_drift": [
    {
      "address": "module.spoke_asgwy_qa.azurerm_disk_encryption_set.base_kv_des[0]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_disk_encryption_set",
      "name": "base_kv_des",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "auto_key_rotation_enabled": false,
          "encryption_type": "EncryptionAtRestWithCustomerKey",
          "federated_client_id": "",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.Compute/diskEncryptionSets/des-asgwy-centralus-qa",
          "identity": [
            {
              "identity_ids": null,
              "principal_id": "36899313-5270-482d-b156-57fc8b6f494e",
              "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
              "type": "SystemAssigned"
            }
          ],
          "key_vault_key_id": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa/9b705eae3d5c4d96905ac4ced87b7ba3",
          "key_vault_key_url": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa/9b705eae3d5c4d96905ac4ced87b7ba3",
          "location": "centralus",
          "managed_hsm_key_id": null,
          "name": "des-asgwy-centralus-qa",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after": {
          "auto_key_rotation_enabled": false,
          "encryption_type": "EncryptionAtRestWithCustomerKey",
          "federated_client_id": "",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.Compute/diskEncryptionSets/des-asgwy-centralus-qa",
          "identity": [
            {
              "identity_ids": [],
              "principal_id": "36899313-5270-482d-b156-57fc8b6f494e",
              "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
              "type": "SystemAssigned"
            }
          ],
          "key_vault_key_id": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa/9b705eae3d5c4d96905ac4ced87b7ba3",
          "key_vault_key_url": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa/9b705eae3d5c4d96905ac4ced87b7ba3",
          "location": "centralus",
          "managed_hsm_key_id": null,
          "name": "des-asgwy-centralus-qa",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "identity": [
            {}
          ],
          "tags": {}
        },
        "after_sensitive": {
          "identity": [
            {
              "identity_ids": []
            }
          ],
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_key_vault.ud_key_vaults[\"db\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_key_vault",
      "name": "ud_key_vaults",
      "index": "db",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "access_policy": [],
          "contact": [],
          "enable_rbac_authorization": true,
          "enabled_for_deployment": false,
          "enabled_for_disk_encryption": false,
          "enabled_for_template_deployment": false,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
          "location": "centralus",
          "name": "kv-hcbasgwy0402db",
          "network_acls": [
            {
              "bypass": "AzureServices",
              "default_action": "Deny",
              "ip_rules": null,
              "virtual_network_subnet_ids": null
            }
          ],
          "public_network_access_enabled": false,
          "purge_protection_enabled": true,
          "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
          "sku_name": "premium",
          "soft_delete_retention_days": 7,
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
          "timeouts": null,
          "vault_uri": "https://kv-hcbasgwy0402db.vault.azure.net/"
        },
        "after": {
          "access_policy": [],
          "contact": [],
          "enable_rbac_authorization": true,
          "enabled_for_deployment": false,
          "enabled_for_disk_encryption": false,
          "enabled_for_template_deployment": false,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
          "location": "centralus",
          "name": "kv-hcbasgwy0402db",
          "network_acls": [
            {
              "bypass": "AzureServices",
              "default_action": "Deny",
              "ip_rules": [],
              "virtual_network_subnet_ids": []
            }
          ],
          "public_network_access_enabled": false,
          "purge_protection_enabled": true,
          "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
          "sku_name": "premium",
          "soft_delete_retention_days": 7,
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
          "timeouts": null,
          "vault_uri": "https://kv-hcbasgwy0402db.vault.azure.net/"
        },
        "after_unknown": {},
        "before_sensitive": {
          "access_policy": [],
          "contact": [],
          "network_acls": [
            {}
          ],
          "tags": {}
        },
        "after_sensitive": {
          "access_policy": [],
          "contact": [],
          "network_acls": [
            {
              "ip_rules": [],
              "virtual_network_subnet_ids": []
            }
          ],
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_key_vault_key.base_kv_key[0]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_key_vault_key",
      "name": "base_kv_key",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "curve": "",
          "e": "AQAB",
          "expiration_date": null,
          "id": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa/9b705eae3d5c4d96905ac4ced87b7ba3",
          "key_opts": [
            "decrypt",
            "encrypt",
            "unwrapKey",
            "wrapKey"
          ],
          "key_size": 2048,
          "key_type": "RSA-HSM",
          "key_vault_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu",
          "n": "miq8N1FWbB59Srh8rR3Ha1eazps1QXdPJCtBYQJqui3LgBmafW1PNcFgmQcoByUzmmisdnI40jAEH_pDVr5-zOKkqz41H1rn_qbb5LNlGJfgA1V9yS7Yqk5lnmCyYCpwZQTfO2khgZauAzY_-ATGvfDKmocA5PNchalcxis4CZLw1xgyagic_uFgIorMOGJ42RQrddDZJf5CjU4GKAbh9Msh6WZnD-wAFN67MI2h4WbRL3d6aDbJ_x5xn6Rc8imgOjbqr99QGUuZLKuBKb7eDO2TlK69Rq9sjMVSvCZf8iCEI2gnbQJm4_tSBU_Vk1tacrOn548ixoqaRzXLv1IGkw",
          "name": "key-asgwy-centralus-qa",
          "not_before_date": null,
          "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCaKrw3UVZsHn1KuHytHcdrV5rOmzVBd08kK0FhAmq6LcuAGZp9bU81wWCZBygHJTOaaKx2cjjSMAQf+kNWvn7M4qSrPjUfWuf+ptvks2UYl+ADVX3JLtiqTmWeYLJgKnBlBN87aSGBlq4DNj/4BMa98MqahwDk81yFqVzGKzgJkvDXGDJqCJz+4WAiisw4YnjZFCt10Nkl/kKNTgYoBuH0yyHpZmcP7AAU3rswjaHhZtEvd3poNsn/HnGfpFzyKaA6Nuqv31AZS5ksq4Epvt4M7ZOUrr1Gr2yMxVK8Jl/yIIQjaCdtAmbj+1IFT9WTW1pys6fnjyLGippHNcu/UgaT\n",
          "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmiq8N1FWbB59Srh8rR3H\na1eazps1QXdPJCtBYQJqui3LgBmafW1PNcFgmQcoByUzmmisdnI40jAEH/pDVr5+\nzOKkqz41H1rn/qbb5LNlGJfgA1V9yS7Yqk5lnmCyYCpwZQTfO2khgZauAzY/+ATG\nvfDKmocA5PNchalcxis4CZLw1xgyagic/uFgIorMOGJ42RQrddDZJf5CjU4GKAbh\n9Msh6WZnD+wAFN67MI2h4WbRL3d6aDbJ/x5xn6Rc8imgOjbqr99QGUuZLKuBKb7e\nDO2TlK69Rq9sjMVSvCZf8iCEI2gnbQJm4/tSBU/Vk1tacrOn548ixoqaRzXLv1IG\nkwIDAQAB\n-----END PUBLIC KEY-----\n",
          "resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu/keys/key-asgwy-centralus-qa/versions/9b705eae3d5c4d96905ac4ced87b7ba3",
          "resource_versionless_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu/keys/key-asgwy-centralus-qa",
          "rotation_policy": [
            {
              "automatic": [
                {
                  "time_after_creation": "P1Y",
                  "time_before_expiry": ""
                }
              ],
              "expire_after": "",
              "notify_before_expiry": ""
            }
          ],
          "tags": null,
          "timeouts": null,
          "version": "9b705eae3d5c4d96905ac4ced87b7ba3",
          "versionless_id": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa",
          "x": "",
          "y": ""
        },
        "after": {
          "curve": "",
          "e": "AQAB",
          "expiration_date": null,
          "id": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa/9b705eae3d5c4d96905ac4ced87b7ba3",
          "key_opts": [
            "decrypt",
            "encrypt",
            "unwrapKey",
            "wrapKey"
          ],
          "key_size": 2048,
          "key_type": "RSA-HSM",
          "key_vault_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu",
          "n": "miq8N1FWbB59Srh8rR3Ha1eazps1QXdPJCtBYQJqui3LgBmafW1PNcFgmQcoByUzmmisdnI40jAEH_pDVr5-zOKkqz41H1rn_qbb5LNlGJfgA1V9yS7Yqk5lnmCyYCpwZQTfO2khgZauAzY_-ATGvfDKmocA5PNchalcxis4CZLw1xgyagic_uFgIorMOGJ42RQrddDZJf5CjU4GKAbh9Msh6WZnD-wAFN67MI2h4WbRL3d6aDbJ_x5xn6Rc8imgOjbqr99QGUuZLKuBKb7eDO2TlK69Rq9sjMVSvCZf8iCEI2gnbQJm4_tSBU_Vk1tacrOn548ixoqaRzXLv1IGkw",
          "name": "key-asgwy-centralus-qa",
          "not_before_date": null,
          "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCaKrw3UVZsHn1KuHytHcdrV5rOmzVBd08kK0FhAmq6LcuAGZp9bU81wWCZBygHJTOaaKx2cjjSMAQf+kNWvn7M4qSrPjUfWuf+ptvks2UYl+ADVX3JLtiqTmWeYLJgKnBlBN87aSGBlq4DNj/4BMa98MqahwDk81yFqVzGKzgJkvDXGDJqCJz+4WAiisw4YnjZFCt10Nkl/kKNTgYoBuH0yyHpZmcP7AAU3rswjaHhZtEvd3poNsn/HnGfpFzyKaA6Nuqv31AZS5ksq4Epvt4M7ZOUrr1Gr2yMxVK8Jl/yIIQjaCdtAmbj+1IFT9WTW1pys6fnjyLGippHNcu/UgaT\n",
          "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmiq8N1FWbB59Srh8rR3H\na1eazps1QXdPJCtBYQJqui3LgBmafW1PNcFgmQcoByUzmmisdnI40jAEH/pDVr5+\nzOKkqz41H1rn/qbb5LNlGJfgA1V9yS7Yqk5lnmCyYCpwZQTfO2khgZauAzY/+ATG\nvfDKmocA5PNchalcxis4CZLw1xgyagic/uFgIorMOGJ42RQrddDZJf5CjU4GKAbh\n9Msh6WZnD+wAFN67MI2h4WbRL3d6aDbJ/x5xn6Rc8imgOjbqr99QGUuZLKuBKb7e\nDO2TlK69Rq9sjMVSvCZf8iCEI2gnbQJm4/tSBU/Vk1tacrOn548ixoqaRzXLv1IG\nkwIDAQAB\n-----END PUBLIC KEY-----\n",
          "resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu/keys/key-asgwy-centralus-qa/versions/9b705eae3d5c4d96905ac4ced87b7ba3",
          "resource_versionless_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu/keys/key-asgwy-centralus-qa",
          "rotation_policy": [
            {
              "automatic": [
                {
                  "time_after_creation": "P1Y",
                  "time_before_expiry": ""
                }
              ],
              "expire_after": "",
              "notify_before_expiry": ""
            }
          ],
          "tags": {},
          "timeouts": null,
          "version": "9b705eae3d5c4d96905ac4ced87b7ba3",
          "versionless_id": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa",
          "x": "",
          "y": ""
        },
        "after_unknown": {},
        "before_sensitive": {
          "key_opts": [
            false,
            false,
            false,
            false
          ],
          "rotation_policy": [
            {
              "automatic": [
                {}
              ]
            }
          ]
        },
        "after_sensitive": {
          "key_opts": [
            false,
            false,
            false,
            false
          ],
          "rotation_policy": [
            {
              "automatic": [
                {}
              ]
            }
          ],
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_log_analytics_workspace.log_analytics_workspace[0]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_log_analytics_workspace",
      "name": "log_analytics_workspace",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "allow_resource_only_permissions": true,
          "cmk_for_query_forced": false,
          "daily_quota_gb": -1,
          "data_collection_rule_id": "",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.OperationalInsights/workspaces/log-hcb-asgwy-qa-usc",
          "identity": [],
          "immediate_data_purge_on_30_days_enabled": false,
          "internet_ingestion_enabled": true,
          "internet_query_enabled": true,
          "local_authentication_disabled": false,
          "location": "centralus",
          "name": "log-hcb-asgwy-qa-usc",
          "primary_shared_key": "mYiEYXQpldg2vKyOkYEeQ+ctkfGqKA5fFqetoy4EjLM6YxRqJTfXCRG+viNrTsDZAo2zkeeKrzKcoefVSCXUOg==",
          "reservation_capacity_in_gb_per_day": null,
          "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
          "retention_in_days": 30,
          "secondary_shared_key": "55adVuGSym8ZN5b+HyQ1kaC0B87AM5wrJmx4jk5xq9kAUUhFCVnziMIW2aDtOxUmUmvbOi3K5YATAH+hUrT62A==",
          "sku": "PerGB2018",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null,
          "workspace_id": "bf046fda-638e-44f8-b099-8abd2bdaa859"
        },
        "after": {
          "allow_resource_only_permissions": true,
          "cmk_for_query_forced": false,
          "daily_quota_gb": -1,
          "data_collection_rule_id": "",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.OperationalInsights/workspaces/log-hcb-asgwy-qa-usc",
          "identity": [],
          "immediate_data_purge_on_30_days_enabled": false,
          "internet_ingestion_enabled": true,
          "internet_query_enabled": true,
          "local_authentication_disabled": false,
          "location": "centralus",
          "name": "log-hcb-asgwy-qa-usc",
          "primary_shared_key": "mYiEYXQpldg2vKyOkYEeQ+ctkfGqKA5fFqetoy4EjLM6YxRqJTfXCRG+viNrTsDZAo2zkeeKrzKcoefVSCXUOg==",
          "reservation_capacity_in_gb_per_day": null,
          "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
          "retention_in_days": 30,
          "secondary_shared_key": "55adVuGSym8ZN5b+HyQ1kaC0B87AM5wrJmx4jk5xq9kAUUhFCVnziMIW2aDtOxUmUmvbOi3K5YATAH+hUrT62A==",
          "sku": "PerGB2018",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null,
          "workspace_id": "bf046fda-638e-44f8-b099-8abd2bdaa859"
        },
        "after_unknown": {},
        "before_sensitive": {
          "identity": [],
          "primary_shared_key": true,
          "secondary_shared_key": true,
          "tags": {}
        },
        "after_sensitive": {
          "identity": [],
          "primary_shared_key": true,
          "secondary_shared_key": true,
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_monitor_diagnostic_setting.diag_ud_key_vaults[\"db\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_monitor_diagnostic_setting",
      "name": "diag_ud_key_vaults",
      "index": "db",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "enabled_log": [
            {
              "category": "",
              "category_group": "audit",
              "retention_policy": [
                {
                  "days": null,
                  "enabled": false
                }
              ]
            }
          ],
          "eventhub_authorization_rule_id": "/subscriptions/7f81ff32-74f5-45e3-bc03-a8141f72754d/resourceGroups/RG-CVS-SharedServices-2/providers/Microsoft.EventHub/namespaces/rac2ehnpp2v/authorizationRules/RootManageSharedAccessKey",
          "eventhub_name": "cvs-splunk-azure-logs",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db|diag-kv-hcbasgwy0402db",
          "log": [
            {
              "category": "",
              "category_group": "allLogs",
              "enabled": false,
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            },
            {
              "category": "",
              "category_group": "audit",
              "enabled": true,
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            }
          ],
          "log_analytics_destination_type": "AzureDiagnostics",
          "log_analytics_workspace_id": "",
          "metric": [],
          "name": "diag-kv-hcbasgwy0402db",
          "partner_solution_id": null,
          "storage_account_id": null,
          "target_resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
          "timeouts": null
        },
        "after": {
          "enabled_log": [
            {
              "category": "",
              "category_group": "audit",
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            }
          ],
          "eventhub_authorization_rule_id": "/subscriptions/7f81ff32-74f5-45e3-bc03-a8141f72754d/resourceGroups/RG-CVS-SharedServices-2/providers/Microsoft.EventHub/namespaces/rac2ehnpp2v/authorizationRules/RootManageSharedAccessKey",
          "eventhub_name": "cvs-splunk-azure-logs",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db|diag-kv-hcbasgwy0402db",
          "log": [
            {
              "category": "",
              "category_group": "allLogs",
              "enabled": false,
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            },
            {
              "category": "",
              "category_group": "audit",
              "enabled": true,
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            }
          ],
          "log_analytics_destination_type": "AzureDiagnostics",
          "log_analytics_workspace_id": "",
          "metric": [
            {
              "category": "AllMetrics",
              "enabled": false,
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            }
          ],
          "name": "diag-kv-hcbasgwy0402db",
          "partner_solution_id": null,
          "storage_account_id": null,
          "target_resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "enabled_log": [
            {
              "retention_policy": [
                {}
              ]
            }
          ],
          "log": [
            {
              "retention_policy": [
                {}
              ]
            },
            {
              "retention_policy": [
                {}
              ]
            }
          ],
          "metric": []
        },
        "after_sensitive": {
          "enabled_log": [
            {
              "retention_policy": [
                {}
              ]
            }
          ],
          "log": [
            {
              "retention_policy": [
                {}
              ]
            },
            {
              "retention_policy": [
                {}
              ]
            }
          ],
          "metric": [
            {
              "retention_policy": [
                {}
              ]
            }
          ]
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_monitor_diagnostic_setting.law_diagnostics_eventhub[0]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_monitor_diagnostic_setting",
      "name": "law_diagnostics_eventhub",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "enabled_log": [
            {
              "category": "",
              "category_group": "allLogs",
              "retention_policy": [
                {
                  "days": null,
                  "enabled": false
                }
              ]
            },
            {
              "category": "",
              "category_group": "audit",
              "retention_policy": [
                {
                  "days": null,
                  "enabled": false
                }
              ]
            }
          ],
          "eventhub_authorization_rule_id": "/subscriptions/7f81ff32-74f5-45e3-bc03-a8141f72754d/resourceGroups/RG-CVS-SharedServices-2/providers/Microsoft.EventHub/namespaces/rac2ehnpp2v/authorizationRules/RootManageSharedAccessKey",
          "eventhub_name": "cvs-splunk-azure-logs",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.OperationalInsights/workspaces/log-hcb-asgwy-qa-usc|diag-log-hcb-asgwy-qa-usc",
          "log": [
            {
              "category": "",
              "category_group": "allLogs",
              "enabled": true,
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            },
            {
              "category": "",
              "category_group": "audit",
              "enabled": true,
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            }
          ],
          "log_analytics_destination_type": "",
          "log_analytics_workspace_id": "",
          "metric": [],
          "name": "diag-log-hcb-asgwy-qa-usc",
          "partner_solution_id": null,
          "storage_account_id": null,
          "target_resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.OperationalInsights/workspaces/log-hcb-asgwy-qa-usc",
          "timeouts": null
        },
        "after": {
          "enabled_log": [
            {
              "category": "",
              "category_group": "allLogs",
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            },
            {
              "category": "",
              "category_group": "audit",
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            }
          ],
          "eventhub_authorization_rule_id": "/subscriptions/7f81ff32-74f5-45e3-bc03-a8141f72754d/resourceGroups/RG-CVS-SharedServices-2/providers/Microsoft.EventHub/namespaces/rac2ehnpp2v/authorizationRules/RootManageSharedAccessKey",
          "eventhub_name": "cvs-splunk-azure-logs",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.OperationalInsights/workspaces/log-hcb-asgwy-qa-usc|diag-log-hcb-asgwy-qa-usc",
          "log": [
            {
              "category": "",
              "category_group": "allLogs",
              "enabled": true,
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            },
            {
              "category": "",
              "category_group": "audit",
              "enabled": true,
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            }
          ],
          "log_analytics_destination_type": "",
          "log_analytics_workspace_id": "",
          "metric": [
            {
              "category": "AllMetrics",
              "enabled": false,
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            }
          ],
          "name": "diag-log-hcb-asgwy-qa-usc",
          "partner_solution_id": null,
          "storage_account_id": null,
          "target_resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.OperationalInsights/workspaces/log-hcb-asgwy-qa-usc",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "enabled_log": [
            {
              "retention_policy": [
                {}
              ]
            },
            {
              "retention_policy": [
                {}
              ]
            }
          ],
          "log": [
            {
              "retention_policy": [
                {}
              ]
            },
            {
              "retention_policy": [
                {}
              ]
            }
          ],
          "metric": []
        },
        "after_sensitive": {
          "enabled_log": [
            {
              "retention_policy": [
                {}
              ]
            },
            {
              "retention_policy": [
                {}
              ]
            }
          ],
          "log": [
            {
              "retention_policy": [
                {}
              ]
            },
            {
              "retention_policy": [
                {}
              ]
            }
          ],
          "metric": [
            {
              "retention_policy": [
                {}
              ]
            }
          ]
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_network_security_group.network_security_group[0]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_network_security_group",
      "name": "network_security_group",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk",
          "location": "centralus",
          "name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "security_rule": [],
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk",
          "location": "centralus",
          "name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "security_rule": [
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "",
              "destination_address_prefixes": [
                "10.229.224.112/28",
                "10.229.224.128/28",
                "10.229.224.144/28"
              ],
              "destination_application_security_group_ids": [],
              "destination_port_range": "443",
              "destination_port_ranges": [],
              "direction": "Inbound",
              "name": "AllowInternalHttpsTrafficInbound",
              "priority": 4020,
              "protocol": "*",
              "source_address_prefix": "",
              "source_address_prefixes": [
                "10.0.0.0/8",
                "157.121.0.0/16",
                "167.69.0.0/16",
                "172.16.0.0/12",
                "198.187.64.0/18",
                "204.99.0.0/17",
                "206.213.0.0/16"
              ],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "10.229.224.112/28",
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_range": "5432",
              "destination_port_ranges": [],
              "direction": "Inbound",
              "name": "AllowPostgresTrafficFromInternalInbound",
              "priority": 4033,
              "protocol": "*",
              "source_address_prefix": "",
              "source_address_prefixes": [
                "10.0.0.0/8",
                "157.121.0.0/16",
                "167.69.0.0/16",
                "172.16.0.0/12",
                "198.187.64.0/18",
                "204.99.0.0/17",
                "206.213.0.0/16"
              ],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "10.229.224.112/28",
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_range": "5432",
              "destination_port_ranges": [],
              "direction": "Inbound",
              "name": "AllowPostgresTrafficSelfInbound",
              "priority": 4030,
              "protocol": "*",
              "source_address_prefix": "10.229.224.112/28",
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "10.229.224.112/28",
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_range": "5432",
              "destination_port_ranges": [],
              "direction": "Outbound",
              "name": "AllowPostgresTrafficSelfOutbound",
              "priority": 4030,
              "protocol": "*",
              "source_address_prefix": "10.229.224.112/28",
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "AzureActiveDirectory",
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_range": "443",
              "destination_port_ranges": [],
              "direction": "Outbound",
              "name": "AllowPostgresToAzureADOutbound",
              "priority": 4032,
              "protocol": "*",
              "source_address_prefix": "10.229.224.112/28",
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "Storage",
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_range": "443",
              "destination_port_ranges": [],
              "direction": "Outbound",
              "name": "AllowPostgresToAzureStorageOutbound",
              "priority": 4031,
              "protocol": "*",
              "source_address_prefix": "10.229.224.112/28",
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            },
            {
              "access": "Deny",
              "description": "",
              "destination_address_prefix": "*",
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_range": "*",
              "destination_port_ranges": [],
              "direction": "Inbound",
              "name": "DenyAllInbound",
              "priority": 4096,
              "protocol": "*",
              "source_address_prefix": "*",
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            },
            {
              "access": "Deny",
              "description": "",
              "destination_address_prefix": "*",
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_range": "*",
              "destination_port_ranges": [],
              "direction": "Outbound",
              "name": "DenyAllOutbound",
              "priority": 4096,
              "protocol": "*",
              "source_address_prefix": "*",
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            }
          ],
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "security_rule": [],
          "tags": {}
        },
        "after_sensitive": {
          "security_rule": [
            {
              "destination_address_prefixes": [
                false,
                false,
                false
              ],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [
                false,
                false,
                false,
                false,
                false,
                false,
                false
              ],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            },
            {
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [
                false,
                false,
                false,
                false,
                false,
                false,
                false
              ],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            },
            {
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            },
            {
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            },
            {
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            },
            {
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            },
            {
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            },
            {
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            }
          ],
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowInternalHttpsTrafficInbound\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_network_security_rule",
      "name": "network_security_rules",
      "index": "AllowInternalHttpsTrafficInbound",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "",
          "destination_address_prefixes": [
            "10.229.224.112/28",
            "10.229.224.128/28",
            "10.229.224.144/28"
          ],
          "destination_application_security_group_ids": null,
          "destination_port_range": "443",
          "destination_port_ranges": null,
          "direction": "Inbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowInternalHttpsTrafficInbound",
          "name": "AllowInternalHttpsTrafficInbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4020,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "",
          "source_address_prefixes": [
            "10.0.0.0/8",
            "157.121.0.0/16",
            "167.69.0.0/16",
            "172.16.0.0/12",
            "198.187.64.0/18",
            "204.99.0.0/17",
            "206.213.0.0/16"
          ],
          "source_application_security_group_ids": null,
          "source_port_range": "*",
          "source_port_ranges": null,
          "timeouts": null
        },
        "after": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "",
          "destination_address_prefixes": [
            "10.229.224.112/28",
            "10.229.224.128/28",
            "10.229.224.144/28"
          ],
          "destination_application_security_group_ids": [],
          "destination_port_range": "443",
          "destination_port_ranges": [],
          "direction": "Inbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowInternalHttpsTrafficInbound",
          "name": "AllowInternalHttpsTrafficInbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4020,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "",
          "source_address_prefixes": [
            "10.0.0.0/8",
            "157.121.0.0/16",
            "167.69.0.0/16",
            "172.16.0.0/12",
            "198.187.64.0/18",
            "204.99.0.0/17",
            "206.213.0.0/16"
          ],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "destination_address_prefixes": [
            false,
            false,
            false
          ],
          "source_address_prefixes": [
            false,
            false,
            false,
            false,
            false,
            false,
            false
          ]
        },
        "after_sensitive": {
          "destination_address_prefixes": [
            false,
            false,
            false
          ],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [
            false,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowPostgresToAzureADOutbound\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_network_security_rule",
      "name": "network_security_rules",
      "index": "AllowPostgresToAzureADOutbound",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "AzureActiveDirectory",
          "destination_address_prefixes": null,
          "destination_application_security_group_ids": null,
          "destination_port_range": "443",
          "destination_port_ranges": null,
          "direction": "Outbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresToAzureADOutbound",
          "name": "AllowPostgresToAzureADOutbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4032,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "10.229.224.112/28",
          "source_address_prefixes": null,
          "source_application_security_group_ids": null,
          "source_port_range": "*",
          "source_port_ranges": null,
          "timeouts": null
        },
        "after": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "AzureActiveDirectory",
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_range": "443",
          "destination_port_ranges": [],
          "direction": "Outbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresToAzureADOutbound",
          "name": "AllowPostgresToAzureADOutbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4032,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "10.229.224.112/28",
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowPostgresToAzureStorageOutbound\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_network_security_rule",
      "name": "network_security_rules",
      "index": "AllowPostgresToAzureStorageOutbound",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "Storage",
          "destination_address_prefixes": null,
          "destination_application_security_group_ids": null,
          "destination_port_range": "443",
          "destination_port_ranges": null,
          "direction": "Outbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresToAzureStorageOutbound",
          "name": "AllowPostgresToAzureStorageOutbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4031,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "10.229.224.112/28",
          "source_address_prefixes": null,
          "source_application_security_group_ids": null,
          "source_port_range": "*",
          "source_port_ranges": null,
          "timeouts": null
        },
        "after": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "Storage",
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_range": "443",
          "destination_port_ranges": [],
          "direction": "Outbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresToAzureStorageOutbound",
          "name": "AllowPostgresToAzureStorageOutbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4031,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "10.229.224.112/28",
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowPostgresTrafficFromInternalInbound\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_network_security_rule",
      "name": "network_security_rules",
      "index": "AllowPostgresTrafficFromInternalInbound",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "10.229.224.112/28",
          "destination_address_prefixes": null,
          "destination_application_security_group_ids": null,
          "destination_port_range": "5432",
          "destination_port_ranges": null,
          "direction": "Inbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresTrafficFromInternalInbound",
          "name": "AllowPostgresTrafficFromInternalInbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4033,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "",
          "source_address_prefixes": [
            "10.0.0.0/8",
            "157.121.0.0/16",
            "167.69.0.0/16",
            "172.16.0.0/12",
            "198.187.64.0/18",
            "204.99.0.0/17",
            "206.213.0.0/16"
          ],
          "source_application_security_group_ids": null,
          "source_port_range": "*",
          "source_port_ranges": null,
          "timeouts": null
        },
        "after": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "10.229.224.112/28",
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_range": "5432",
          "destination_port_ranges": [],
          "direction": "Inbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresTrafficFromInternalInbound",
          "name": "AllowPostgresTrafficFromInternalInbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4033,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "",
          "source_address_prefixes": [
            "10.0.0.0/8",
            "157.121.0.0/16",
            "167.69.0.0/16",
            "172.16.0.0/12",
            "198.187.64.0/18",
            "204.99.0.0/17",
            "206.213.0.0/16"
          ],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "source_address_prefixes": [
            false,
            false,
            false,
            false,
            false,
            false,
            false
          ]
        },
        "after_sensitive": {
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [
            false,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowPostgresTrafficSelfInbound\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_network_security_rule",
      "name": "network_security_rules",
      "index": "AllowPostgresTrafficSelfInbound",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "10.229.224.112/28",
          "destination_address_prefixes": null,
          "destination_application_security_group_ids": null,
          "destination_port_range": "5432",
          "destination_port_ranges": null,
          "direction": "Inbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresTrafficSelfInbound",
          "name": "AllowPostgresTrafficSelfInbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4030,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "10.229.224.112/28",
          "source_address_prefixes": null,
          "source_application_security_group_ids": null,
          "source_port_range": "*",
          "source_port_ranges": null,
          "timeouts": null
        },
        "after": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "10.229.224.112/28",
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_range": "5432",
          "destination_port_ranges": [],
          "direction": "Inbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresTrafficSelfInbound",
          "name": "AllowPostgresTrafficSelfInbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4030,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "10.229.224.112/28",
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowPostgresTrafficSelfOutbound\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_network_security_rule",
      "name": "network_security_rules",
      "index": "AllowPostgresTrafficSelfOutbound",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "10.229.224.112/28",
          "destination_address_prefixes": null,
          "destination_application_security_group_ids": null,
          "destination_port_range": "5432",
          "destination_port_ranges": null,
          "direction": "Outbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresTrafficSelfOutbound",
          "name": "AllowPostgresTrafficSelfOutbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4030,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "10.229.224.112/28",
          "source_address_prefixes": null,
          "source_application_security_group_ids": null,
          "source_port_range": "*",
          "source_port_ranges": null,
          "timeouts": null
        },
        "after": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "10.229.224.112/28",
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_range": "5432",
          "destination_port_ranges": [],
          "direction": "Outbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresTrafficSelfOutbound",
          "name": "AllowPostgresTrafficSelfOutbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4030,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "10.229.224.112/28",
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"DenyAllInbound\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_network_security_rule",
      "name": "network_security_rules",
      "index": "DenyAllInbound",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "access": "Deny",
          "description": "",
          "destination_address_prefix": "*",
          "destination_address_prefixes": null,
          "destination_application_security_group_ids": null,
          "destination_port_range": "*",
          "destination_port_ranges": null,
          "direction": "Inbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/DenyAllInbound",
          "name": "DenyAllInbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4096,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "*",
          "source_address_prefixes": null,
          "source_application_security_group_ids": null,
          "source_port_range": "*",
          "source_port_ranges": null,
          "timeouts": null
        },
        "after": {
          "access": "Deny",
          "description": "",
          "destination_address_prefix": "*",
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_range": "*",
          "destination_port_ranges": [],
          "direction": "Inbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/DenyAllInbound",
          "name": "DenyAllInbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4096,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "*",
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"DenyAllOutbound\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_network_security_rule",
      "name": "network_security_rules",
      "index": "DenyAllOutbound",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "access": "Deny",
          "description": "",
          "destination_address_prefix": "*",
          "destination_address_prefixes": null,
          "destination_application_security_group_ids": null,
          "destination_port_range": "*",
          "destination_port_ranges": null,
          "direction": "Outbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/DenyAllOutbound",
          "name": "DenyAllOutbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4096,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "*",
          "source_address_prefixes": null,
          "source_application_security_group_ids": null,
          "source_port_range": "*",
          "source_port_ranges": null,
          "timeouts": null
        },
        "after": {
          "access": "Deny",
          "description": "",
          "destination_address_prefix": "*",
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_range": "*",
          "destination_port_ranges": [],
          "direction": "Outbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/DenyAllOutbound",
          "name": "DenyAllOutbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4096,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "*",
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_route_table.route_tables[\"db\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_route_table",
      "name": "route_tables",
      "index": "db",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "bgp_route_propagation_enabled": false,
          "disable_bgp_route_propagation": true,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-db",
          "location": "centralus",
          "name": "rt-hcb-asgwy-qa-usc-db",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "route": [],
          "subnets": [],
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after": {
          "bgp_route_propagation_enabled": false,
          "disable_bgp_route_propagation": true,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-db",
          "location": "centralus",
          "name": "rt-hcb-asgwy-qa-usc-db",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "route": [
            {
              "address_prefix": "0.0.0.0/0",
              "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
              "next_hop_in_ip_address": "10.229.129.4",
              "next_hop_type": "VirtualAppliance"
            }
          ],
          "subnets": [
            "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db"
          ],
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "route": [],
          "subnets": [],
          "tags": {}
        },
        "after_sensitive": {
          "route": [
            {}
          ],
          "subnets": [
            false
          ],
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_route_table.route_tables[\"pe\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_route_table",
      "name": "route_tables",
      "index": "pe",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "bgp_route_propagation_enabled": false,
          "disable_bgp_route_propagation": true,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-pe",
          "location": "centralus",
          "name": "rt-hcb-asgwy-qa-usc-pe",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "route": [],
          "subnets": [],
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after": {
          "bgp_route_propagation_enabled": false,
          "disable_bgp_route_propagation": true,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-pe",
          "location": "centralus",
          "name": "rt-hcb-asgwy-qa-usc-pe",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "route": [
            {
              "address_prefix": "0.0.0.0/0",
              "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
              "next_hop_in_ip_address": "10.229.129.4",
              "next_hop_type": "VirtualAppliance"
            }
          ],
          "subnets": [
            "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe"
          ],
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "route": [],
          "subnets": [],
          "tags": {}
        },
        "after_sensitive": {
          "route": [
            {}
          ],
          "subnets": [
            false
          ],
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_route_table.route_tables[\"psqldb\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_route_table",
      "name": "route_tables",
      "index": "psqldb",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "bgp_route_propagation_enabled": false,
          "disable_bgp_route_propagation": true,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-psqldb",
          "location": "centralus",
          "name": "rt-hcb-asgwy-qa-usc-psqldb",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "route": [],
          "subnets": [],
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after": {
          "bgp_route_propagation_enabled": false,
          "disable_bgp_route_propagation": true,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-psqldb",
          "location": "centralus",
          "name": "rt-hcb-asgwy-qa-usc-psqldb",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "route": [
            {
              "address_prefix": "0.0.0.0/0",
              "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
              "next_hop_in_ip_address": "10.229.129.4",
              "next_hop_type": "VirtualAppliance"
            }
          ],
          "subnets": [
            "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb"
          ],
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "route": [],
          "subnets": [],
          "tags": {}
        },
        "after_sensitive": {
          "route": [
            {}
          ],
          "subnets": [
            false
          ],
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_subnet.subnets[\"db\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_subnet",
      "name": "subnets",
      "index": "db",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "address_prefixes": [
            "10.229.224.144/28"
          ],
          "default_outbound_access_enabled": true,
          "delegation": [],
          "enforce_private_link_endpoint_network_policies": false,
          "enforce_private_link_service_network_policies": false,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db",
          "name": "snet-hcb-asgwy-qa-usc-db",
          "private_endpoint_network_policies": "Enabled",
          "private_endpoint_network_policies_enabled": true,
          "private_link_service_network_policies_enabled": true,
          "resource_group_name": "rg-sub-hcb-common-nonprod-usc-ntwk1",
          "service_endpoint_policy_ids": null,
          "service_endpoints": [
            "Microsoft.AzureActiveDirectory",
            "Microsoft.KeyVault",
            "Microsoft.Storage"
          ],
          "timeouts": null,
          "virtual_network_name": "vnet-sub-hcb-common-nonprod-usc-host1"
        },
        "after": {
          "address_prefixes": [
            "10.229.224.144/28"
          ],
          "default_outbound_access_enabled": true,
          "delegation": [],
          "enforce_private_link_endpoint_network_policies": false,
          "enforce_private_link_service_network_policies": false,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db",
          "name": "snet-hcb-asgwy-qa-usc-db",
          "private_endpoint_network_policies": "Enabled",
          "private_endpoint_network_policies_enabled": true,
          "private_link_service_network_policies_enabled": true,
          "resource_group_name": "rg-sub-hcb-common-nonprod-usc-ntwk1",
          "service_endpoint_policy_ids": [],
          "service_endpoints": [
            "Microsoft.AzureActiveDirectory",
            "Microsoft.KeyVault",
            "Microsoft.Storage"
          ],
          "timeouts": null,
          "virtual_network_name": "vnet-sub-hcb-common-nonprod-usc-host1"
        },
        "after_unknown": {},
        "before_sensitive": {
          "address_prefixes": [
            false
          ],
          "delegation": [],
          "service_endpoints": [
            false,
            false,
            false
          ]
        },
        "after_sensitive": {
          "address_prefixes": [
            false
          ],
          "delegation": [],
          "service_endpoint_policy_ids": [],
          "service_endpoints": [
            false,
            false,
            false
          ]
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_subnet.subnets[\"pe\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_subnet",
      "name": "subnets",
      "index": "pe",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "address_prefixes": [
            "10.229.224.128/28"
          ],
          "default_outbound_access_enabled": true,
          "delegation": [],
          "enforce_private_link_endpoint_network_policies": false,
          "enforce_private_link_service_network_policies": false,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
          "name": "snet-hcb-asgwy-qa-usc-pe",
          "private_endpoint_network_policies": "Enabled",
          "private_endpoint_network_policies_enabled": true,
          "private_link_service_network_policies_enabled": true,
          "resource_group_name": "rg-sub-hcb-common-nonprod-usc-ntwk1",
          "service_endpoint_policy_ids": null,
          "service_endpoints": null,
          "timeouts": null,
          "virtual_network_name": "vnet-sub-hcb-common-nonprod-usc-host1"
        },
        "after": {
          "address_prefixes": [
            "10.229.224.128/28"
          ],
          "default_outbound_access_enabled": true,
          "delegation": [],
          "enforce_private_link_endpoint_network_policies": false,
          "enforce_private_link_service_network_policies": false,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
          "name": "snet-hcb-asgwy-qa-usc-pe",
          "private_endpoint_network_policies": "Enabled",
          "private_endpoint_network_policies_enabled": true,
          "private_link_service_network_policies_enabled": true,
          "resource_group_name": "rg-sub-hcb-common-nonprod-usc-ntwk1",
          "service_endpoint_policy_ids": [],
          "service_endpoints": [],
          "timeouts": null,
          "virtual_network_name": "vnet-sub-hcb-common-nonprod-usc-host1"
        },
        "after_unknown": {},
        "before_sensitive": {
          "address_prefixes": [
            false
          ],
          "delegation": []
        },
        "after_sensitive": {
          "address_prefixes": [
            false
          ],
          "delegation": [],
          "service_endpoint_policy_ids": [],
          "service_endpoints": []
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_subnet.subnets[\"psqldb\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_subnet",
      "name": "subnets",
      "index": "psqldb",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "address_prefixes": [
            "10.229.224.112/28"
          ],
          "default_outbound_access_enabled": true,
          "delegation": [
            {
              "name": "Microsoft.DBforPostgreSQL/flexibleServers",
              "service_delegation": [
                {
                  "actions": [
                    "Microsoft.Network/virtualNetworks/subnets/join/action"
                  ],
                  "name": "Microsoft.DBforPostgreSQL/flexibleServers"
                }
              ]
            }
          ],
          "enforce_private_link_endpoint_network_policies": false,
          "enforce_private_link_service_network_policies": false,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb",
          "name": "snet-hcb-asgwy-qa-usc-psqldb",
          "private_endpoint_network_policies": "Enabled",
          "private_endpoint_network_policies_enabled": true,
          "private_link_service_network_policies_enabled": true,
          "resource_group_name": "rg-sub-hcb-common-nonprod-usc-ntwk1",
          "service_endpoint_policy_ids": null,
          "service_endpoints": [
            "Microsoft.AzureActiveDirectory",
            "Microsoft.KeyVault",
            "Microsoft.Storage"
          ],
          "timeouts": null,
          "virtual_network_name": "vnet-sub-hcb-common-nonprod-usc-host1"
        },
        "after": {
          "address_prefixes": [
            "10.229.224.112/28"
          ],
          "default_outbound_access_enabled": true,
          "delegation": [
            {
              "name": "Microsoft.DBforPostgreSQL/flexibleServers",
              "service_delegation": [
                {
                  "actions": [
                    "Microsoft.Network/virtualNetworks/subnets/join/action"
                  ],
                  "name": "Microsoft.DBforPostgreSQL/flexibleServers"
                }
              ]
            }
          ],
          "enforce_private_link_endpoint_network_policies": false,
          "enforce_private_link_service_network_policies": false,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb",
          "name": "snet-hcb-asgwy-qa-usc-psqldb",
          "private_endpoint_network_policies": "Enabled",
          "private_endpoint_network_policies_enabled": true,
          "private_link_service_network_policies_enabled": true,
          "resource_group_name": "rg-sub-hcb-common-nonprod-usc-ntwk1",
          "service_endpoint_policy_ids": [],
          "service_endpoints": [
            "Microsoft.AzureActiveDirectory",
            "Microsoft.KeyVault",
            "Microsoft.Storage"
          ],
          "timeouts": null,
          "virtual_network_name": "vnet-sub-hcb-common-nonprod-usc-host1"
        },
        "after_unknown": {},
        "before_sensitive": {
          "address_prefixes": [
            false
          ],
          "delegation": [
            {
              "service_delegation": [
                {
                  "actions": [
                    false
                  ]
                }
              ]
            }
          ],
          "service_endpoints": [
            false,
            false,
            false
          ]
        },
        "after_sensitive": {
          "address_prefixes": [
            false
          ],
          "delegation": [
            {
              "service_delegation": [
                {
                  "actions": [
                    false
                  ]
                }
              ]
            }
          ],
          "service_endpoint_policy_ids": [],
          "service_endpoints": [
            false,
            false,
            false
          ]
        }
      }
    }
  ],
  "resource_changes": [
    {
      "address": "module.spoke_asgwy_qa.azurerm_disk_encryption_set.base_kv_des[0]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_disk_encryption_set",
      "name": "base_kv_des",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "auto_key_rotation_enabled": false,
          "encryption_type": "EncryptionAtRestWithCustomerKey",
          "federated_client_id": "",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.Compute/diskEncryptionSets/des-asgwy-centralus-qa",
          "identity": [
            {
              "identity_ids": [],
              "principal_id": "36899313-5270-482d-b156-57fc8b6f494e",
              "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
              "type": "SystemAssigned"
            }
          ],
          "key_vault_key_id": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa/9b705eae3d5c4d96905ac4ced87b7ba3",
          "key_vault_key_url": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa/9b705eae3d5c4d96905ac4ced87b7ba3",
          "location": "centralus",
          "managed_hsm_key_id": null,
          "name": "des-asgwy-centralus-qa",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after": {
          "auto_key_rotation_enabled": false,
          "encryption_type": "EncryptionAtRestWithCustomerKey",
          "federated_client_id": "",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.Compute/diskEncryptionSets/des-asgwy-centralus-qa",
          "identity": [
            {
              "identity_ids": [],
              "principal_id": "36899313-5270-482d-b156-57fc8b6f494e",
              "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
              "type": "SystemAssigned"
            }
          ],
          "key_vault_key_id": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa/9b705eae3d5c4d96905ac4ced87b7ba3",
          "key_vault_key_url": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa/9b705eae3d5c4d96905ac4ced87b7ba3",
          "location": "centralus",
          "managed_hsm_key_id": null,
          "name": "des-asgwy-centralus-qa",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "identity": [
            {
              "identity_ids": []
            }
          ],
          "tags": {}
        },
        "after_sensitive": {
          "identity": [
            {
              "identity_ids": []
            }
          ],
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_key_vault.ud_key_vaults[\"db\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_key_vault",
      "name": "ud_key_vaults",
      "index": "db",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "access_policy": [],
          "contact": [],
          "enable_rbac_authorization": true,
          "enabled_for_deployment": false,
          "enabled_for_disk_encryption": false,
          "enabled_for_template_deployment": false,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
          "location": "centralus",
          "name": "kv-hcbasgwy0402db",
          "network_acls": [
            {
              "bypass": "AzureServices",
              "default_action": "Deny",
              "ip_rules": [],
              "virtual_network_subnet_ids": []
            }
          ],
          "public_network_access_enabled": false,
          "purge_protection_enabled": true,
          "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
          "sku_name": "premium",
          "soft_delete_retention_days": 7,
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
          "timeouts": null,
          "vault_uri": "https://kv-hcbasgwy0402db.vault.azure.net/"
        },
        "after": {
          "access_policy": [],
          "contact": [],
          "enable_rbac_authorization": true,
          "enabled_for_deployment": false,
          "enabled_for_disk_encryption": false,
          "enabled_for_template_deployment": false,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
          "location": "centralus",
          "name": "kv-hcbasgwy0402db",
          "network_acls": [
            {
              "bypass": "AzureServices",
              "default_action": "Deny",
              "ip_rules": [],
              "virtual_network_subnet_ids": []
            }
          ],
          "public_network_access_enabled": false,
          "purge_protection_enabled": true,
          "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
          "sku_name": "premium",
          "soft_delete_retention_days": 7,
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
          "timeouts": null,
          "vault_uri": "https://kv-hcbasgwy0402db.vault.azure.net/"
        },
        "after_unknown": {},
        "before_sensitive": {
          "access_policy": [],
          "contact": [],
          "network_acls": [
            {
              "ip_rules": [],
              "virtual_network_subnet_ids": []
            }
          ],
          "tags": {}
        },
        "after_sensitive": {
          "access_policy": [],
          "contact": [],
          "network_acls": [
            {
              "ip_rules": [],
              "virtual_network_subnet_ids": []
            }
          ],
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_key_vault_key.base_kv_key[0]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_key_vault_key",
      "name": "base_kv_key",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "curve": "",
          "e": "AQAB",
          "expiration_date": null,
          "id": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa/9b705eae3d5c4d96905ac4ced87b7ba3",
          "key_opts": [
            "decrypt",
            "encrypt",
            "unwrapKey",
            "wrapKey"
          ],
          "key_size": 2048,
          "key_type": "RSA-HSM",
          "key_vault_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu",
          "n": "miq8N1FWbB59Srh8rR3Ha1eazps1QXdPJCtBYQJqui3LgBmafW1PNcFgmQcoByUzmmisdnI40jAEH_pDVr5-zOKkqz41H1rn_qbb5LNlGJfgA1V9yS7Yqk5lnmCyYCpwZQTfO2khgZauAzY_-ATGvfDKmocA5PNchalcxis4CZLw1xgyagic_uFgIorMOGJ42RQrddDZJf5CjU4GKAbh9Msh6WZnD-wAFN67MI2h4WbRL3d6aDbJ_x5xn6Rc8imgOjbqr99QGUuZLKuBKb7eDO2TlK69Rq9sjMVSvCZf8iCEI2gnbQJm4_tSBU_Vk1tacrOn548ixoqaRzXLv1IGkw",
          "name": "key-asgwy-centralus-qa",
          "not_before_date": null,
          "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCaKrw3UVZsHn1KuHytHcdrV5rOmzVBd08kK0FhAmq6LcuAGZp9bU81wWCZBygHJTOaaKx2cjjSMAQf+kNWvn7M4qSrPjUfWuf+ptvks2UYl+ADVX3JLtiqTmWeYLJgKnBlBN87aSGBlq4DNj/4BMa98MqahwDk81yFqVzGKzgJkvDXGDJqCJz+4WAiisw4YnjZFCt10Nkl/kKNTgYoBuH0yyHpZmcP7AAU3rswjaHhZtEvd3poNsn/HnGfpFzyKaA6Nuqv31AZS5ksq4Epvt4M7ZOUrr1Gr2yMxVK8Jl/yIIQjaCdtAmbj+1IFT9WTW1pys6fnjyLGippHNcu/UgaT\n",
          "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmiq8N1FWbB59Srh8rR3H\na1eazps1QXdPJCtBYQJqui3LgBmafW1PNcFgmQcoByUzmmisdnI40jAEH/pDVr5+\nzOKkqz41H1rn/qbb5LNlGJfgA1V9yS7Yqk5lnmCyYCpwZQTfO2khgZauAzY/+ATG\nvfDKmocA5PNchalcxis4CZLw1xgyagic/uFgIorMOGJ42RQrddDZJf5CjU4GKAbh\n9Msh6WZnD+wAFN67MI2h4WbRL3d6aDbJ/x5xn6Rc8imgOjbqr99QGUuZLKuBKb7e\nDO2TlK69Rq9sjMVSvCZf8iCEI2gnbQJm4/tSBU/Vk1tacrOn548ixoqaRzXLv1IG\nkwIDAQAB\n-----END PUBLIC KEY-----\n",
          "resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu/keys/key-asgwy-centralus-qa/versions/9b705eae3d5c4d96905ac4ced87b7ba3",
          "resource_versionless_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu/keys/key-asgwy-centralus-qa",
          "rotation_policy": [
            {
              "automatic": [
                {
                  "time_after_creation": "P1Y",
                  "time_before_expiry": ""
                }
              ],
              "expire_after": "",
              "notify_before_expiry": ""
            }
          ],
          "tags": {},
          "timeouts": null,
          "version": "9b705eae3d5c4d96905ac4ced87b7ba3",
          "versionless_id": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa",
          "x": "",
          "y": ""
        },
        "after": {
          "curve": "",
          "e": "AQAB",
          "expiration_date": null,
          "id": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa/9b705eae3d5c4d96905ac4ced87b7ba3",
          "key_opts": [
            "decrypt",
            "encrypt",
            "unwrapKey",
            "wrapKey"
          ],
          "key_size": 2048,
          "key_type": "RSA-HSM",
          "key_vault_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu",
          "n": "miq8N1FWbB59Srh8rR3Ha1eazps1QXdPJCtBYQJqui3LgBmafW1PNcFgmQcoByUzmmisdnI40jAEH_pDVr5-zOKkqz41H1rn_qbb5LNlGJfgA1V9yS7Yqk5lnmCyYCpwZQTfO2khgZauAzY_-ATGvfDKmocA5PNchalcxis4CZLw1xgyagic_uFgIorMOGJ42RQrddDZJf5CjU4GKAbh9Msh6WZnD-wAFN67MI2h4WbRL3d6aDbJ_x5xn6Rc8imgOjbqr99QGUuZLKuBKb7eDO2TlK69Rq9sjMVSvCZf8iCEI2gnbQJm4_tSBU_Vk1tacrOn548ixoqaRzXLv1IGkw",
          "name": "key-asgwy-centralus-qa",
          "not_before_date": null,
          "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCaKrw3UVZsHn1KuHytHcdrV5rOmzVBd08kK0FhAmq6LcuAGZp9bU81wWCZBygHJTOaaKx2cjjSMAQf+kNWvn7M4qSrPjUfWuf+ptvks2UYl+ADVX3JLtiqTmWeYLJgKnBlBN87aSGBlq4DNj/4BMa98MqahwDk81yFqVzGKzgJkvDXGDJqCJz+4WAiisw4YnjZFCt10Nkl/kKNTgYoBuH0yyHpZmcP7AAU3rswjaHhZtEvd3poNsn/HnGfpFzyKaA6Nuqv31AZS5ksq4Epvt4M7ZOUrr1Gr2yMxVK8Jl/yIIQjaCdtAmbj+1IFT9WTW1pys6fnjyLGippHNcu/UgaT\n",
          "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmiq8N1FWbB59Srh8rR3H\na1eazps1QXdPJCtBYQJqui3LgBmafW1PNcFgmQcoByUzmmisdnI40jAEH/pDVr5+\nzOKkqz41H1rn/qbb5LNlGJfgA1V9yS7Yqk5lnmCyYCpwZQTfO2khgZauAzY/+ATG\nvfDKmocA5PNchalcxis4CZLw1xgyagic/uFgIorMOGJ42RQrddDZJf5CjU4GKAbh\n9Msh6WZnD+wAFN67MI2h4WbRL3d6aDbJ/x5xn6Rc8imgOjbqr99QGUuZLKuBKb7e\nDO2TlK69Rq9sjMVSvCZf8iCEI2gnbQJm4/tSBU/Vk1tacrOn548ixoqaRzXLv1IG\nkwIDAQAB\n-----END PUBLIC KEY-----\n",
          "resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu/keys/key-asgwy-centralus-qa/versions/9b705eae3d5c4d96905ac4ced87b7ba3",
          "resource_versionless_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu/keys/key-asgwy-centralus-qa",
          "rotation_policy": [
            {
              "automatic": [
                {
                  "time_after_creation": "P1Y",
                  "time_before_expiry": ""
                }
              ],
              "expire_after": "",
              "notify_before_expiry": ""
            }
          ],
          "tags": {},
          "timeouts": null,
          "version": "9b705eae3d5c4d96905ac4ced87b7ba3",
          "versionless_id": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa",
          "x": "",
          "y": ""
        },
        "after_unknown": {},
        "before_sensitive": {
          "key_opts": [
            false,
            false,
            false,
            false
          ],
          "rotation_policy": [
            {
              "automatic": [
                {}
              ]
            }
          ],
          "tags": {}
        },
        "after_sensitive": {
          "key_opts": [
            false,
            false,
            false,
            false
          ],
          "rotation_policy": [
            {
              "automatic": [
                {}
              ]
            }
          ],
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_log_analytics_workspace.log_analytics_workspace[0]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_log_analytics_workspace",
      "name": "log_analytics_workspace",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "allow_resource_only_permissions": true,
          "cmk_for_query_forced": false,
          "daily_quota_gb": -1,
          "data_collection_rule_id": "",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.OperationalInsights/workspaces/log-hcb-asgwy-qa-usc",
          "identity": [],
          "immediate_data_purge_on_30_days_enabled": false,
          "internet_ingestion_enabled": true,
          "internet_query_enabled": true,
          "local_authentication_disabled": false,
          "location": "centralus",
          "name": "log-hcb-asgwy-qa-usc",
          "primary_shared_key": "mYiEYXQpldg2vKyOkYEeQ+ctkfGqKA5fFqetoy4EjLM6YxRqJTfXCRG+viNrTsDZAo2zkeeKrzKcoefVSCXUOg==",
          "reservation_capacity_in_gb_per_day": null,
          "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
          "retention_in_days": 30,
          "secondary_shared_key": "55adVuGSym8ZN5b+HyQ1kaC0B87AM5wrJmx4jk5xq9kAUUhFCVnziMIW2aDtOxUmUmvbOi3K5YATAH+hUrT62A==",
          "sku": "PerGB2018",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null,
          "workspace_id": "bf046fda-638e-44f8-b099-8abd2bdaa859"
        },
        "after": {
          "allow_resource_only_permissions": true,
          "cmk_for_query_forced": false,
          "daily_quota_gb": -1,
          "data_collection_rule_id": "",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.OperationalInsights/workspaces/log-hcb-asgwy-qa-usc",
          "identity": [],
          "immediate_data_purge_on_30_days_enabled": false,
          "internet_ingestion_enabled": true,
          "internet_query_enabled": true,
          "local_authentication_disabled": false,
          "location": "centralus",
          "name": "log-hcb-asgwy-qa-usc",
          "primary_shared_key": "mYiEYXQpldg2vKyOkYEeQ+ctkfGqKA5fFqetoy4EjLM6YxRqJTfXCRG+viNrTsDZAo2zkeeKrzKcoefVSCXUOg==",
          "reservation_capacity_in_gb_per_day": null,
          "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
          "retention_in_days": 30,
          "secondary_shared_key": "55adVuGSym8ZN5b+HyQ1kaC0B87AM5wrJmx4jk5xq9kAUUhFCVnziMIW2aDtOxUmUmvbOi3K5YATAH+hUrT62A==",
          "sku": "PerGB2018",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null,
          "workspace_id": "bf046fda-638e-44f8-b099-8abd2bdaa859"
        },
        "after_unknown": {},
        "before_sensitive": {
          "identity": [],
          "primary_shared_key": true,
          "secondary_shared_key": true,
          "tags": {}
        },
        "after_sensitive": {
          "identity": [],
          "primary_shared_key": true,
          "secondary_shared_key": true,
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_management_lock.ud_key_vaults[\"db\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_management_lock",
      "name": "ud_key_vaults",
      "index": "db",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db/providers/Microsoft.Authorization/locks/EIS_CSS_Delete_Lock",
          "lock_level": "CanNotDelete",
          "name": "EIS_CSS_Delete_Lock",
          "notes": "GRP 71 [AR] Enforce delete prevention for Azure KeyVault",
          "scope": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
          "timeouts": null
        },
        "after": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db/providers/Microsoft.Authorization/locks/EIS_CSS_Delete_Lock",
          "lock_level": "CanNotDelete",
          "name": "EIS_CSS_Delete_Lock",
          "notes": "GRP 71 [AR] Enforce delete prevention for Azure KeyVault",
          "scope": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_monitor_diagnostic_setting.diag_ud_key_vaults[\"db\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_monitor_diagnostic_setting",
      "name": "diag_ud_key_vaults",
      "index": "db",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "enabled_log": [
            {
              "category": "",
              "category_group": "audit",
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            }
          ],
          "eventhub_authorization_rule_id": "/subscriptions/7f81ff32-74f5-45e3-bc03-a8141f72754d/resourceGroups/RG-CVS-SharedServices-2/providers/Microsoft.EventHub/namespaces/rac2ehnpp2v/authorizationRules/RootManageSharedAccessKey",
          "eventhub_name": "cvs-splunk-azure-logs",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db|diag-kv-hcbasgwy0402db",
          "log": [
            {
              "category": "",
              "category_group": "allLogs",
              "enabled": false,
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            },
            {
              "category": "",
              "category_group": "audit",
              "enabled": true,
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            }
          ],
          "log_analytics_destination_type": "AzureDiagnostics",
          "log_analytics_workspace_id": "",
          "metric": [
            {
              "category": "AllMetrics",
              "enabled": false,
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            }
          ],
          "name": "diag-kv-hcbasgwy0402db",
          "partner_solution_id": null,
          "storage_account_id": null,
          "target_resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
          "timeouts": null
        },
        "after": {
          "enabled_log": [
            {
              "category": "",
              "category_group": "audit",
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            }
          ],
          "eventhub_authorization_rule_id": "/subscriptions/7f81ff32-74f5-45e3-bc03-a8141f72754d/resourceGroups/RG-CVS-SharedServices-2/providers/Microsoft.EventHub/namespaces/rac2ehnpp2v/authorizationRules/RootManageSharedAccessKey",
          "eventhub_name": "cvs-splunk-azure-logs",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db|diag-kv-hcbasgwy0402db",
          "log": [
            {
              "category": "",
              "category_group": "allLogs",
              "enabled": false,
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            },
            {
              "category": "",
              "category_group": "audit",
              "enabled": true,
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            }
          ],
          "log_analytics_destination_type": "AzureDiagnostics",
          "log_analytics_workspace_id": "",
          "metric": [
            {
              "category": "AllMetrics",
              "enabled": false,
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            }
          ],
          "name": "diag-kv-hcbasgwy0402db",
          "partner_solution_id": null,
          "storage_account_id": null,
          "target_resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "enabled_log": [
            {
              "retention_policy": [
                {}
              ]
            }
          ],
          "log": [
            {
              "retention_policy": [
                {}
              ]
            },
            {
              "retention_policy": [
                {}
              ]
            }
          ],
          "metric": [
            {
              "retention_policy": [
                {}
              ]
            }
          ]
        },
        "after_sensitive": {
          "enabled_log": [
            {
              "retention_policy": [
                {}
              ]
            }
          ],
          "log": [
            {
              "retention_policy": [
                {}
              ]
            },
            {
              "retention_policy": [
                {}
              ]
            }
          ],
          "metric": [
            {
              "retention_policy": [
                {}
              ]
            }
          ]
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_monitor_diagnostic_setting.law_diagnostics_eventhub[0]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_monitor_diagnostic_setting",
      "name": "law_diagnostics_eventhub",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "enabled_log": [
            {
              "category": "",
              "category_group": "allLogs",
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            },
            {
              "category": "",
              "category_group": "audit",
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            }
          ],
          "eventhub_authorization_rule_id": "/subscriptions/7f81ff32-74f5-45e3-bc03-a8141f72754d/resourceGroups/RG-CVS-SharedServices-2/providers/Microsoft.EventHub/namespaces/rac2ehnpp2v/authorizationRules/RootManageSharedAccessKey",
          "eventhub_name": "cvs-splunk-azure-logs",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.OperationalInsights/workspaces/log-hcb-asgwy-qa-usc|diag-log-hcb-asgwy-qa-usc",
          "log": [
            {
              "category": "",
              "category_group": "allLogs",
              "enabled": true,
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            },
            {
              "category": "",
              "category_group": "audit",
              "enabled": true,
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            }
          ],
          "log_analytics_destination_type": "",
          "log_analytics_workspace_id": "",
          "metric": [
            {
              "category": "AllMetrics",
              "enabled": false,
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            }
          ],
          "name": "diag-log-hcb-asgwy-qa-usc",
          "partner_solution_id": null,
          "storage_account_id": null,
          "target_resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.OperationalInsights/workspaces/log-hcb-asgwy-qa-usc",
          "timeouts": null
        },
        "after": {
          "enabled_log": [
            {
              "category": "",
              "category_group": "allLogs",
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            },
            {
              "category": "",
              "category_group": "audit",
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            }
          ],
          "eventhub_authorization_rule_id": "/subscriptions/7f81ff32-74f5-45e3-bc03-a8141f72754d/resourceGroups/RG-CVS-SharedServices-2/providers/Microsoft.EventHub/namespaces/rac2ehnpp2v/authorizationRules/RootManageSharedAccessKey",
          "eventhub_name": "cvs-splunk-azure-logs",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.OperationalInsights/workspaces/log-hcb-asgwy-qa-usc|diag-log-hcb-asgwy-qa-usc",
          "log": [
            {
              "category": "",
              "category_group": "allLogs",
              "enabled": true,
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            },
            {
              "category": "",
              "category_group": "audit",
              "enabled": true,
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            }
          ],
          "log_analytics_destination_type": "",
          "log_analytics_workspace_id": "",
          "metric": [
            {
              "category": "AllMetrics",
              "enabled": false,
              "retention_policy": [
                {
                  "days": 0,
                  "enabled": false
                }
              ]
            }
          ],
          "name": "diag-log-hcb-asgwy-qa-usc",
          "partner_solution_id": null,
          "storage_account_id": null,
          "target_resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.OperationalInsights/workspaces/log-hcb-asgwy-qa-usc",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "enabled_log": [
            {
              "retention_policy": [
                {}
              ]
            },
            {
              "retention_policy": [
                {}
              ]
            }
          ],
          "log": [
            {
              "retention_policy": [
                {}
              ]
            },
            {
              "retention_policy": [
                {}
              ]
            }
          ],
          "metric": [
            {
              "retention_policy": [
                {}
              ]
            }
          ]
        },
        "after_sensitive": {
          "enabled_log": [
            {
              "retention_policy": [
                {}
              ]
            },
            {
              "retention_policy": [
                {}
              ]
            }
          ],
          "log": [
            {
              "retention_policy": [
                {}
              ]
            },
            {
              "retention_policy": [
                {}
              ]
            }
          ],
          "metric": [
            {
              "retention_policy": [
                {}
              ]
            }
          ]
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_network_security_group.network_security_group[0]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_network_security_group",
      "name": "network_security_group",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk",
          "location": "centralus",
          "name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "security_rule": [
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "",
              "destination_address_prefixes": [
                "10.229.224.112/28",
                "10.229.224.128/28",
                "10.229.224.144/28"
              ],
              "destination_application_security_group_ids": [],
              "destination_port_range": "443",
              "destination_port_ranges": [],
              "direction": "Inbound",
              "name": "AllowInternalHttpsTrafficInbound",
              "priority": 4020,
              "protocol": "*",
              "source_address_prefix": "",
              "source_address_prefixes": [
                "10.0.0.0/8",
                "157.121.0.0/16",
                "167.69.0.0/16",
                "172.16.0.0/12",
                "198.187.64.0/18",
                "204.99.0.0/17",
                "206.213.0.0/16"
              ],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "10.229.224.112/28",
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_range": "5432",
              "destination_port_ranges": [],
              "direction": "Inbound",
              "name": "AllowPostgresTrafficFromInternalInbound",
              "priority": 4033,
              "protocol": "*",
              "source_address_prefix": "",
              "source_address_prefixes": [
                "10.0.0.0/8",
                "157.121.0.0/16",
                "167.69.0.0/16",
                "172.16.0.0/12",
                "198.187.64.0/18",
                "204.99.0.0/17",
                "206.213.0.0/16"
              ],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "10.229.224.112/28",
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_range": "5432",
              "destination_port_ranges": [],
              "direction": "Inbound",
              "name": "AllowPostgresTrafficSelfInbound",
              "priority": 4030,
              "protocol": "*",
              "source_address_prefix": "10.229.224.112/28",
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "10.229.224.112/28",
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_range": "5432",
              "destination_port_ranges": [],
              "direction": "Outbound",
              "name": "AllowPostgresTrafficSelfOutbound",
              "priority": 4030,
              "protocol": "*",
              "source_address_prefix": "10.229.224.112/28",
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "AzureActiveDirectory",
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_range": "443",
              "destination_port_ranges": [],
              "direction": "Outbound",
              "name": "AllowPostgresToAzureADOutbound",
              "priority": 4032,
              "protocol": "*",
              "source_address_prefix": "10.229.224.112/28",
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "Storage",
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_range": "443",
              "destination_port_ranges": [],
              "direction": "Outbound",
              "name": "AllowPostgresToAzureStorageOutbound",
              "priority": 4031,
              "protocol": "*",
              "source_address_prefix": "10.229.224.112/28",
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            },
            {
              "access": "Deny",
              "description": "",
              "destination_address_prefix": "*",
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_range": "*",
              "destination_port_ranges": [],
              "direction": "Inbound",
              "name": "DenyAllInbound",
              "priority": 4096,
              "protocol": "*",
              "source_address_prefix": "*",
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            },
            {
              "access": "Deny",
              "description": "",
              "destination_address_prefix": "*",
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_range": "*",
              "destination_port_ranges": [],
              "direction": "Outbound",
              "name": "DenyAllOutbound",
              "priority": 4096,
              "protocol": "*",
              "source_address_prefix": "*",
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            }
          ],
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk",
          "location": "centralus",
          "name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "security_rule": [
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "",
              "destination_address_prefixes": [
                "10.229.224.112/28",
                "10.229.224.128/28",
                "10.229.224.144/28"
              ],
              "destination_application_security_group_ids": [],
              "destination_port_range": "443",
              "destination_port_ranges": [],
              "direction": "Inbound",
              "name": "AllowInternalHttpsTrafficInbound",
              "priority": 4020,
              "protocol": "*",
              "source_address_prefix": "",
              "source_address_prefixes": [
                "10.0.0.0/8",
                "157.121.0.0/16",
                "167.69.0.0/16",
                "172.16.0.0/12",
                "198.187.64.0/18",
                "204.99.0.0/17",
                "206.213.0.0/16"
              ],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "10.229.224.112/28",
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_range": "5432",
              "destination_port_ranges": [],
              "direction": "Inbound",
              "name": "AllowPostgresTrafficFromInternalInbound",
              "priority": 4033,
              "protocol": "*",
              "source_address_prefix": "",
              "source_address_prefixes": [
                "10.0.0.0/8",
                "157.121.0.0/16",
                "167.69.0.0/16",
                "172.16.0.0/12",
                "198.187.64.0/18",
                "204.99.0.0/17",
                "206.213.0.0/16"
              ],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "10.229.224.112/28",
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_range": "5432",
              "destination_port_ranges": [],
              "direction": "Inbound",
              "name": "AllowPostgresTrafficSelfInbound",
              "priority": 4030,
              "protocol": "*",
              "source_address_prefix": "10.229.224.112/28",
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "10.229.224.112/28",
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_range": "5432",
              "destination_port_ranges": [],
              "direction": "Outbound",
              "name": "AllowPostgresTrafficSelfOutbound",
              "priority": 4030,
              "protocol": "*",
              "source_address_prefix": "10.229.224.112/28",
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "AzureActiveDirectory",
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_range": "443",
              "destination_port_ranges": [],
              "direction": "Outbound",
              "name": "AllowPostgresToAzureADOutbound",
              "priority": 4032,
              "protocol": "*",
              "source_address_prefix": "10.229.224.112/28",
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            },
            {
              "access": "Allow",
              "description": "",
              "destination_address_prefix": "Storage",
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_range": "443",
              "destination_port_ranges": [],
              "direction": "Outbound",
              "name": "AllowPostgresToAzureStorageOutbound",
              "priority": 4031,
              "protocol": "*",
              "source_address_prefix": "10.229.224.112/28",
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            },
            {
              "access": "Deny",
              "description": "",
              "destination_address_prefix": "*",
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_range": "*",
              "destination_port_ranges": [],
              "direction": "Inbound",
              "name": "DenyAllInbound",
              "priority": 4096,
              "protocol": "*",
              "source_address_prefix": "*",
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            },
            {
              "access": "Deny",
              "description": "",
              "destination_address_prefix": "*",
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_range": "*",
              "destination_port_ranges": [],
              "direction": "Outbound",
              "name": "DenyAllOutbound",
              "priority": 4096,
              "protocol": "*",
              "source_address_prefix": "*",
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_range": "*",
              "source_port_ranges": []
            }
          ],
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "security_rule": [
            {
              "destination_address_prefixes": [
                false,
                false,
                false
              ],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [
                false,
                false,
                false,
                false,
                false,
                false,
                false
              ],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            },
            {
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [
                false,
                false,
                false,
                false,
                false,
                false,
                false
              ],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            },
            {
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            },
            {
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            },
            {
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            },
            {
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            },
            {
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            },
            {
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            }
          ],
          "tags": {}
        },
        "after_sensitive": {
          "security_rule": [
            {
              "destination_address_prefixes": [
                false,
                false,
                false
              ],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [
                false,
                false,
                false,
                false,
                false,
                false,
                false
              ],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            },
            {
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [
                false,
                false,
                false,
                false,
                false,
                false,
                false
              ],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            },
            {
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            },
            {
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            },
            {
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            },
            {
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            },
            {
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            },
            {
              "destination_address_prefixes": [],
              "destination_application_security_group_ids": [],
              "destination_port_ranges": [],
              "source_address_prefixes": [],
              "source_application_security_group_ids": [],
              "source_port_ranges": []
            }
          ],
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowInternalHttpsTrafficInbound\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_network_security_rule",
      "name": "network_security_rules",
      "index": "AllowInternalHttpsTrafficInbound",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "",
          "destination_address_prefixes": [
            "10.229.224.112/28",
            "10.229.224.128/28",
            "10.229.224.144/28"
          ],
          "destination_application_security_group_ids": [],
          "destination_port_range": "443",
          "destination_port_ranges": [],
          "direction": "Inbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowInternalHttpsTrafficInbound",
          "name": "AllowInternalHttpsTrafficInbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4020,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "",
          "source_address_prefixes": [
            "10.0.0.0/8",
            "157.121.0.0/16",
            "167.69.0.0/16",
            "172.16.0.0/12",
            "198.187.64.0/18",
            "204.99.0.0/17",
            "206.213.0.0/16"
          ],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "",
          "destination_address_prefixes": [
            "10.229.224.112/28",
            "10.229.224.128/28",
            "10.229.224.144/28"
          ],
          "destination_application_security_group_ids": [],
          "destination_port_range": "443",
          "destination_port_ranges": [],
          "direction": "Inbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowInternalHttpsTrafficInbound",
          "name": "AllowInternalHttpsTrafficInbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4020,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "",
          "source_address_prefixes": [
            "10.0.0.0/8",
            "157.121.0.0/16",
            "167.69.0.0/16",
            "172.16.0.0/12",
            "198.187.64.0/18",
            "204.99.0.0/17",
            "206.213.0.0/16"
          ],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "destination_address_prefixes": [
            false,
            false,
            false
          ],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [
            false,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        },
        "after_sensitive": {
          "destination_address_prefixes": [
            false,
            false,
            false
          ],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [
            false,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowPostgresToAzureADOutbound\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_network_security_rule",
      "name": "network_security_rules",
      "index": "AllowPostgresToAzureADOutbound",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "AzureActiveDirectory",
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_range": "443",
          "destination_port_ranges": [],
          "direction": "Outbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresToAzureADOutbound",
          "name": "AllowPostgresToAzureADOutbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4032,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "10.229.224.112/28",
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "AzureActiveDirectory",
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_range": "443",
          "destination_port_ranges": [],
          "direction": "Outbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresToAzureADOutbound",
          "name": "AllowPostgresToAzureADOutbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4032,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "10.229.224.112/28",
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        },
        "after_sensitive": {
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowPostgresToAzureStorageOutbound\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_network_security_rule",
      "name": "network_security_rules",
      "index": "AllowPostgresToAzureStorageOutbound",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "Storage",
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_range": "443",
          "destination_port_ranges": [],
          "direction": "Outbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresToAzureStorageOutbound",
          "name": "AllowPostgresToAzureStorageOutbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4031,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "10.229.224.112/28",
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "Storage",
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_range": "443",
          "destination_port_ranges": [],
          "direction": "Outbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresToAzureStorageOutbound",
          "name": "AllowPostgresToAzureStorageOutbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4031,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "10.229.224.112/28",
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        },
        "after_sensitive": {
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowPostgresTrafficFromInternalInbound\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_network_security_rule",
      "name": "network_security_rules",
      "index": "AllowPostgresTrafficFromInternalInbound",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "10.229.224.112/28",
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_range": "5432",
          "destination_port_ranges": [],
          "direction": "Inbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresTrafficFromInternalInbound",
          "name": "AllowPostgresTrafficFromInternalInbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4033,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "",
          "source_address_prefixes": [
            "10.0.0.0/8",
            "157.121.0.0/16",
            "167.69.0.0/16",
            "172.16.0.0/12",
            "198.187.64.0/18",
            "204.99.0.0/17",
            "206.213.0.0/16"
          ],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "10.229.224.112/28",
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_range": "5432",
          "destination_port_ranges": [],
          "direction": "Inbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresTrafficFromInternalInbound",
          "name": "AllowPostgresTrafficFromInternalInbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4033,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "",
          "source_address_prefixes": [
            "10.0.0.0/8",
            "157.121.0.0/16",
            "167.69.0.0/16",
            "172.16.0.0/12",
            "198.187.64.0/18",
            "204.99.0.0/17",
            "206.213.0.0/16"
          ],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [
            false,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        },
        "after_sensitive": {
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [
            false,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowPostgresTrafficSelfInbound\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_network_security_rule",
      "name": "network_security_rules",
      "index": "AllowPostgresTrafficSelfInbound",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "10.229.224.112/28",
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_range": "5432",
          "destination_port_ranges": [],
          "direction": "Inbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresTrafficSelfInbound",
          "name": "AllowPostgresTrafficSelfInbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4030,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "10.229.224.112/28",
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "10.229.224.112/28",
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_range": "5432",
          "destination_port_ranges": [],
          "direction": "Inbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresTrafficSelfInbound",
          "name": "AllowPostgresTrafficSelfInbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4030,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "10.229.224.112/28",
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        },
        "after_sensitive": {
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowPostgresTrafficSelfOutbound\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_network_security_rule",
      "name": "network_security_rules",
      "index": "AllowPostgresTrafficSelfOutbound",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "10.229.224.112/28",
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_range": "5432",
          "destination_port_ranges": [],
          "direction": "Outbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresTrafficSelfOutbound",
          "name": "AllowPostgresTrafficSelfOutbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4030,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "10.229.224.112/28",
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after": {
          "access": "Allow",
          "description": "",
          "destination_address_prefix": "10.229.224.112/28",
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_range": "5432",
          "destination_port_ranges": [],
          "direction": "Outbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresTrafficSelfOutbound",
          "name": "AllowPostgresTrafficSelfOutbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4030,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "10.229.224.112/28",
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        },
        "after_sensitive": {
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"DenyAllInbound\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_network_security_rule",
      "name": "network_security_rules",
      "index": "DenyAllInbound",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "access": "Deny",
          "description": "",
          "destination_address_prefix": "*",
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_range": "*",
          "destination_port_ranges": [],
          "direction": "Inbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/DenyAllInbound",
          "name": "DenyAllInbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4096,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "*",
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after": {
          "access": "Deny",
          "description": "",
          "destination_address_prefix": "*",
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_range": "*",
          "destination_port_ranges": [],
          "direction": "Inbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/DenyAllInbound",
          "name": "DenyAllInbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4096,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "*",
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        },
        "after_sensitive": {
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"DenyAllOutbound\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_network_security_rule",
      "name": "network_security_rules",
      "index": "DenyAllOutbound",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "access": "Deny",
          "description": "",
          "destination_address_prefix": "*",
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_range": "*",
          "destination_port_ranges": [],
          "direction": "Outbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/DenyAllOutbound",
          "name": "DenyAllOutbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4096,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "*",
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after": {
          "access": "Deny",
          "description": "",
          "destination_address_prefix": "*",
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_range": "*",
          "destination_port_ranges": [],
          "direction": "Outbound",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/DenyAllOutbound",
          "name": "DenyAllOutbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 4096,
          "protocol": "*",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "*",
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_range": "*",
          "source_port_ranges": [],
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        },
        "after_sensitive": {
          "destination_address_prefixes": [],
          "destination_application_security_group_ids": [],
          "destination_port_ranges": [],
          "source_address_prefixes": [],
          "source_application_security_group_ids": [],
          "source_port_ranges": []
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"Primary_Sec_DB_access_inbound\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_network_security_rule",
      "name": "network_security_rules",
      "index": "Primary_Sec_DB_access_inbound",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "access": "Allow",
          "description": null,
          "destination_address_prefix": "10.229.224.112/28",
          "destination_address_prefixes": null,
          "destination_application_security_group_ids": null,
          "destination_port_range": "5432",
          "destination_port_ranges": null,
          "direction": "Inbound",
          "name": "Primary_Sec_DB_access_inbound",
          "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
          "priority": 130,
          "protocol": "Tcp",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "source_address_prefix": "10.85.95.16/28",
          "source_address_prefixes": null,
          "source_application_security_group_ids": null,
          "source_port_range": "*",
          "source_port_ranges": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_network_watcher_flow_log.main[0]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_network_watcher_flow_log",
      "name": "main",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "enabled": true,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/NetworkWatcherRG/providers/Microsoft.Network/networkWatchers/NetworkWatcher_centralus/flowLogs/nwfl-hcb-asgwy-qa-usc",
          "location": "centralus",
          "name": "nwfl-hcb-asgwy-qa-usc",
          "network_security_group_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk",
          "network_watcher_name": "NetworkWatcher_centralus",
          "resource_group_name": "NetworkWatcherRG",
          "retention_policy": [
            {
              "days": 0,
              "enabled": true
            }
          ],
          "storage_account_id": "/subscriptions/29ea5d6f-8539-4a95-8198-ca801994cbdb/resourceGroups/RG-cvsnsgflhub000/providers/Microsoft.Storage/storageAccounts/sacvsnsgflhubusc000",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null,
          "traffic_analytics": [
            {
              "enabled": true,
              "interval_in_minutes": 10,
              "workspace_id": "bf046fda-638e-44f8-b099-8abd2bdaa859",
              "workspace_region": "centralus",
              "workspace_resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.OperationalInsights/workspaces/log-hcb-asgwy-qa-usc"
            }
          ],
          "version": 2
        },
        "after": {
          "enabled": true,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/NetworkWatcherRG/providers/Microsoft.Network/networkWatchers/NetworkWatcher_centralus/flowLogs/nwfl-hcb-asgwy-qa-usc",
          "location": "centralus",
          "name": "nwfl-hcb-asgwy-qa-usc",
          "network_security_group_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk",
          "network_watcher_name": "NetworkWatcher_centralus",
          "resource_group_name": "NetworkWatcherRG",
          "retention_policy": [
            {
              "days": 0,
              "enabled": true
            }
          ],
          "storage_account_id": "/subscriptions/29ea5d6f-8539-4a95-8198-ca801994cbdb/resourceGroups/RG-cvsnsgflhub000/providers/Microsoft.Storage/storageAccounts/sacvsnsgflhubusc000",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null,
          "traffic_analytics": [
            {
              "enabled": true,
              "interval_in_minutes": 10,
              "workspace_id": "bf046fda-638e-44f8-b099-8abd2bdaa859",
              "workspace_region": "centralus",
              "workspace_resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.OperationalInsights/workspaces/log-hcb-asgwy-qa-usc"
            }
          ],
          "version": 2
        },
        "after_unknown": {},
        "before_sensitive": {
          "retention_policy": [
            {}
          ],
          "tags": {},
          "traffic_analytics": [
            {}
          ]
        },
        "after_sensitive": {
          "retention_policy": [
            {}
          ],
          "tags": {},
          "traffic_analytics": [
            {}
          ]
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_private_endpoint.ud_key_vaults_pes[\"db\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_private_endpoint",
      "name": "ud_key_vaults_pes",
      "index": "db",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "custom_dns_configs": [
            {
              "fqdn": "kv-hcbasgwy0402db.vault.azure.net",
              "ip_addresses": [
                "10.229.224.132"
              ]
            }
          ],
          "custom_network_interface_name": "",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.Network/privateEndpoints/pep-hcb-asgwy-qa-usc-kv-db",
          "ip_configuration": [],
          "location": "centralus",
          "name": "pep-hcb-asgwy-qa-usc-kv-db",
          "network_interface": [
            {
              "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.Network/networkInterfaces/pep-hcb-asgwy-qa-usc-kv-db.nic.e00f8d02-cc44-4feb-8394-5891ecd27664",
              "name": "pep-hcb-asgwy-qa-usc-kv-db.nic.e00f8d02-cc44-4feb-8394-5891ecd27664"
            }
          ],
          "private_dns_zone_configs": [],
          "private_dns_zone_group": [],
          "private_service_connection": [
            {
              "is_manual_connection": false,
              "name": "db-privateserviceconnection",
              "private_connection_resource_alias": "",
              "private_connection_resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
              "private_ip_address": "10.229.224.132",
              "request_message": "",
              "subresource_names": [
                "vault"
              ]
            }
          ],
          "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
          "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after": {
          "custom_dns_configs": [
            {
              "fqdn": "kv-hcbasgwy0402db.vault.azure.net",
              "ip_addresses": [
                "10.229.224.132"
              ]
            }
          ],
          "custom_network_interface_name": "",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.Network/privateEndpoints/pep-hcb-asgwy-qa-usc-kv-db",
          "ip_configuration": [],
          "location": "centralus",
          "name": "pep-hcb-asgwy-qa-usc-kv-db",
          "network_interface": [
            {
              "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.Network/networkInterfaces/pep-hcb-asgwy-qa-usc-kv-db.nic.e00f8d02-cc44-4feb-8394-5891ecd27664",
              "name": "pep-hcb-asgwy-qa-usc-kv-db.nic.e00f8d02-cc44-4feb-8394-5891ecd27664"
            }
          ],
          "private_dns_zone_configs": [],
          "private_dns_zone_group": [],
          "private_service_connection": [
            {
              "is_manual_connection": false,
              "name": "db-privateserviceconnection",
              "private_connection_resource_alias": "",
              "private_connection_resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
              "private_ip_address": "10.229.224.132",
              "request_message": "",
              "subresource_names": [
                "vault"
              ]
            }
          ],
          "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
          "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "custom_dns_configs": [
            {
              "ip_addresses": [
                false
              ]
            }
          ],
          "ip_configuration": [],
          "network_interface": [
            {}
          ],
          "private_dns_zone_configs": [],
          "private_dns_zone_group": [],
          "private_service_connection": [
            {
              "subresource_names": [
                false
              ]
            }
          ],
          "tags": {}
        },
        "after_sensitive": {
          "custom_dns_configs": [
            {
              "ip_addresses": [
                false
              ]
            }
          ],
          "ip_configuration": [],
          "network_interface": [
            {}
          ],
          "private_dns_zone_configs": [],
          "private_dns_zone_group": [],
          "private_service_connection": [
            {
              "subresource_names": [
                false
              ]
            }
          ],
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_resource_group.backup_rg[0]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_resource_group",
      "name": "backup_rg",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-bkp",
          "location": "centralus",
          "managed_by": "",
          "name": "rg-hcb-asgwy-qa-usc-bkp",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-bkp",
          "location": "centralus",
          "managed_by": "",
          "name": "rg-hcb-asgwy-qa-usc-bkp",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {}
        },
        "after_sensitive": {
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_resource_group.mi_rg[0]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_resource_group",
      "name": "mi_rg",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-mi",
          "location": "centralus",
          "managed_by": "",
          "name": "rg-hcb-asgwy-qa-usc-mi",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-mi",
          "location": "centralus",
          "managed_by": "",
          "name": "rg-hcb-asgwy-qa-usc-mi",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {}
        },
        "after_sensitive": {
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_resource_group.network_rg[0]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_resource_group",
      "name": "network_rg",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk",
          "location": "centralus",
          "managed_by": "",
          "name": "rg-hcb-asgwy-qa-usc-ntwk",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk",
          "location": "centralus",
          "managed_by": "",
          "name": "rg-hcb-asgwy-qa-usc-ntwk",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {}
        },
        "after_sensitive": {
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_resource_group.secr_rg[0]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_resource_group",
      "name": "secr_rg",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr",
          "location": "centralus",
          "managed_by": "",
          "name": "rg-hcb-asgwy-qa-usc-secr",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr",
          "location": "centralus",
          "managed_by": "",
          "name": "rg-hcb-asgwy-qa-usc-secr",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {}
        },
        "after_sensitive": {
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs[\"app\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_resource_group",
      "name": "ud_rgs",
      "index": "app",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-app",
          "location": "centralus",
          "managed_by": "",
          "name": "rg-hcb-asgwy-qa-usc-app",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-app",
          "location": "centralus",
          "managed_by": "",
          "name": "rg-hcb-asgwy-qa-usc-app",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {}
        },
        "after_sensitive": {
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs[\"db\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_resource_group",
      "name": "ud_rgs",
      "index": "db",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-db",
          "location": "centralus",
          "managed_by": "",
          "name": "rg-hcb-asgwy-qa-usc-db",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-db",
          "location": "centralus",
          "managed_by": "",
          "name": "rg-hcb-asgwy-qa-usc-db",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {}
        },
        "after_sensitive": {
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_role_assignment.base_kv_key_access_aes_role[0]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_role_assignment",
      "name": "base_kv_key_access_aes_role",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "condition": "",
          "condition_version": "",
          "delegated_managed_identity_resource_id": "",
          "description": "",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu/providers/Microsoft.Authorization/roleAssignments/91c03327-37b5-393a-4c09-f5db988321b4",
          "name": "91c03327-37b5-393a-4c09-f5db988321b4",
          "principal_id": "36899313-5270-482d-b156-57fc8b6f494e",
          "principal_type": "ServicePrincipal",
          "role_definition_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/providers/Microsoft.Authorization/roleDefinitions/e147488a-f6f5-4113-8e2d-b22465e65bf6",
          "role_definition_name": "Key Vault Crypto Service Encryption User",
          "scope": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu",
          "skip_service_principal_aad_check": null,
          "timeouts": null
        },
        "after": {
          "condition": "",
          "condition_version": "",
          "delegated_managed_identity_resource_id": "",
          "description": "",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu/providers/Microsoft.Authorization/roleAssignments/91c03327-37b5-393a-4c09-f5db988321b4",
          "name": "91c03327-37b5-393a-4c09-f5db988321b4",
          "principal_id": "36899313-5270-482d-b156-57fc8b6f494e",
          "principal_type": "ServicePrincipal",
          "role_definition_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/providers/Microsoft.Authorization/roleDefinitions/e147488a-f6f5-4113-8e2d-b22465e65bf6",
          "role_definition_name": "Key Vault Crypto Service Encryption User",
          "scope": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu",
          "skip_service_principal_aad_check": null,
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_role_assignment.base_kv_key_access_aes_role_managed_identity[0]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_role_assignment",
      "name": "base_kv_key_access_aes_role_managed_identity",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "condition": "",
          "condition_version": "",
          "delegated_managed_identity_resource_id": "",
          "description": "",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu/providers/Microsoft.Authorization/roleAssignments/08911769-a98d-00c0-9d20-175a3ccf6941",
          "name": "08911769-a98d-00c0-9d20-175a3ccf6941",
          "principal_id": "2af739f2-d4fb-4e65-8d22-bb648fd34f1a",
          "principal_type": "ServicePrincipal",
          "role_definition_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/providers/Microsoft.Authorization/roleDefinitions/e147488a-f6f5-4113-8e2d-b22465e65bf6",
          "role_definition_name": "Key Vault Crypto Service Encryption User",
          "scope": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu",
          "skip_service_principal_aad_check": null,
          "timeouts": null
        },
        "after": {
          "condition": "",
          "condition_version": "",
          "delegated_managed_identity_resource_id": "",
          "description": "",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu/providers/Microsoft.Authorization/roleAssignments/08911769-a98d-00c0-9d20-175a3ccf6941",
          "name": "08911769-a98d-00c0-9d20-175a3ccf6941",
          "principal_id": "2af739f2-d4fb-4e65-8d22-bb648fd34f1a",
          "principal_type": "ServicePrincipal",
          "role_definition_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/providers/Microsoft.Authorization/roleDefinitions/e147488a-f6f5-4113-8e2d-b22465e65bf6",
          "role_definition_name": "Key Vault Crypto Service Encryption User",
          "scope": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu",
          "skip_service_principal_aad_check": null,
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_route.routes[\"db\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_route",
      "name": "routes",
      "index": "db",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "address_prefix": "0.0.0.0/0",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-db/routes/udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
          "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
          "next_hop_in_ip_address": "10.229.129.4",
          "next_hop_type": "VirtualAppliance",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "route_table_name": "rt-hcb-asgwy-qa-usc-db",
          "timeouts": null
        },
        "after": {
          "address_prefix": "0.0.0.0/0",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-db/routes/udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
          "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
          "next_hop_in_ip_address": "10.229.129.4",
          "next_hop_type": "VirtualAppliance",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "route_table_name": "rt-hcb-asgwy-qa-usc-db",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_route.routes[\"pe\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_route",
      "name": "routes",
      "index": "pe",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "address_prefix": "0.0.0.0/0",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-pe/routes/udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
          "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
          "next_hop_in_ip_address": "10.229.129.4",
          "next_hop_type": "VirtualAppliance",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "route_table_name": "rt-hcb-asgwy-qa-usc-pe",
          "timeouts": null
        },
        "after": {
          "address_prefix": "0.0.0.0/0",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-pe/routes/udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
          "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
          "next_hop_in_ip_address": "10.229.129.4",
          "next_hop_type": "VirtualAppliance",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "route_table_name": "rt-hcb-asgwy-qa-usc-pe",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_route.routes[\"psqldb\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_route",
      "name": "routes",
      "index": "psqldb",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "address_prefix": "0.0.0.0/0",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-psqldb/routes/udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
          "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
          "next_hop_in_ip_address": "10.229.129.4",
          "next_hop_type": "VirtualAppliance",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "route_table_name": "rt-hcb-asgwy-qa-usc-psqldb",
          "timeouts": null
        },
        "after": {
          "address_prefix": "0.0.0.0/0",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-psqldb/routes/udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
          "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
          "next_hop_in_ip_address": "10.229.129.4",
          "next_hop_type": "VirtualAppliance",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "route_table_name": "rt-hcb-asgwy-qa-usc-psqldb",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_route_table.route_tables[\"db\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_route_table",
      "name": "route_tables",
      "index": "db",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "bgp_route_propagation_enabled": false,
          "disable_bgp_route_propagation": true,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-db",
          "location": "centralus",
          "name": "rt-hcb-asgwy-qa-usc-db",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "route": [
            {
              "address_prefix": "0.0.0.0/0",
              "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
              "next_hop_in_ip_address": "10.229.129.4",
              "next_hop_type": "VirtualAppliance"
            }
          ],
          "subnets": [
            "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db"
          ],
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after": {
          "bgp_route_propagation_enabled": false,
          "disable_bgp_route_propagation": true,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-db",
          "location": "centralus",
          "name": "rt-hcb-asgwy-qa-usc-db",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "route": [
            {
              "address_prefix": "0.0.0.0/0",
              "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
              "next_hop_in_ip_address": "10.229.129.4",
              "next_hop_type": "VirtualAppliance"
            }
          ],
          "subnets": [
            "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db"
          ],
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "route": [
            {}
          ],
          "subnets": [
            false
          ],
          "tags": {}
        },
        "after_sensitive": {
          "route": [
            {}
          ],
          "subnets": [
            false
          ],
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_route_table.route_tables[\"pe\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_route_table",
      "name": "route_tables",
      "index": "pe",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "bgp_route_propagation_enabled": false,
          "disable_bgp_route_propagation": true,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-pe",
          "location": "centralus",
          "name": "rt-hcb-asgwy-qa-usc-pe",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "route": [
            {
              "address_prefix": "0.0.0.0/0",
              "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
              "next_hop_in_ip_address": "10.229.129.4",
              "next_hop_type": "VirtualAppliance"
            }
          ],
          "subnets": [
            "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe"
          ],
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after": {
          "bgp_route_propagation_enabled": false,
          "disable_bgp_route_propagation": true,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-pe",
          "location": "centralus",
          "name": "rt-hcb-asgwy-qa-usc-pe",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "route": [
            {
              "address_prefix": "0.0.0.0/0",
              "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
              "next_hop_in_ip_address": "10.229.129.4",
              "next_hop_type": "VirtualAppliance"
            }
          ],
          "subnets": [
            "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe"
          ],
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "route": [
            {}
          ],
          "subnets": [
            false
          ],
          "tags": {}
        },
        "after_sensitive": {
          "route": [
            {}
          ],
          "subnets": [
            false
          ],
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_route_table.route_tables[\"psqldb\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_route_table",
      "name": "route_tables",
      "index": "psqldb",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "bgp_route_propagation_enabled": false,
          "disable_bgp_route_propagation": true,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-psqldb",
          "location": "centralus",
          "name": "rt-hcb-asgwy-qa-usc-psqldb",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "route": [
            {
              "address_prefix": "0.0.0.0/0",
              "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
              "next_hop_in_ip_address": "10.229.129.4",
              "next_hop_type": "VirtualAppliance"
            }
          ],
          "subnets": [
            "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb"
          ],
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after": {
          "bgp_route_propagation_enabled": false,
          "disable_bgp_route_propagation": true,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-psqldb",
          "location": "centralus",
          "name": "rt-hcb-asgwy-qa-usc-psqldb",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
          "route": [
            {
              "address_prefix": "0.0.0.0/0",
              "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
              "next_hop_in_ip_address": "10.229.129.4",
              "next_hop_type": "VirtualAppliance"
            }
          ],
          "subnets": [
            "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb"
          ],
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "route": [
            {}
          ],
          "subnets": [
            false
          ],
          "tags": {}
        },
        "after_sensitive": {
          "route": [
            {}
          ],
          "subnets": [
            false
          ],
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_subnet.subnets[\"db\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_subnet",
      "name": "subnets",
      "index": "db",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "address_prefixes": [
            "10.229.224.144/28"
          ],
          "default_outbound_access_enabled": true,
          "delegation": [],
          "enforce_private_link_endpoint_network_policies": false,
          "enforce_private_link_service_network_policies": false,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db",
          "name": "snet-hcb-asgwy-qa-usc-db",
          "private_endpoint_network_policies": "Enabled",
          "private_endpoint_network_policies_enabled": true,
          "private_link_service_network_policies_enabled": true,
          "resource_group_name": "rg-sub-hcb-common-nonprod-usc-ntwk1",
          "service_endpoint_policy_ids": [],
          "service_endpoints": [
            "Microsoft.AzureActiveDirectory",
            "Microsoft.KeyVault",
            "Microsoft.Storage"
          ],
          "timeouts": null,
          "virtual_network_name": "vnet-sub-hcb-common-nonprod-usc-host1"
        },
        "after": {
          "address_prefixes": [
            "10.229.224.144/28"
          ],
          "default_outbound_access_enabled": true,
          "delegation": [],
          "enforce_private_link_endpoint_network_policies": false,
          "enforce_private_link_service_network_policies": false,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db",
          "name": "snet-hcb-asgwy-qa-usc-db",
          "private_endpoint_network_policies": "Enabled",
          "private_endpoint_network_policies_enabled": true,
          "private_link_service_network_policies_enabled": true,
          "resource_group_name": "rg-sub-hcb-common-nonprod-usc-ntwk1",
          "service_endpoint_policy_ids": [],
          "service_endpoints": [
            "Microsoft.AzureActiveDirectory",
            "Microsoft.KeyVault",
            "Microsoft.Storage"
          ],
          "timeouts": null,
          "virtual_network_name": "vnet-sub-hcb-common-nonprod-usc-host1"
        },
        "after_unknown": {},
        "before_sensitive": {
          "address_prefixes": [
            false
          ],
          "delegation": [],
          "service_endpoint_policy_ids": [],
          "service_endpoints": [
            false,
            false,
            false
          ]
        },
        "after_sensitive": {
          "address_prefixes": [
            false
          ],
          "delegation": [],
          "service_endpoint_policy_ids": [],
          "service_endpoints": [
            false,
            false,
            false
          ]
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_subnet.subnets[\"pe\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_subnet",
      "name": "subnets",
      "index": "pe",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "address_prefixes": [
            "10.229.224.128/28"
          ],
          "default_outbound_access_enabled": true,
          "delegation": [],
          "enforce_private_link_endpoint_network_policies": false,
          "enforce_private_link_service_network_policies": false,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
          "name": "snet-hcb-asgwy-qa-usc-pe",
          "private_endpoint_network_policies": "Enabled",
          "private_endpoint_network_policies_enabled": true,
          "private_link_service_network_policies_enabled": true,
          "resource_group_name": "rg-sub-hcb-common-nonprod-usc-ntwk1",
          "service_endpoint_policy_ids": [],
          "service_endpoints": [],
          "timeouts": null,
          "virtual_network_name": "vnet-sub-hcb-common-nonprod-usc-host1"
        },
        "after": {
          "address_prefixes": [
            "10.229.224.128/28"
          ],
          "default_outbound_access_enabled": true,
          "delegation": [],
          "enforce_private_link_endpoint_network_policies": false,
          "enforce_private_link_service_network_policies": false,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
          "name": "snet-hcb-asgwy-qa-usc-pe",
          "private_endpoint_network_policies": "Enabled",
          "private_endpoint_network_policies_enabled": true,
          "private_link_service_network_policies_enabled": true,
          "resource_group_name": "rg-sub-hcb-common-nonprod-usc-ntwk1",
          "service_endpoint_policy_ids": [],
          "service_endpoints": [],
          "timeouts": null,
          "virtual_network_name": "vnet-sub-hcb-common-nonprod-usc-host1"
        },
        "after_unknown": {},
        "before_sensitive": {
          "address_prefixes": [
            false
          ],
          "delegation": [],
          "service_endpoint_policy_ids": [],
          "service_endpoints": []
        },
        "after_sensitive": {
          "address_prefixes": [
            false
          ],
          "delegation": [],
          "service_endpoint_policy_ids": [],
          "service_endpoints": []
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_subnet.subnets[\"psqldb\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_subnet",
      "name": "subnets",
      "index": "psqldb",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "address_prefixes": [
            "10.229.224.112/28"
          ],
          "default_outbound_access_enabled": true,
          "delegation": [
            {
              "name": "Microsoft.DBforPostgreSQL/flexibleServers",
              "service_delegation": [
                {
                  "actions": [
                    "Microsoft.Network/virtualNetworks/subnets/join/action"
                  ],
                  "name": "Microsoft.DBforPostgreSQL/flexibleServers"
                }
              ]
            }
          ],
          "enforce_private_link_endpoint_network_policies": false,
          "enforce_private_link_service_network_policies": false,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb",
          "name": "snet-hcb-asgwy-qa-usc-psqldb",
          "private_endpoint_network_policies": "Enabled",
          "private_endpoint_network_policies_enabled": true,
          "private_link_service_network_policies_enabled": true,
          "resource_group_name": "rg-sub-hcb-common-nonprod-usc-ntwk1",
          "service_endpoint_policy_ids": [],
          "service_endpoints": [
            "Microsoft.AzureActiveDirectory",
            "Microsoft.KeyVault",
            "Microsoft.Storage"
          ],
          "timeouts": null,
          "virtual_network_name": "vnet-sub-hcb-common-nonprod-usc-host1"
        },
        "after": {
          "address_prefixes": [
            "10.229.224.112/28"
          ],
          "default_outbound_access_enabled": true,
          "delegation": [
            {
              "name": "Microsoft.DBforPostgreSQL/flexibleServers",
              "service_delegation": [
                {
                  "actions": [
                    "Microsoft.Network/virtualNetworks/subnets/join/action"
                  ],
                  "name": "Microsoft.DBforPostgreSQL/flexibleServers"
                }
              ]
            }
          ],
          "enforce_private_link_endpoint_network_policies": false,
          "enforce_private_link_service_network_policies": false,
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb",
          "name": "snet-hcb-asgwy-qa-usc-psqldb",
          "private_endpoint_network_policies": "Enabled",
          "private_endpoint_network_policies_enabled": true,
          "private_link_service_network_policies_enabled": true,
          "resource_group_name": "rg-sub-hcb-common-nonprod-usc-ntwk1",
          "service_endpoint_policy_ids": [],
          "service_endpoints": [
            "Microsoft.AzureActiveDirectory",
            "Microsoft.KeyVault",
            "Microsoft.Storage"
          ],
          "timeouts": null,
          "virtual_network_name": "vnet-sub-hcb-common-nonprod-usc-host1"
        },
        "after_unknown": {},
        "before_sensitive": {
          "address_prefixes": [
            false
          ],
          "delegation": [
            {
              "service_delegation": [
                {
                  "actions": [
                    false
                  ]
                }
              ]
            }
          ],
          "service_endpoint_policy_ids": [],
          "service_endpoints": [
            false,
            false,
            false
          ]
        },
        "after_sensitive": {
          "address_prefixes": [
            false
          ],
          "delegation": [
            {
              "service_delegation": [
                {
                  "actions": [
                    false
                  ]
                }
              ]
            }
          ],
          "service_endpoint_policy_ids": [],
          "service_endpoints": [
            false,
            false,
            false
          ]
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_subnet_network_security_group_association.subnets_nsgs_associations[\"db\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_subnet_network_security_group_association",
      "name": "subnets_nsgs_associations",
      "index": "db",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db",
          "network_security_group_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk",
          "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db",
          "timeouts": null
        },
        "after": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db",
          "network_security_group_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk",
          "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_subnet_network_security_group_association.subnets_nsgs_associations[\"pe\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_subnet_network_security_group_association",
      "name": "subnets_nsgs_associations",
      "index": "pe",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
          "network_security_group_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk",
          "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
          "timeouts": null
        },
        "after": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
          "network_security_group_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk",
          "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_subnet_network_security_group_association.subnets_nsgs_associations[\"psqldb\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_subnet_network_security_group_association",
      "name": "subnets_nsgs_associations",
      "index": "psqldb",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb",
          "network_security_group_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk",
          "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb",
          "timeouts": null
        },
        "after": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb",
          "network_security_group_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk",
          "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_subnet_route_table_association.route_table_subnet_association[\"db\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_subnet_route_table_association",
      "name": "route_table_subnet_association",
      "index": "db",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db",
          "route_table_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-db",
          "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db",
          "timeouts": null
        },
        "after": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db",
          "route_table_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-db",
          "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_subnet_route_table_association.route_table_subnet_association[\"pe\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_subnet_route_table_association",
      "name": "route_table_subnet_association",
      "index": "pe",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
          "route_table_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-pe",
          "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
          "timeouts": null
        },
        "after": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
          "route_table_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-pe",
          "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_subnet_route_table_association.route_table_subnet_association[\"psqldb\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_subnet_route_table_association",
      "name": "route_table_subnet_association",
      "index": "psqldb",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb",
          "route_table_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-psqldb",
          "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb",
          "timeouts": null
        },
        "after": {
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb",
          "route_table_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-psqldb",
          "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_user_assigned_identity.base_kv_uai[0]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_user_assigned_identity",
      "name": "base_kv_uai",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "client_id": "2ea15786-ffd2-49b2-be48-288c91b64b29",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity-asgwy-qa",
          "location": "centralus",
          "name": "identity-asgwy-qa",
          "principal_id": "2af739f2-d4fb-4e65-8d22-bb648fd34f1a",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
          "timeouts": null
        },
        "after": {
          "client_id": "2ea15786-ffd2-49b2-be48-288c91b64b29",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity-asgwy-qa",
          "location": "centralus",
          "name": "identity-asgwy-qa",
          "principal_id": "2af739f2-d4fb-4e65-8d22-bb648fd34f1a",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {}
        },
        "after_sensitive": {
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_user_assigned_identity.ud_managed_identity[\"db\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_user_assigned_identity",
      "name": "ud_managed_identity",
      "index": "db",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "client_id": "7dfeb293-fd73-41bb-8b3c-cd587b34aa50",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-mi/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mi-hcb-asgwy-qa-usc-db",
          "location": "centralus",
          "name": "mi-hcb-asgwy-qa-usc-db",
          "principal_id": "bcc39471-b447-464d-9840-65d5acb7393f",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-mi",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
          "timeouts": null
        },
        "after": {
          "client_id": "7dfeb293-fd73-41bb-8b3c-cd587b34aa50",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-mi/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mi-hcb-asgwy-qa-usc-db",
          "location": "centralus",
          "name": "mi-hcb-asgwy-qa-usc-db",
          "principal_id": "bcc39471-b447-464d-9840-65d5acb7393f",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-mi",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {}
        },
        "after_sensitive": {
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_user_assigned_identity.ud_managed_identity[\"psql-flex-ddl-asgwy-user\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_user_assigned_identity",
      "name": "ud_managed_identity",
      "index": "psql-flex-ddl-asgwy-user",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "client_id": "c52962a5-d6e5-41c0-b69e-d736b7ed2c1c",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-mi/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mi-hcb-asgwy-qa-usc-psql-flex-ddl-asgwy-user",
          "location": "centralus",
          "name": "mi-hcb-asgwy-qa-usc-psql-flex-ddl-asgwy-user",
          "principal_id": "e637341a-4481-4833-84f2-18b157173038",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-mi",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
          "timeouts": null
        },
        "after": {
          "client_id": "c52962a5-d6e5-41c0-b69e-d736b7ed2c1c",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-mi/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mi-hcb-asgwy-qa-usc-psql-flex-ddl-asgwy-user",
          "location": "centralus",
          "name": "mi-hcb-asgwy-qa-usc-psql-flex-ddl-asgwy-user",
          "principal_id": "e637341a-4481-4833-84f2-18b157173038",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-mi",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {}
        },
        "after_sensitive": {
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.azurerm_user_assigned_identity.ud_managed_identity[\"psql-flex-dml-asgwy-user\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "azurerm_user_assigned_identity",
      "name": "ud_managed_identity",
      "index": "psql-flex-dml-asgwy-user",
      "provider_name": "registry.terraform.io/hashicorp/azurerm",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "client_id": "c8e3a81c-9c53-42a0-b874-2df7154652d2",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-mi/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mi-hcb-asgwy-qa-usc-psql-flex-dml-asgwy-user",
          "location": "centralus",
          "name": "mi-hcb-asgwy-qa-usc-psql-flex-dml-asgwy-user",
          "principal_id": "d0b83609-fdb9-41ac-b96e-ef0681ad75b2",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-mi",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
          "timeouts": null
        },
        "after": {
          "client_id": "c8e3a81c-9c53-42a0-b874-2df7154652d2",
          "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-mi/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mi-hcb-asgwy-qa-usc-psql-flex-dml-asgwy-user",
          "location": "centralus",
          "name": "mi-hcb-asgwy-qa-usc-psql-flex-dml-asgwy-user",
          "principal_id": "d0b83609-fdb9-41ac-b96e-ef0681ad75b2",
          "resource_group_name": "rg-hcb-asgwy-qa-usc-mi",
          "tags": {
            "costcenter": "792513",
            "createdondate": "2024-12-18",
            "cvsappid": "APM0015151",
            "dataclassification": "restrictedD",
            "environmentsubtype": "QA",
            "environmenttype": "NonProd",
            "itpmid": "16118",
            "managedby": "ExpressCloud",
            "sharedemailaddress": "GhaiR2@cvshealth.com"
          },
          "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {}
        },
        "after_sensitive": {
          "tags": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list[\"db\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "infoblox_ipv4_network",
      "name": "subnet_cidr_list",
      "index": "db",
      "provider_name": "registry.terraform.io/infobloxopen/infoblox",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "allocate_prefix_len": 28,
          "cidr": "10.229.224.144/28",
          "comment": "EC - snet-hcb-asgwy-qa-usc-db",
          "ext_attrs": "{\"AKA\":\"SUB-HCB-COMMON-NONPROD\",\"Region\":\"centralus\",\"Site\":\"N/A\"}",
          "gateway": "",
          "id": "network/ZG5zLm5ldHdvcmskMTAuMjI5LjIyNC4xNDQvMjgvMA:10.229.224.144/28/Lab",
          "network_view": "Lab",
          "parent_cidr": "10.229.224.0/20",
          "reserve_ip": null,
          "reserve_ipv6": null
        },
        "after": {
          "allocate_prefix_len": 28,
          "cidr": "10.229.224.144/28",
          "comment": "EC - snet-hcb-asgwy-qa-usc-db",
          "ext_attrs": "{\"AKA\":\"SUB-HCB-COMMON-NONPROD\",\"Region\":\"centralus\",\"Site\":\"N/A\"}",
          "gateway": "",
          "id": "network/ZG5zLm5ldHdvcmskMTAuMjI5LjIyNC4xNDQvMjgvMA:10.229.224.144/28/Lab",
          "network_view": "Lab",
          "parent_cidr": "10.229.224.0/20",
          "reserve_ip": null,
          "reserve_ipv6": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list[\"pe\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "infoblox_ipv4_network",
      "name": "subnet_cidr_list",
      "index": "pe",
      "provider_name": "registry.terraform.io/infobloxopen/infoblox",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "allocate_prefix_len": 28,
          "cidr": "10.229.224.128/28",
          "comment": "EC - snet-hcb-asgwy-qa-usc-pe",
          "ext_attrs": "{\"AKA\":\"SUB-HCB-COMMON-NONPROD\",\"Region\":\"centralus\",\"Site\":\"N/A\"}",
          "gateway": "",
          "id": "network/ZG5zLm5ldHdvcmskMTAuMjI5LjIyNC4xMjgvMjgvMA:10.229.224.128/28/Lab",
          "network_view": "Lab",
          "parent_cidr": "10.229.224.0/20",
          "reserve_ip": null,
          "reserve_ipv6": null
        },
        "after": {
          "allocate_prefix_len": 28,
          "cidr": "10.229.224.128/28",
          "comment": "EC - snet-hcb-asgwy-qa-usc-pe",
          "ext_attrs": "{\"AKA\":\"SUB-HCB-COMMON-NONPROD\",\"Region\":\"centralus\",\"Site\":\"N/A\"}",
          "gateway": "",
          "id": "network/ZG5zLm5ldHdvcmskMTAuMjI5LjIyNC4xMjgvMjgvMA:10.229.224.128/28/Lab",
          "network_view": "Lab",
          "parent_cidr": "10.229.224.0/20",
          "reserve_ip": null,
          "reserve_ipv6": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list[\"psqldb\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "infoblox_ipv4_network",
      "name": "subnet_cidr_list",
      "index": "psqldb",
      "provider_name": "registry.terraform.io/infobloxopen/infoblox",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "allocate_prefix_len": 28,
          "cidr": "10.229.224.112/28",
          "comment": "EC - snet-hcb-asgwy-qa-usc-psqldb",
          "ext_attrs": "{\"AKA\":\"SUB-HCB-COMMON-NONPROD\",\"Region\":\"centralus\",\"Site\":\"N/A\"}",
          "gateway": "",
          "id": "network/ZG5zLm5ldHdvcmskMTAuMjI5LjIyNC4xMTIvMjgvMA:10.229.224.112/28/Lab",
          "network_view": "Lab",
          "parent_cidr": "10.229.224.0/20",
          "reserve_ip": null,
          "reserve_ipv6": null
        },
        "after": {
          "allocate_prefix_len": 28,
          "cidr": "10.229.224.112/28",
          "comment": "EC - snet-hcb-asgwy-qa-usc-psqldb",
          "ext_attrs": "{\"AKA\":\"SUB-HCB-COMMON-NONPROD\",\"Region\":\"centralus\",\"Site\":\"N/A\"}",
          "gateway": "",
          "id": "network/ZG5zLm5ldHdvcmskMTAuMjI5LjIyNC4xMTIvMjgvMA:10.229.224.112/28/Lab",
          "network_view": "Lab",
          "parent_cidr": "10.229.224.0/20",
          "reserve_ip": null,
          "reserve_ipv6": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.spoke_asgwy_qa.random_string.kvname",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "random_string",
      "name": "kvname",
      "provider_name": "registry.terraform.io/hashicorp/random",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "8wvf5v",
          "keepers": null,
          "length": 6,
          "lower": true,
          "min_lower": 0,
          "min_numeric": 0,
          "min_special": 0,
          "min_upper": 0,
          "number": true,
          "numeric": true,
          "override_special": null,
          "result": "8wvf5v",
          "special": false,
          "upper": false
        },
        "after": {
          "id": "8wvf5v",
          "keepers": null,
          "length": 6,
          "lower": true,
          "min_lower": 0,
          "min_numeric": 0,
          "min_special": 0,
          "min_upper": 0,
          "number": true,
          "numeric": true,
          "override_special": null,
          "result": "8wvf5v",
          "special": false,
          "upper": false
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.spoke_asgwy_qa.random_string.peering",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "random_string",
      "name": "peering",
      "provider_name": "registry.terraform.io/hashicorp/random",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "dqj1sj",
          "keepers": null,
          "length": 6,
          "lower": true,
          "min_lower": 0,
          "min_numeric": 0,
          "min_special": 0,
          "min_upper": 0,
          "number": true,
          "numeric": true,
          "override_special": null,
          "result": "dqj1sj",
          "special": false,
          "upper": false
        },
        "after": {
          "id": "dqj1sj",
          "keepers": null,
          "length": 6,
          "lower": true,
          "min_lower": 0,
          "min_numeric": 0,
          "min_special": 0,
          "min_upper": 0,
          "number": true,
          "numeric": true,
          "override_special": null,
          "result": "dqj1sj",
          "special": false,
          "upper": false
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.spoke_asgwy_qa.terraform_data.go_live_date",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "terraform_data",
      "name": "go_live_date",
      "provider_name": "terraform.io/builtin/terraform",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "30e76630-a20a-e1f4-4c3a-00a38c067eb6",
          "input": null,
          "output": null,
          "triggers_replace": null
        },
        "after": {
          "id": "30e76630-a20a-e1f4-4c3a-00a38c067eb6",
          "input": null,
          "output": null,
          "triggers_replace": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.spoke_asgwy_qa.terraform_data.kv_rbac_scopes",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "terraform_data",
      "name": "kv_rbac_scopes",
      "provider_name": "terraform.io/builtin/terraform",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "52ec6d6a-7101-2335-b282-4bb3dba644bb",
          "input": [
            "Key Vault Crypto Service Encryption User_/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu_36899313-5270-482d-b156-57fc8b6f494e",
            "Key Vault Crypto Service Encryption User_/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu_2af739f2-d4fb-4e65-8d22-bb648fd34f1a"
          ],
          "output": [
            "Key Vault Crypto Service Encryption User_/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu_36899313-5270-482d-b156-57fc8b6f494e",
            "Key Vault Crypto Service Encryption User_/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu_2af739f2-d4fb-4e65-8d22-bb648fd34f1a"
          ],
          "triggers_replace": null
        },
        "after": {
          "id": "52ec6d6a-7101-2335-b282-4bb3dba644bb",
          "input": [
            "Key Vault Crypto Service Encryption User_/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu_36899313-5270-482d-b156-57fc8b6f494e",
            "Key Vault Crypto Service Encryption User_/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu_2af739f2-d4fb-4e65-8d22-bb648fd34f1a"
          ],
          "output": [
            "Key Vault Crypto Service Encryption User_/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu_36899313-5270-482d-b156-57fc8b6f494e",
            "Key Vault Crypto Service Encryption User_/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu_2af739f2-d4fb-4e65-8d22-bb648fd34f1a"
          ],
          "triggers_replace": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "input": [
            false,
            false
          ],
          "output": [
            false,
            false
          ]
        },
        "after_sensitive": {
          "input": [
            false,
            false
          ],
          "output": [
            false,
            false
          ]
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.terraform_data.ud_key_vaults_lock_triggers[\"db\"]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "terraform_data",
      "name": "ud_key_vaults_lock_triggers",
      "index": "db",
      "provider_name": "terraform.io/builtin/terraform",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "6d0f9e95-f85a-9086-e7f9-c835dd14417e",
          "input": {
            "diag_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db|diag-kv-hcbasgwy0402db",
            "key_vault_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
            "pep_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.Network/privateEndpoints/pep-hcb-asgwy-qa-usc-kv-db"
          },
          "output": {
            "diag_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db|diag-kv-hcbasgwy0402db",
            "key_vault_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
            "pep_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.Network/privateEndpoints/pep-hcb-asgwy-qa-usc-kv-db"
          },
          "triggers_replace": null
        },
        "after": {
          "id": "6d0f9e95-f85a-9086-e7f9-c835dd14417e",
          "input": {
            "diag_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db|diag-kv-hcbasgwy0402db",
            "key_vault_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
            "pep_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.Network/privateEndpoints/pep-hcb-asgwy-qa-usc-kv-db"
          },
          "output": {
            "diag_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db|diag-kv-hcbasgwy0402db",
            "key_vault_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
            "pep_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.Network/privateEndpoints/pep-hcb-asgwy-qa-usc-kv-db"
          },
          "triggers_replace": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "input": {},
          "output": {}
        },
        "after_sensitive": {
          "input": {},
          "output": {}
        }
      }
    },
    {
      "address": "module.spoke_asgwy_qa.time_sleep.base_kv_role_propagation[0]",
      "module_address": "module.spoke_asgwy_qa",
      "mode": "managed",
      "type": "time_sleep",
      "name": "base_kv_role_propagation",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/time",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "create_duration": "30s",
          "destroy_duration": null,
          "id": "2024-12-18T20:30:08Z",
          "triggers": null
        },
        "after": {
          "create_duration": "30s",
          "destroy_duration": null,
          "id": "2024-12-18T20:30:08Z",
          "triggers": null
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    }
  ],
  "prior_state": {
    "format_version": "1.0",
    "terraform_version": "1.10.5",
    "values": {
      "root_module": {
        "child_modules": [
          {
            "resources": [
              {
                "address": "module.spoke_asgwy_qa.data.azurerm_client_config.current",
                "mode": "data",
                "type": "azurerm_client_config",
                "name": "current",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "client_id": "16cf1964-d1e6-478f-a860-997d978fd79c",
                  "id": "Y2xpZW50Q29uZmlncy9jbGllbnRJZD0xNmNmMTk2NC1kMWU2LTQ3OGYtYTg2MC05OTdkOTc4ZmQ3OWM7b2JqZWN0SWQ9Njg2ZDZiMjgtMmRiMy00OGMzLTkxZjctM2Q1OTAxZjAzMTJlO3N1YnNjcmlwdGlvbklkPWUxNjczYmJlLWI2ODgtNDQ1Zi04NzczLTMyYzM3MDlmY2ZmYjt0ZW5hbnRJZD1mYWJiNjFiOC0zYWZlLTRlNzUtYjkzNC1hNDdmNzgyYjhjZDc=",
                  "object_id": "686d6b28-2db3-48c3-91f7-3d5901f0312e",
                  "subscription_id": "e1673bbe-b688-445f-8773-32c3709fcffb",
                  "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
                  "timeouts": null
                },
                "sensitive_values": {}
              },
              {
                "address": "module.spoke_asgwy_qa.data.azurerm_key_vault.host_base_kv[0]",
                "mode": "data",
                "type": "azurerm_key_vault",
                "name": "host_base_kv",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "access_policy": [],
                  "enable_rbac_authorization": true,
                  "enabled_for_deployment": false,
                  "enabled_for_disk_encryption": true,
                  "enabled_for_template_deployment": false,
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu",
                  "location": "centralus",
                  "name": "kv-host1abbsu",
                  "network_acls": [
                    {
                      "bypass": "AzureServices",
                      "default_action": "Deny",
                      "ip_rules": [],
                      "virtual_network_subnet_ids": []
                    }
                  ],
                  "public_network_access_enabled": false,
                  "purge_protection_enabled": true,
                  "resource_group_name": "rg-sub-hcb-common-nonprod-usc-secr1",
                  "sku_name": "premium",
                  "tags": {
                    "applicationname": "Azure Automation",
                    "base": "true",
                    "businessunit": "Commercial",
                    "costcenter": "190337",
                    "createdondate": "2024-04-19",
                    "dataclassification": "Confidential",
                    "environmentsubtype": "Dev",
                    "environmenttype": "NonProd",
                    "host": "true",
                    "itpmid": "D49CE5B1633B555B",
                    "itpr": "NA",
                    "managedby": "ExpressCloud",
                    "migration": "No",
                    "reportingsegment": "HCB",
                    "resourceowner": "Christopher Sokolowski",
                    "responsible_svp": "Alan Rosa",
                    "sharedemailaddress": "sokolowskic@cvshealth.com",
                    "soft-delete": "90"
                  },
                  "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
                  "timeouts": null,
                  "vault_uri": "https://kv-host1abbsu.vault.azure.net/"
                },
                "sensitive_values": {
                  "access_policy": [],
                  "network_acls": [
                    {
                      "ip_rules": [],
                      "virtual_network_subnet_ids": []
                    }
                  ],
                  "tags": {}
                }
              },
              {
                "address": "module.spoke_asgwy_qa.data.azurerm_network_watcher.network_watcher",
                "mode": "data",
                "type": "azurerm_network_watcher",
                "name": "network_watcher",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/NetworkWatcherRG/providers/Microsoft.Network/networkWatchers/NetworkWatcher_centralus",
                  "location": "centralus",
                  "name": "NetworkWatcher_centralus",
                  "resource_group_name": "NetworkWatcherRG",
                  "tags": {
                    "createdondate": "2024-03-20",
                    "dataclassification": "restrictedD"
                  },
                  "timeouts": null
                },
                "sensitive_values": {
                  "tags": {}
                }
              },
              {
                "address": "module.spoke_asgwy_qa.data.azurerm_resources.host_base_key_vault[0]",
                "mode": "data",
                "type": "azurerm_resources",
                "name": "host_base_key_vault",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "id": "resource-44ad1373-e11d-4a84-b98c-5d4664fc210c",
                  "name": null,
                  "required_tags": {
                    "host": "true"
                  },
                  "resource_group_name": "rg-sub-hcb-common-nonprod-usc-secr1",
                  "resources": [
                    {
                      "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu",
                      "location": "centralus",
                      "name": "kv-host1abbsu",
                      "resource_group_name": "rg-sub-hcb-common-nonprod-usc-secr1",
                      "tags": {
                        "applicationname": "Azure Automation",
                        "base": "true",
                        "businessunit": "Commercial",
                        "costcenter": "190337",
                        "createdondate": "2024-04-19",
                        "dataclassification": "Confidential",
                        "environmentsubtype": "Dev",
                        "environmenttype": "NonProd",
                        "host": "true",
                        "itpmid": "D49CE5B1633B555B",
                        "itpr": "NA",
                        "managedby": "ExpressCloud",
                        "migration": "No",
                        "reportingsegment": "HCB",
                        "resourceowner": "Christopher Sokolowski",
                        "responsible_svp": "Alan Rosa",
                        "sharedemailaddress": "sokolowskic@cvshealth.com",
                        "soft-delete": "90"
                      },
                      "type": "Microsoft.KeyVault/vaults"
                    }
                  ],
                  "timeouts": null,
                  "type": "Microsoft.KeyVault/vaults"
                },
                "sensitive_values": {
                  "required_tags": {},
                  "resources": [
                    {
                      "tags": {}
                    }
                  ]
                }
              },
              {
                "address": "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_linux_rhel8",
                "mode": "data",
                "type": "azurerm_shared_image_version",
                "name": "latest_linux_rhel8",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "exclude_from_latest": true,
                  "gallery_name": "SIG_CVS_GEN1",
                  "id": "/subscriptions/82a49f9f-f44c-4d27-a0d3-109a54553d69/resourceGroups/rg-corp-autoeng-dev-usc-vm_automation/providers/Microsoft.Compute/galleries/SIG_CVS_GEN1/images/rhel8/versions/1.0.2",
                  "image_name": "rhel8",
                  "location": "centralus",
                  "managed_image_id": null,
                  "name": "1.0.2",
                  "os_disk_image_size_gb": null,
                  "os_disk_snapshot_id": null,
                  "resource_group_name": "rg-corp-autoeng-dev-usc-vm_automation",
                  "sort_versions_by_semver": false,
                  "tags": {
                    "OS Version": "RHEL 8.10",
                    "applicationname": "Cloud Automation Team",
                    "businessunit": "NA",
                    "costcenter": "190320",
                    "createdondate": "2024-10-22",
                    "dataclassification": "restrictedD",
                    "environmenttype": "NonProd",
                    "itpmid": "APM0015415",
                    "migration": "No",
                    "reportingsegment": "Corporate_Other",
                    "resourceowner": "Peter Krawetzky",
                    "sharedemailaddress": "automation_engineering_edl@CVSHealth.com"
                  },
                  "target_region": [
                    {
                      "name": "centralus",
                      "regional_replica_count": 1,
                      "storage_account_type": "Standard_ZRS"
                    },
                    {
                      "name": "eastus2",
                      "regional_replica_count": 2,
                      "storage_account_type": "Standard_LRS"
                    }
                  ],
                  "timeouts": null
                },
                "sensitive_values": {
                  "tags": {},
                  "target_region": [
                    {},
                    {}
                  ]
                }
              },
              {
                "address": "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_linux_rhel9",
                "mode": "data",
                "type": "azurerm_shared_image_version",
                "name": "latest_linux_rhel9",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "exclude_from_latest": true,
                  "gallery_name": "SIG_CVS_GEN1",
                  "id": "/subscriptions/82a49f9f-f44c-4d27-a0d3-109a54553d69/resourceGroups/rg-corp-autoeng-dev-usc-vm_automation/providers/Microsoft.Compute/galleries/SIG_CVS_GEN1/images/rhel9/versions/1.0.4",
                  "image_name": "rhel9",
                  "location": "centralus",
                  "managed_image_id": null,
                  "name": "1.0.4",
                  "os_disk_image_size_gb": null,
                  "os_disk_snapshot_id": null,
                  "resource_group_name": "rg-corp-autoeng-dev-usc-vm_automation",
                  "sort_versions_by_semver": false,
                  "tags": {
                    "OS Version": "RHEL 9.4",
                    "applicationname": "Cloud Automation Team",
                    "businessunit": "NA",
                    "costcenter": "190320",
                    "createdondate": "2024-10-13",
                    "dataclassification": "restrictedD",
                    "environmentsubtype": "Dev",
                    "environmenttype": "NonProd",
                    "itpmid": "APM0015415",
                    "migration": "No",
                    "reportingsegment": "Corporate_Other",
                    "resourceowner": "Peter Krawetzky",
                    "sharedemailaddress": "automation_engineering_edl@CVSHealth.com"
                  },
                  "target_region": [
                    {
                      "name": "centralus",
                      "regional_replica_count": 1,
                      "storage_account_type": "Standard_ZRS"
                    },
                    {
                      "name": "eastus2",
                      "regional_replica_count": 2,
                      "storage_account_type": "Standard_LRS"
                    }
                  ],
                  "timeouts": null
                },
                "sensitive_values": {
                  "tags": {},
                  "target_region": [
                    {},
                    {}
                  ]
                }
              },
              {
                "address": "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_windows",
                "mode": "data",
                "type": "azurerm_shared_image_version",
                "name": "latest_windows",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "exclude_from_latest": false,
                  "gallery_name": "SIG_CVS_GEN2",
                  "id": "/subscriptions/82a49f9f-f44c-4d27-a0d3-109a54553d69/resourceGroups/rg-corp-autoeng-dev-usc-vm_automation/providers/Microsoft.Compute/galleries/SIG_CVS_GEN2/images/Windows2022/versions/1.0.4",
                  "image_name": "Windows2022",
                  "location": "centralus",
                  "managed_image_id": null,
                  "name": "1.0.4",
                  "os_disk_image_size_gb": null,
                  "os_disk_snapshot_id": null,
                  "resource_group_name": "rg-corp-autoeng-dev-usc-vm_automation",
                  "sort_versions_by_semver": false,
                  "tags": {
                    "OperatingSystem": "Windows2019",
                    "Publisher": "CVS",
                    "applicationname": "Cloud Automation Team",
                    "businessunit": "NA",
                    "costcenter": "190320",
                    "createdondate": "2024-10-28",
                    "dataclassification": "restrictedD",
                    "environmenttype": "NonProd",
                    "itpmid": "APM0015415",
                    "migration": "No",
                    "reportingsegment": "Corporate_Other",
                    "resourceowner": "Peter Krawetzky",
                    "sharedemailaddress": "automation_engineering_edl@CVSHealth.com"
                  },
                  "target_region": [
                    {
                      "name": "centralus",
                      "regional_replica_count": 1,
                      "storage_account_type": "Standard_LRS"
                    },
                    {
                      "name": "eastus",
                      "regional_replica_count": 1,
                      "storage_account_type": "Standard_LRS"
                    },
                    {
                      "name": "westus3",
                      "regional_replica_count": 1,
                      "storage_account_type": "Standard_LRS"
                    },
                    {
                      "name": "eastus2",
                      "regional_replica_count": 1,
                      "storage_account_type": "Standard_LRS"
                    }
                  ],
                  "timeouts": null
                },
                "sensitive_values": {
                  "tags": {},
                  "target_region": [
                    {},
                    {},
                    {},
                    {}
                  ]
                }
              },
              {
                "address": "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                "mode": "data",
                "type": "azurerm_subscription",
                "name": "current",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "display_name": "SUB-HCB-COMMON-NONPROD",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb",
                  "location_placement_id": "Public_2014-09-01",
                  "quota_id": "EnterpriseAgreement_2014-09-01",
                  "spending_limit": "Off",
                  "state": "Enabled",
                  "subscription_id": "e1673bbe-b688-445f-8773-32c3709fcffb",
                  "tags": {
                    "applicationname": "Azure Automation",
                    "businessunit": "Commercial",
                    "costcenter": "0000190337",
                    "createdondate": "2024-01-18",
                    "dataclassification": "confidential",
                    "environmentsubtype": "Dev",
                    "environmenttype": "NonProd",
                    "itpmid": "D49CE5B1633B555B",
                    "itpr": "NA",
                    "migration": "No",
                    "reportingsegment": "HCB",
                    "resourceowner": "Christopher Sokolowski",
                    "responsible_svp": "Allan Rosa",
                    "sharedemailaddress": "sokolowskic@cvshealth.com"
                  },
                  "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
                  "timeouts": null
                },
                "sensitive_values": {
                  "tags": {}
                }
              },
              {
                "address": "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                "mode": "data",
                "type": "azurerm_subscription",
                "name": "hub",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "display_name": "CVS-SECUREHUB001-NONPROD",
                  "id": "/subscriptions/32ca4feb-5c5d-4ac9-81d7-53e191bff3fd",
                  "location_placement_id": "Public_2014-09-01",
                  "quota_id": "EnterpriseAgreement_2014-09-01",
                  "spending_limit": "Off",
                  "state": "Enabled",
                  "subscription_id": "32ca4feb-5c5d-4ac9-81d7-53e191bff3fd",
                  "tags": {
                    "applicationname": "test",
                    "businessunit": "Commercial",
                    "costcenter": "295173",
                    "createdondate": "2022-11-01",
                    "dataclassification": "restrictedD",
                    "environmentsubtype": "QA",
                    "environmenttype": "NonProd",
                    "itpmid": "",
                    "itpr": "ITPR000267",
                    "migration": "Yes",
                    "reportingsegment": "HCB",
                    "resourceowner": "change",
                    "responsible_svp": "Bobby Mukundan",
                    "sharedemailaddress": "test@cvshealth.com"
                  },
                  "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
                  "timeouts": null
                },
                "sensitive_values": {
                  "tags": {}
                }
              },
              {
                "address": "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet[0]",
                "mode": "data",
                "type": "azurerm_virtual_network",
                "name": "host_vnet",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "address_space": [
                    "10.229.224.0/20"
                  ],
                  "dns_servers": [
                    "10.155.168.7",
                    "10.155.168.8"
                  ],
                  "guid": "0aab68bf-9cb8-4279-8b76-94667161d2ad",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1",
                  "location": "centralus",
                  "name": "vnet-sub-hcb-common-nonprod-usc-host1",
                  "resource_group_name": "rg-sub-hcb-common-nonprod-usc-ntwk1",
                  "subnets": [
                    "snet-sub-hcb-common-nonprod-usc-managed_pe",
                    "snet-hcb-ahmoe-dev-usc-ai",
                    "snet-hcb-chatbox-dev-usc-ai",
                    "snet-hcb-chatbox-qa-usc-ai",
                    "snet-hcb-dprm-nonprod-usc-pe",
                    "snet-hcb-ceengin-pt-usc-pe",
                    "snet-hcb-ceengin-pt-usc-mysql_db",
                    "snet-hcb-oradbe-nonprod-usc-vm",
                    "snet-hcb-oradbe-nonprod-usc-db",
                    "snet-hcb-asgwy-qa-usc-db",
                    "snet-hcb-asgwy-qa-usc-psqldb",
                    "snet-hcb-asgwy-qa-usc-pe",
                    "snet-hcb-cnp-dev-usc-ai",
                    "snet-hcb-clianal-dev-usc-ai"
                  ],
                  "tags": {
                    "applicationname": "Azure Automation",
                    "businessunit": "Commercial",
                    "costcenter": "190337",
                    "createdondate": "2024-04-19",
                    "dataclassification": "Confidential",
                    "environmentsubtype": "Dev",
                    "environmenttype": "NonProd",
                    "host": "true",
                    "itpmid": "D49CE5B1633B555B",
                    "itpr": "NA",
                    "managedby": "ExpressCloud",
                    "migration": "No",
                    "reportingsegment": "HCB",
                    "resourceowner": "Christopher Sokolowski",
                    "responsible_svp": "Alan Rosa",
                    "sharedemailaddress": "sokolowskic@cvshealth.com"
                  },
                  "timeouts": null,
                  "vnet_peerings": {
                    "peer-hcb-host-nonprod-usc-spk": "/subscriptions/32ca4feb-5c5d-4ac9-81d7-53e191bff3fd/resourceGroups/rg-corp-hub-nonprod-usc-ntwk/providers/Microsoft.Network/virtualNetworks/vnet-corp-hub-nonprod-usc",
                    "peer-nonprod-usc-HCBshared": "/subscriptions/7f81ff32-74f5-45e3-bc03-a8141f72754d/resourceGroups/RG-INS-USC-COM-1/providers/Microsoft.Network/virtualNetworks/VN-INS-USC-COM-1"
                  },
                  "vnet_peerings_addresses": [
                    "10.229.128.0/22",
                    "10.159.17.0/24"
                  ]
                },
                "sensitive_values": {
                  "address_space": [
                    false
                  ],
                  "dns_servers": [
                    false,
                    false
                  ],
                  "subnets": [
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false
                  ],
                  "tags": {},
                  "vnet_peerings": {},
                  "vnet_peerings_addresses": [
                    false,
                    false
                  ]
                }
              },
              {
                "address": "module.spoke_asgwy_qa.data.external.lookup_origin_pr_env_var",
                "mode": "data",
                "type": "external",
                "name": "lookup_origin_pr_env_var",
                "provider_name": "registry.terraform.io/hashicorp/external",
                "schema_version": 0,
                "values": {
                  "id": "-",
                  "program": [
                    "bash",
                    ".terraform/modules/spoke_asgwy_qa/scripts/read-origin-pr-env-var.sh"
                  ],
                  "query": null,
                  "result": {
                    "pr_number": "7904"
                  },
                  "working_dir": null
                },
                "sensitive_values": {
                  "program": [
                    false,
                    false
                  ],
                  "result": {}
                }
              },
              {
                "address": "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container[0]",
                "mode": "data",
                "type": "infoblox_ipv4_network_container",
                "name": "container",
                "index": 0,
                "provider_name": "registry.terraform.io/infobloxopen/infoblox",
                "schema_version": 0,
                "values": {
                  "cidr": "10.83.192.0/18",
                  "comment": "EC - USC - NonProd",
                  "ext_attrs": "{}",
                  "id": "networkcontainer/ZG5zLm5ldHdvcmtfY29udGFpbmVyJDEwLjgzLjE5Mi4wLzE4LzA:10.83.192.0/18/Lab",
                  "network_view": "Lab"
                },
                "sensitive_values": {}
              },
              {
                "address": "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container[\"0\"]",
                "mode": "data",
                "type": "infoblox_ipv4_network_container",
                "name": "host_vnet_container",
                "index": "0",
                "provider_name": "registry.terraform.io/infobloxopen/infoblox",
                "schema_version": 0,
                "values": {
                  "cidr": "10.229.224.0/20",
                  "comment": "EC - vnet-sub-hcb-common-nonprod-usc-host1",
                  "ext_attrs": "{\"AKA\":\"SUB-HCB-COMMON-NONPROD\",\"Region\":\"centralus\",\"Site\":\"N/A\"}",
                  "id": "networkcontainer/ZG5zLm5ldHdvcmtfY29udGFpbmVyJDEwLjIyOS4yMjQuMC8yMC8w:10.229.224.0/20/Lab",
                  "network_view": "Lab"
                },
                "sensitive_values": {}
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_disk_encryption_set.base_kv_des[0]",
                "mode": "managed",
                "type": "azurerm_disk_encryption_set",
                "name": "base_kv_des",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "auto_key_rotation_enabled": false,
                  "encryption_type": "EncryptionAtRestWithCustomerKey",
                  "federated_client_id": "",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.Compute/diskEncryptionSets/des-asgwy-centralus-qa",
                  "identity": [
                    {
                      "identity_ids": [],
                      "principal_id": "36899313-5270-482d-b156-57fc8b6f494e",
                      "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
                      "type": "SystemAssigned"
                    }
                  ],
                  "key_vault_key_id": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa/9b705eae3d5c4d96905ac4ced87b7ba3",
                  "key_vault_key_url": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa/9b705eae3d5c4d96905ac4ced87b7ba3",
                  "location": "centralus",
                  "managed_hsm_key_id": null,
                  "name": "des-asgwy-centralus-qa",
                  "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
                  "tags": {
                    "costcenter": "792513",
                    "createdondate": "2024-12-18",
                    "cvsappid": "APM0015151",
                    "dataclassification": "restrictedD",
                    "environmentsubtype": "QA",
                    "environmenttype": "NonProd",
                    "itpmid": "16118",
                    "managedby": "ExpressCloud",
                    "sharedemailaddress": "GhaiR2@cvshealth.com"
                  },
                  "timeouts": null
                },
                "sensitive_values": {
                  "identity": [
                    {
                      "identity_ids": []
                    }
                  ],
                  "tags": {}
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_key_vault.base_kv",
                  "module.spoke_asgwy_qa.azurerm_key_vault_key.base_kv_key",
                  "module.spoke_asgwy_qa.azurerm_private_endpoint.base_kv_pep",
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.secr_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs",
                  "module.spoke_asgwy_qa.azurerm_route.routes",
                  "module.spoke_asgwy_qa.azurerm_route_table.route_tables",
                  "module.spoke_asgwy_qa.azurerm_subnet.subnets",
                  "module.spoke_asgwy_qa.azurerm_subnet_route_table_association.route_table_subnet_association",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_client_config.current",
                  "module.spoke_asgwy_qa.data.azurerm_key_vault.host_base_kv",
                  "module.spoke_asgwy_qa.data.azurerm_key_vault_key.base_kv_key",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_resource_group.all_context_rgs",
                  "module.spoke_asgwy_qa.data.azurerm_resources.host_base_key_vault",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_linux_rhel8",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_windows",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.external.azlogin",
                  "module.spoke_asgwy_qa.data.external.existing_rgs",
                  "module.spoke_asgwy_qa.data.external.find_base_key",
                  "module.spoke_asgwy_qa.data.external.vm_azlogin",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.data.terraform_remote_state.spoke",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.kvname",
                  "module.spoke_asgwy_qa.random_string.peering",
                  "module.spoke_asgwy_qa.terraform_data.existing_rgs"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_key_vault.ud_key_vaults[\"db\"]",
                "mode": "managed",
                "type": "azurerm_key_vault",
                "name": "ud_key_vaults",
                "index": "db",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 2,
                "values": {
                  "access_policy": [],
                  "contact": [],
                  "enable_rbac_authorization": true,
                  "enabled_for_deployment": false,
                  "enabled_for_disk_encryption": false,
                  "enabled_for_template_deployment": false,
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
                  "location": "centralus",
                  "name": "kv-hcbasgwy0402db",
                  "network_acls": [
                    {
                      "bypass": "AzureServices",
                      "default_action": "Deny",
                      "ip_rules": [],
                      "virtual_network_subnet_ids": []
                    }
                  ],
                  "public_network_access_enabled": false,
                  "purge_protection_enabled": true,
                  "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
                  "sku_name": "premium",
                  "soft_delete_retention_days": 7,
                  "tags": {
                    "costcenter": "792513",
                    "createdondate": "2024-12-18",
                    "cvsappid": "APM0015151",
                    "dataclassification": "restrictedD",
                    "environmentsubtype": "QA",
                    "environmenttype": "NonProd",
                    "itpmid": "16118",
                    "managedby": "ExpressCloud",
                    "sharedemailaddress": "GhaiR2@cvshealth.com"
                  },
                  "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
                  "timeouts": null,
                  "vault_uri": "https://kv-hcbasgwy0402db.vault.azure.net/"
                },
                "sensitive_values": {
                  "access_policy": [],
                  "contact": [],
                  "network_acls": [
                    {
                      "ip_rules": [],
                      "virtual_network_subnet_ids": []
                    }
                  ],
                  "tags": {}
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.secr_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_client_config.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.data.terraform_remote_state.spoke",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.kvname",
                  "module.spoke_asgwy_qa.random_string.peering"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_key_vault_key.base_kv_key[0]",
                "mode": "managed",
                "type": "azurerm_key_vault_key",
                "name": "base_kv_key",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "curve": "",
                  "e": "AQAB",
                  "expiration_date": null,
                  "id": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa/9b705eae3d5c4d96905ac4ced87b7ba3",
                  "key_opts": [
                    "decrypt",
                    "encrypt",
                    "unwrapKey",
                    "wrapKey"
                  ],
                  "key_size": 2048,
                  "key_type": "RSA-HSM",
                  "key_vault_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu",
                  "n": "miq8N1FWbB59Srh8rR3Ha1eazps1QXdPJCtBYQJqui3LgBmafW1PNcFgmQcoByUzmmisdnI40jAEH_pDVr5-zOKkqz41H1rn_qbb5LNlGJfgA1V9yS7Yqk5lnmCyYCpwZQTfO2khgZauAzY_-ATGvfDKmocA5PNchalcxis4CZLw1xgyagic_uFgIorMOGJ42RQrddDZJf5CjU4GKAbh9Msh6WZnD-wAFN67MI2h4WbRL3d6aDbJ_x5xn6Rc8imgOjbqr99QGUuZLKuBKb7eDO2TlK69Rq9sjMVSvCZf8iCEI2gnbQJm4_tSBU_Vk1tacrOn548ixoqaRzXLv1IGkw",
                  "name": "key-asgwy-centralus-qa",
                  "not_before_date": null,
                  "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCaKrw3UVZsHn1KuHytHcdrV5rOmzVBd08kK0FhAmq6LcuAGZp9bU81wWCZBygHJTOaaKx2cjjSMAQf+kNWvn7M4qSrPjUfWuf+ptvks2UYl+ADVX3JLtiqTmWeYLJgKnBlBN87aSGBlq4DNj/4BMa98MqahwDk81yFqVzGKzgJkvDXGDJqCJz+4WAiisw4YnjZFCt10Nkl/kKNTgYoBuH0yyHpZmcP7AAU3rswjaHhZtEvd3poNsn/HnGfpFzyKaA6Nuqv31AZS5ksq4Epvt4M7ZOUrr1Gr2yMxVK8Jl/yIIQjaCdtAmbj+1IFT9WTW1pys6fnjyLGippHNcu/UgaT\n",
                  "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmiq8N1FWbB59Srh8rR3H\na1eazps1QXdPJCtBYQJqui3LgBmafW1PNcFgmQcoByUzmmisdnI40jAEH/pDVr5+\nzOKkqz41H1rn/qbb5LNlGJfgA1V9yS7Yqk5lnmCyYCpwZQTfO2khgZauAzY/+ATG\nvfDKmocA5PNchalcxis4CZLw1xgyagic/uFgIorMOGJ42RQrddDZJf5CjU4GKAbh\n9Msh6WZnD+wAFN67MI2h4WbRL3d6aDbJ/x5xn6Rc8imgOjbqr99QGUuZLKuBKb7e\nDO2TlK69Rq9sjMVSvCZf8iCEI2gnbQJm4/tSBU/Vk1tacrOn548ixoqaRzXLv1IG\nkwIDAQAB\n-----END PUBLIC KEY-----\n",
                  "resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu/keys/key-asgwy-centralus-qa/versions/9b705eae3d5c4d96905ac4ced87b7ba3",
                  "resource_versionless_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu/keys/key-asgwy-centralus-qa",
                  "rotation_policy": [
                    {
                      "automatic": [
                        {
                          "time_after_creation": "P1Y",
                          "time_before_expiry": ""
                        }
                      ],
                      "expire_after": "",
                      "notify_before_expiry": ""
                    }
                  ],
                  "tags": {},
                  "timeouts": null,
                  "version": "9b705eae3d5c4d96905ac4ced87b7ba3",
                  "versionless_id": "https://kv-host1abbsu.vault.azure.net/keys/key-asgwy-centralus-qa",
                  "x": "",
                  "y": ""
                },
                "sensitive_values": {
                  "key_opts": [
                    false,
                    false,
                    false,
                    false
                  ],
                  "rotation_policy": [
                    {
                      "automatic": [
                        {}
                      ]
                    }
                  ],
                  "tags": {}
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_key_vault.base_kv",
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.secr_rg",
                  "module.spoke_asgwy_qa.azurerm_route.routes",
                  "module.spoke_asgwy_qa.azurerm_route_table.route_tables",
                  "module.spoke_asgwy_qa.azurerm_subnet.subnets",
                  "module.spoke_asgwy_qa.azurerm_subnet_route_table_association.route_table_subnet_association",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_client_config.current",
                  "module.spoke_asgwy_qa.data.azurerm_key_vault.host_base_kv",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_resources.host_base_key_vault",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.data.terraform_remote_state.spoke",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.kvname",
                  "module.spoke_asgwy_qa.random_string.peering"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_log_analytics_workspace.log_analytics_workspace[0]",
                "mode": "managed",
                "type": "azurerm_log_analytics_workspace",
                "name": "log_analytics_workspace",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 3,
                "values": {
                  "allow_resource_only_permissions": true,
                  "cmk_for_query_forced": false,
                  "daily_quota_gb": -1,
                  "data_collection_rule_id": "",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.OperationalInsights/workspaces/log-hcb-asgwy-qa-usc",
                  "identity": [],
                  "immediate_data_purge_on_30_days_enabled": false,
                  "internet_ingestion_enabled": true,
                  "internet_query_enabled": true,
                  "local_authentication_disabled": false,
                  "location": "centralus",
                  "name": "log-hcb-asgwy-qa-usc",
                  "primary_shared_key": "mYiEYXQpldg2vKyOkYEeQ+ctkfGqKA5fFqetoy4EjLM6YxRqJTfXCRG+viNrTsDZAo2zkeeKrzKcoefVSCXUOg==",
                  "reservation_capacity_in_gb_per_day": null,
                  "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
                  "retention_in_days": 30,
                  "secondary_shared_key": "55adVuGSym8ZN5b+HyQ1kaC0B87AM5wrJmx4jk5xq9kAUUhFCVnziMIW2aDtOxUmUmvbOi3K5YATAH+hUrT62A==",
                  "sku": "PerGB2018",
                  "tags": {
                    "costcenter": "792513",
                    "createdondate": "2024-12-18",
                    "cvsappid": "APM0015151",
                    "dataclassification": "restrictedD",
                    "environmentsubtype": "QA",
                    "environmenttype": "NonProd",
                    "itpmid": "16118",
                    "managedby": "ExpressCloud",
                    "sharedemailaddress": "GhaiR2@cvshealth.com"
                  },
                  "timeouts": null,
                  "workspace_id": "bf046fda-638e-44f8-b099-8abd2bdaa859"
                },
                "sensitive_values": {
                  "identity": [],
                  "primary_shared_key": true,
                  "secondary_shared_key": true,
                  "tags": {}
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_resource_group.secr_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_management_lock.ud_key_vaults[\"db\"]",
                "mode": "managed",
                "type": "azurerm_management_lock",
                "name": "ud_key_vaults",
                "index": "db",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db/providers/Microsoft.Authorization/locks/EIS_CSS_Delete_Lock",
                  "lock_level": "CanNotDelete",
                  "name": "EIS_CSS_Delete_Lock",
                  "notes": "GRP 71 [AR] Enforce delete prevention for Azure KeyVault",
                  "scope": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
                  "timeouts": null
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_api_management.apim",
                  "module.spoke_asgwy_qa.azurerm_app_service_environment_v3.ases",
                  "module.spoke_asgwy_qa.azurerm_cognitive_account.cogs",
                  "module.spoke_asgwy_qa.azurerm_data_factory.adf",
                  "module.spoke_asgwy_qa.azurerm_databricks_workspace.dbk",
                  "module.spoke_asgwy_qa.azurerm_disk_encryption_set.aks_disk_encryption_set",
                  "module.spoke_asgwy_qa.azurerm_disk_encryption_set.base_kv_custom_des",
                  "module.spoke_asgwy_qa.azurerm_disk_encryption_set.base_kv_des",
                  "module.spoke_asgwy_qa.azurerm_key_vault.adf_keyvault",
                  "module.spoke_asgwy_qa.azurerm_key_vault.aks_de_keyvault",
                  "module.spoke_asgwy_qa.azurerm_key_vault.aks_int_keyvault",
                  "module.spoke_asgwy_qa.azurerm_key_vault.apim_key_vaults",
                  "module.spoke_asgwy_qa.azurerm_key_vault.base_custom_kv",
                  "module.spoke_asgwy_qa.azurerm_key_vault.base_kv",
                  "module.spoke_asgwy_qa.azurerm_key_vault.cog_kv",
                  "module.spoke_asgwy_qa.azurerm_key_vault.ud_key_vaults",
                  "module.spoke_asgwy_qa.azurerm_key_vault_key.aks_key_vault_key",
                  "module.spoke_asgwy_qa.azurerm_key_vault_key.base_custom_kv_key",
                  "module.spoke_asgwy_qa.azurerm_key_vault_key.base_kv_key",
                  "module.spoke_asgwy_qa.azurerm_key_vault_key.cog_kv_key",
                  "module.spoke_asgwy_qa.azurerm_key_vault_key.ud_kv_key",
                  "module.spoke_asgwy_qa.azurerm_kubernetes_cluster.aks_cluster",
                  "module.spoke_asgwy_qa.azurerm_linux_function_app.linux_funapps",
                  "module.spoke_asgwy_qa.azurerm_log_analytics_workspace.log_analytics_workspace",
                  "module.spoke_asgwy_qa.azurerm_monitor_diagnostic_setting.diag_ud_key_vaults",
                  "module.spoke_asgwy_qa.azurerm_network_security_group.network_security_group",
                  "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules",
                  "module.spoke_asgwy_qa.azurerm_private_endpoint.aks_de_keyvault_pep",
                  "module.spoke_asgwy_qa.azurerm_private_endpoint.base_custom_kv_pes",
                  "module.spoke_asgwy_qa.azurerm_private_endpoint.base_kv_pep",
                  "module.spoke_asgwy_qa.azurerm_private_endpoint.cog_kv_peps",
                  "module.spoke_asgwy_qa.azurerm_private_endpoint.ud_key_vaults_pes",
                  "module.spoke_asgwy_qa.azurerm_public_ip.additional_apim_public_ip",
                  "module.spoke_asgwy_qa.azurerm_public_ip.apim_public_ip",
                  "module.spoke_asgwy_qa.azurerm_resource_group.adf_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.aks_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.app_services_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.cog_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.mi_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.secr_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.adf_kv_key_access_admin_role",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.adf_kv_key_access_admin_role_system_id",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.apim_kv_access_for_named_value",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.apim_kv_cert_access_for_named_value",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.azure_disk_encryption_permissions",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.base_custom_kv_key_access_aes_role",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.base_custom_kv_key_access_aes_role_managed_identity",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.base_kv_access_cog_role",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.base_kv_key_access_admin_role",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.base_kv_key_access_admin_role_dbk",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.base_kv_key_access_aes_role",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.base_kv_key_access_aes_role_managed_identity",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.base_kv_key_access_dbw_managed_id",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.base_kv_key_access_reader_role",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.base_kv_key_access_user_role",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.cluster_external_managed_identity_user_permissions",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.cluster_gha_managed_identity_user_permissions",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.cog_kv_key_access_aes_role_managed_identity",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.cog_kv_key_access_cv_role_managed_identity",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.dns_zone_permissions",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.key_vault_admin_permissions",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.key_vault_web_app_routing_certificates_officer",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.key_vault_web_app_routing_secrets_user",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.key_vaults_secret_provider_permissions",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.key_vaults_secret_provider_permissions_over_central_xpkube_kv",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.kv_access_apim",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.kv_access_linux_funapps",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.kv_access_windows_funapps",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.openai_cognitive_user_access",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.openai_user_access",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.ud_key_vault_certificates_officer_rbac",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.ud_key_vault_secrets_officer_rbac",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.ud_keyvault_crypto_user_rbac",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.ud_keyvault_secrets_user_rbac",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.ud_keyvault_ud_mi_crypto_user_rbac",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.ud_keyvault_ud_mi_key_vault_admin_certificates_officer_rbac",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.ud_keyvault_ud_mi_key_vault_admin_crypto_officer_rbac",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.ud_keyvault_ud_mi_key_vault_admin_secrets_officer_rbac",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.ud_keyvault_ud_mi_secrets_user_rbac",
                  "module.spoke_asgwy_qa.azurerm_route.routes",
                  "module.spoke_asgwy_qa.azurerm_route_table.route_tables",
                  "module.spoke_asgwy_qa.azurerm_service_plan.asps",
                  "module.spoke_asgwy_qa.azurerm_storage_account.ud_storage_accounts",
                  "module.spoke_asgwy_qa.azurerm_subnet.subnets",
                  "module.spoke_asgwy_qa.azurerm_subnet_route_table_association.route_table_subnet_association",
                  "module.spoke_asgwy_qa.azurerm_user_assigned_identity.aks_managed_identity",
                  "module.spoke_asgwy_qa.azurerm_user_assigned_identity.base_kv_uai",
                  "module.spoke_asgwy_qa.azurerm_user_assigned_identity.cog_kv_uai",
                  "module.spoke_asgwy_qa.azurerm_user_assigned_identity.ud_managed_identity",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.azurerm_windows_function_app.windows_funapps",
                  "module.spoke_asgwy_qa.data.azurerm_client_config.current",
                  "module.spoke_asgwy_qa.data.azurerm_key_vault.host_base_kv",
                  "module.spoke_asgwy_qa.data.azurerm_key_vault_key.base_kv_key",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_network_security_group.ext_nsg",
                  "module.spoke_asgwy_qa.data.azurerm_resource_group.all_context_rgs",
                  "module.spoke_asgwy_qa.data.azurerm_resources.all_existing_vms",
                  "module.spoke_asgwy_qa.data.azurerm_resources.ases",
                  "module.spoke_asgwy_qa.data.azurerm_resources.host_base_key_vault",
                  "module.spoke_asgwy_qa.data.azurerm_resources.host_custom_key_vault",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_linux_rhel8",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_windows",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_user_assigned_identity.base_kv_uai",
                  "module.spoke_asgwy_qa.data.azurerm_user_assigned_identity.function_uais",
                  "module.spoke_asgwy_qa.data.azurerm_user_assigned_identity.webapprouting_managed_identity",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.external.azlogin",
                  "module.spoke_asgwy_qa.data.external.existing_rgs",
                  "module.spoke_asgwy_qa.data.external.find_base_key",
                  "module.spoke_asgwy_qa.data.external.vm_azlogin",
                  "module.spoke_asgwy_qa.data.external.vm_name_generation",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.data.terraform_remote_state.spoke",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_password.aks_windows_password",
                  "module.spoke_asgwy_qa.random_string.aks_suffix_name",
                  "module.spoke_asgwy_qa.random_string.kvname",
                  "module.spoke_asgwy_qa.random_string.peering",
                  "module.spoke_asgwy_qa.terraform_data.existing_rgs",
                  "module.spoke_asgwy_qa.terraform_data.kv_rbac_scopes",
                  "module.spoke_asgwy_qa.terraform_data.ud_key_vaults_lock_triggers",
                  "module.spoke_asgwy_qa.time_sleep.base_kv_role_propagation",
                  "module.spoke_asgwy_qa.time_sleep.cog_kv_role_propagation"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_monitor_diagnostic_setting.diag_ud_key_vaults[\"db\"]",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "diag_ud_key_vaults",
                "index": "db",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "enabled_log": [
                    {
                      "category": "",
                      "category_group": "audit",
                      "retention_policy": [
                        {
                          "days": 0,
                          "enabled": false
                        }
                      ]
                    }
                  ],
                  "eventhub_authorization_rule_id": "/subscriptions/7f81ff32-74f5-45e3-bc03-a8141f72754d/resourceGroups/RG-CVS-SharedServices-2/providers/Microsoft.EventHub/namespaces/rac2ehnpp2v/authorizationRules/RootManageSharedAccessKey",
                  "eventhub_name": "cvs-splunk-azure-logs",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db|diag-kv-hcbasgwy0402db",
                  "log": [
                    {
                      "category": "",
                      "category_group": "allLogs",
                      "enabled": false,
                      "retention_policy": [
                        {
                          "days": 0,
                          "enabled": false
                        }
                      ]
                    },
                    {
                      "category": "",
                      "category_group": "audit",
                      "enabled": true,
                      "retention_policy": [
                        {
                          "days": 0,
                          "enabled": false
                        }
                      ]
                    }
                  ],
                  "log_analytics_destination_type": "AzureDiagnostics",
                  "log_analytics_workspace_id": "",
                  "metric": [
                    {
                      "category": "AllMetrics",
                      "enabled": false,
                      "retention_policy": [
                        {
                          "days": 0,
                          "enabled": false
                        }
                      ]
                    }
                  ],
                  "name": "diag-kv-hcbasgwy0402db",
                  "partner_solution_id": null,
                  "storage_account_id": null,
                  "target_resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
                  "timeouts": null
                },
                "sensitive_values": {
                  "enabled_log": [
                    {
                      "retention_policy": [
                        {}
                      ]
                    }
                  ],
                  "log": [
                    {
                      "retention_policy": [
                        {}
                      ]
                    },
                    {
                      "retention_policy": [
                        {}
                      ]
                    }
                  ],
                  "metric": [
                    {
                      "retention_policy": [
                        {}
                      ]
                    }
                  ]
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_key_vault.ud_key_vaults",
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.secr_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_client_config.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.data.terraform_remote_state.spoke",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.kvname",
                  "module.spoke_asgwy_qa.random_string.peering"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_monitor_diagnostic_setting.law_diagnostics_eventhub[0]",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "law_diagnostics_eventhub",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "enabled_log": [
                    {
                      "category": "",
                      "category_group": "allLogs",
                      "retention_policy": [
                        {
                          "days": 0,
                          "enabled": false
                        }
                      ]
                    },
                    {
                      "category": "",
                      "category_group": "audit",
                      "retention_policy": [
                        {
                          "days": 0,
                          "enabled": false
                        }
                      ]
                    }
                  ],
                  "eventhub_authorization_rule_id": "/subscriptions/7f81ff32-74f5-45e3-bc03-a8141f72754d/resourceGroups/RG-CVS-SharedServices-2/providers/Microsoft.EventHub/namespaces/rac2ehnpp2v/authorizationRules/RootManageSharedAccessKey",
                  "eventhub_name": "cvs-splunk-azure-logs",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.OperationalInsights/workspaces/log-hcb-asgwy-qa-usc|diag-log-hcb-asgwy-qa-usc",
                  "log": [
                    {
                      "category": "",
                      "category_group": "allLogs",
                      "enabled": true,
                      "retention_policy": [
                        {
                          "days": 0,
                          "enabled": false
                        }
                      ]
                    },
                    {
                      "category": "",
                      "category_group": "audit",
                      "enabled": true,
                      "retention_policy": [
                        {
                          "days": 0,
                          "enabled": false
                        }
                      ]
                    }
                  ],
                  "log_analytics_destination_type": "",
                  "log_analytics_workspace_id": "",
                  "metric": [
                    {
                      "category": "AllMetrics",
                      "enabled": false,
                      "retention_policy": [
                        {
                          "days": 0,
                          "enabled": false
                        }
                      ]
                    }
                  ],
                  "name": "diag-log-hcb-asgwy-qa-usc",
                  "partner_solution_id": null,
                  "storage_account_id": null,
                  "target_resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.OperationalInsights/workspaces/log-hcb-asgwy-qa-usc",
                  "timeouts": null
                },
                "sensitive_values": {
                  "enabled_log": [
                    {
                      "retention_policy": [
                        {}
                      ]
                    },
                    {
                      "retention_policy": [
                        {}
                      ]
                    }
                  ],
                  "log": [
                    {
                      "retention_policy": [
                        {}
                      ]
                    },
                    {
                      "retention_policy": [
                        {}
                      ]
                    }
                  ],
                  "metric": [
                    {
                      "retention_policy": [
                        {}
                      ]
                    }
                  ]
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_log_analytics_workspace.log_analytics_workspace",
                  "module.spoke_asgwy_qa.azurerm_resource_group.secr_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_network_security_group.network_security_group[0]",
                "mode": "managed",
                "type": "azurerm_network_security_group",
                "name": "network_security_group",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk",
                  "location": "centralus",
                  "name": "nsg-hcb-asgwy-qa-usc-ntwk",
                  "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                  "security_rule": [
                    {
                      "access": "Allow",
                      "description": "",
                      "destination_address_prefix": "",
                      "destination_address_prefixes": [
                        "10.229.224.112/28",
                        "10.229.224.128/28",
                        "10.229.224.144/28"
                      ],
                      "destination_application_security_group_ids": [],
                      "destination_port_range": "443",
                      "destination_port_ranges": [],
                      "direction": "Inbound",
                      "name": "AllowInternalHttpsTrafficInbound",
                      "priority": 4020,
                      "protocol": "*",
                      "source_address_prefix": "",
                      "source_address_prefixes": [
                        "10.0.0.0/8",
                        "157.121.0.0/16",
                        "167.69.0.0/16",
                        "172.16.0.0/12",
                        "198.187.64.0/18",
                        "204.99.0.0/17",
                        "206.213.0.0/16"
                      ],
                      "source_application_security_group_ids": [],
                      "source_port_range": "*",
                      "source_port_ranges": []
                    },
                    {
                      "access": "Allow",
                      "description": "",
                      "destination_address_prefix": "10.229.224.112/28",
                      "destination_address_prefixes": [],
                      "destination_application_security_group_ids": [],
                      "destination_port_range": "5432",
                      "destination_port_ranges": [],
                      "direction": "Inbound",
                      "name": "AllowPostgresTrafficFromInternalInbound",
                      "priority": 4033,
                      "protocol": "*",
                      "source_address_prefix": "",
                      "source_address_prefixes": [
                        "10.0.0.0/8",
                        "157.121.0.0/16",
                        "167.69.0.0/16",
                        "172.16.0.0/12",
                        "198.187.64.0/18",
                        "204.99.0.0/17",
                        "206.213.0.0/16"
                      ],
                      "source_application_security_group_ids": [],
                      "source_port_range": "*",
                      "source_port_ranges": []
                    },
                    {
                      "access": "Allow",
                      "description": "",
                      "destination_address_prefix": "10.229.224.112/28",
                      "destination_address_prefixes": [],
                      "destination_application_security_group_ids": [],
                      "destination_port_range": "5432",
                      "destination_port_ranges": [],
                      "direction": "Inbound",
                      "name": "AllowPostgresTrafficSelfInbound",
                      "priority": 4030,
                      "protocol": "*",
                      "source_address_prefix": "10.229.224.112/28",
                      "source_address_prefixes": [],
                      "source_application_security_group_ids": [],
                      "source_port_range": "*",
                      "source_port_ranges": []
                    },
                    {
                      "access": "Allow",
                      "description": "",
                      "destination_address_prefix": "10.229.224.112/28",
                      "destination_address_prefixes": [],
                      "destination_application_security_group_ids": [],
                      "destination_port_range": "5432",
                      "destination_port_ranges": [],
                      "direction": "Outbound",
                      "name": "AllowPostgresTrafficSelfOutbound",
                      "priority": 4030,
                      "protocol": "*",
                      "source_address_prefix": "10.229.224.112/28",
                      "source_address_prefixes": [],
                      "source_application_security_group_ids": [],
                      "source_port_range": "*",
                      "source_port_ranges": []
                    },
                    {
                      "access": "Allow",
                      "description": "",
                      "destination_address_prefix": "AzureActiveDirectory",
                      "destination_address_prefixes": [],
                      "destination_application_security_group_ids": [],
                      "destination_port_range": "443",
                      "destination_port_ranges": [],
                      "direction": "Outbound",
                      "name": "AllowPostgresToAzureADOutbound",
                      "priority": 4032,
                      "protocol": "*",
                      "source_address_prefix": "10.229.224.112/28",
                      "source_address_prefixes": [],
                      "source_application_security_group_ids": [],
                      "source_port_range": "*",
                      "source_port_ranges": []
                    },
                    {
                      "access": "Allow",
                      "description": "",
                      "destination_address_prefix": "Storage",
                      "destination_address_prefixes": [],
                      "destination_application_security_group_ids": [],
                      "destination_port_range": "443",
                      "destination_port_ranges": [],
                      "direction": "Outbound",
                      "name": "AllowPostgresToAzureStorageOutbound",
                      "priority": 4031,
                      "protocol": "*",
                      "source_address_prefix": "10.229.224.112/28",
                      "source_address_prefixes": [],
                      "source_application_security_group_ids": [],
                      "source_port_range": "*",
                      "source_port_ranges": []
                    },
                    {
                      "access": "Deny",
                      "description": "",
                      "destination_address_prefix": "*",
                      "destination_address_prefixes": [],
                      "destination_application_security_group_ids": [],
                      "destination_port_range": "*",
                      "destination_port_ranges": [],
                      "direction": "Inbound",
                      "name": "DenyAllInbound",
                      "priority": 4096,
                      "protocol": "*",
                      "source_address_prefix": "*",
                      "source_address_prefixes": [],
                      "source_application_security_group_ids": [],
                      "source_port_range": "*",
                      "source_port_ranges": []
                    },
                    {
                      "access": "Deny",
                      "description": "",
                      "destination_address_prefix": "*",
                      "destination_address_prefixes": [],
                      "destination_application_security_group_ids": [],
                      "destination_port_range": "*",
                      "destination_port_ranges": [],
                      "direction": "Outbound",
                      "name": "DenyAllOutbound",
                      "priority": 4096,
                      "protocol": "*",
                      "source_address_prefix": "*",
                      "source_address_prefixes": [],
                      "source_application_security_group_ids": [],
                      "source_port_range": "*",
                      "source_port_ranges": []
                    }
                  ],
                  "tags": {
                    "costcenter": "792513",
                    "createdondate": "2024-12-18",
                    "cvsappid": "APM0015151",
                    "dataclassification": "restrictedD",
                    "environmentsubtype": "QA",
                    "environmenttype": "NonProd",
                    "itpmid": "16118",
                    "managedby": "ExpressCloud",
                    "sharedemailaddress": "GhaiR2@cvshealth.com"
                  },
                  "timeouts": null
                },
                "sensitive_values": {
                  "security_rule": [
                    {
                      "destination_address_prefixes": [
                        false,
                        false,
                        false
                      ],
                      "destination_application_security_group_ids": [],
                      "destination_port_ranges": [],
                      "source_address_prefixes": [
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false
                      ],
                      "source_application_security_group_ids": [],
                      "source_port_ranges": []
                    },
                    {
                      "destination_address_prefixes": [],
                      "destination_application_security_group_ids": [],
                      "destination_port_ranges": [],
                      "source_address_prefixes": [
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false
                      ],
                      "source_application_security_group_ids": [],
                      "source_port_ranges": []
                    },
                    {
                      "destination_address_prefixes": [],
                      "destination_application_security_group_ids": [],
                      "destination_port_ranges": [],
                      "source_address_prefixes": [],
                      "source_application_security_group_ids": [],
                      "source_port_ranges": []
                    },
                    {
                      "destination_address_prefixes": [],
                      "destination_application_security_group_ids": [],
                      "destination_port_ranges": [],
                      "source_address_prefixes": [],
                      "source_application_security_group_ids": [],
                      "source_port_ranges": []
                    },
                    {
                      "destination_address_prefixes": [],
                      "destination_application_security_group_ids": [],
                      "destination_port_ranges": [],
                      "source_address_prefixes": [],
                      "source_application_security_group_ids": [],
                      "source_port_ranges": []
                    },
                    {
                      "destination_address_prefixes": [],
                      "destination_application_security_group_ids": [],
                      "destination_port_ranges": [],
                      "source_address_prefixes": [],
                      "source_application_security_group_ids": [],
                      "source_port_ranges": []
                    },
                    {
                      "destination_address_prefixes": [],
                      "destination_application_security_group_ids": [],
                      "destination_port_ranges": [],
                      "source_address_prefixes": [],
                      "source_application_security_group_ids": [],
                      "source_port_ranges": []
                    },
                    {
                      "destination_address_prefixes": [],
                      "destination_application_security_group_ids": [],
                      "destination_port_ranges": [],
                      "source_address_prefixes": [],
                      "source_application_security_group_ids": [],
                      "source_port_ranges": []
                    }
                  ],
                  "tags": {}
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowInternalHttpsTrafficInbound\"]",
                "mode": "managed",
                "type": "azurerm_network_security_rule",
                "name": "network_security_rules",
                "index": "AllowInternalHttpsTrafficInbound",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "access": "Allow",
                  "description": "",
                  "destination_address_prefix": "",
                  "destination_address_prefixes": [
                    "10.229.224.112/28",
                    "10.229.224.128/28",
                    "10.229.224.144/28"
                  ],
                  "destination_application_security_group_ids": [],
                  "destination_port_range": "443",
                  "destination_port_ranges": [],
                  "direction": "Inbound",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowInternalHttpsTrafficInbound",
                  "name": "AllowInternalHttpsTrafficInbound",
                  "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
                  "priority": 4020,
                  "protocol": "*",
                  "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                  "source_address_prefix": "",
                  "source_address_prefixes": [
                    "10.0.0.0/8",
                    "157.121.0.0/16",
                    "167.69.0.0/16",
                    "172.16.0.0/12",
                    "198.187.64.0/18",
                    "204.99.0.0/17",
                    "206.213.0.0/16"
                  ],
                  "source_application_security_group_ids": [],
                  "source_port_range": "*",
                  "source_port_ranges": [],
                  "timeouts": null
                },
                "sensitive_values": {
                  "destination_address_prefixes": [
                    false,
                    false,
                    false
                  ],
                  "destination_application_security_group_ids": [],
                  "destination_port_ranges": [],
                  "source_address_prefixes": [
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false
                  ],
                  "source_application_security_group_ids": [],
                  "source_port_ranges": []
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_network_security_group.network_security_group",
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs",
                  "module.spoke_asgwy_qa.azurerm_subnet.subnets",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_network_security_group.ext_nsg",
                  "module.spoke_asgwy_qa.data.azurerm_resource_group.all_context_rgs",
                  "module.spoke_asgwy_qa.data.azurerm_resources.all_existing_vms",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_linux_rhel8",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_windows",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.external.existing_rgs",
                  "module.spoke_asgwy_qa.data.external.vm_azlogin",
                  "module.spoke_asgwy_qa.data.external.vm_name_generation",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.peering",
                  "module.spoke_asgwy_qa.terraform_data.existing_rgs"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowPostgresToAzureADOutbound\"]",
                "mode": "managed",
                "type": "azurerm_network_security_rule",
                "name": "network_security_rules",
                "index": "AllowPostgresToAzureADOutbound",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "access": "Allow",
                  "description": "",
                  "destination_address_prefix": "AzureActiveDirectory",
                  "destination_address_prefixes": [],
                  "destination_application_security_group_ids": [],
                  "destination_port_range": "443",
                  "destination_port_ranges": [],
                  "direction": "Outbound",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresToAzureADOutbound",
                  "name": "AllowPostgresToAzureADOutbound",
                  "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
                  "priority": 4032,
                  "protocol": "*",
                  "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                  "source_address_prefix": "10.229.224.112/28",
                  "source_address_prefixes": [],
                  "source_application_security_group_ids": [],
                  "source_port_range": "*",
                  "source_port_ranges": [],
                  "timeouts": null
                },
                "sensitive_values": {
                  "destination_address_prefixes": [],
                  "destination_application_security_group_ids": [],
                  "destination_port_ranges": [],
                  "source_address_prefixes": [],
                  "source_application_security_group_ids": [],
                  "source_port_ranges": []
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_network_security_group.network_security_group",
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs",
                  "module.spoke_asgwy_qa.azurerm_subnet.subnets",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_network_security_group.ext_nsg",
                  "module.spoke_asgwy_qa.data.azurerm_resource_group.all_context_rgs",
                  "module.spoke_asgwy_qa.data.azurerm_resources.all_existing_vms",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_linux_rhel8",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_windows",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.external.existing_rgs",
                  "module.spoke_asgwy_qa.data.external.vm_azlogin",
                  "module.spoke_asgwy_qa.data.external.vm_name_generation",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.peering",
                  "module.spoke_asgwy_qa.terraform_data.existing_rgs"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowPostgresToAzureStorageOutbound\"]",
                "mode": "managed",
                "type": "azurerm_network_security_rule",
                "name": "network_security_rules",
                "index": "AllowPostgresToAzureStorageOutbound",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "access": "Allow",
                  "description": "",
                  "destination_address_prefix": "Storage",
                  "destination_address_prefixes": [],
                  "destination_application_security_group_ids": [],
                  "destination_port_range": "443",
                  "destination_port_ranges": [],
                  "direction": "Outbound",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresToAzureStorageOutbound",
                  "name": "AllowPostgresToAzureStorageOutbound",
                  "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
                  "priority": 4031,
                  "protocol": "*",
                  "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                  "source_address_prefix": "10.229.224.112/28",
                  "source_address_prefixes": [],
                  "source_application_security_group_ids": [],
                  "source_port_range": "*",
                  "source_port_ranges": [],
                  "timeouts": null
                },
                "sensitive_values": {
                  "destination_address_prefixes": [],
                  "destination_application_security_group_ids": [],
                  "destination_port_ranges": [],
                  "source_address_prefixes": [],
                  "source_application_security_group_ids": [],
                  "source_port_ranges": []
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_network_security_group.network_security_group",
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs",
                  "module.spoke_asgwy_qa.azurerm_subnet.subnets",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_network_security_group.ext_nsg",
                  "module.spoke_asgwy_qa.data.azurerm_resource_group.all_context_rgs",
                  "module.spoke_asgwy_qa.data.azurerm_resources.all_existing_vms",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_linux_rhel8",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_windows",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.external.existing_rgs",
                  "module.spoke_asgwy_qa.data.external.vm_azlogin",
                  "module.spoke_asgwy_qa.data.external.vm_name_generation",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.peering",
                  "module.spoke_asgwy_qa.terraform_data.existing_rgs"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowPostgresTrafficFromInternalInbound\"]",
                "mode": "managed",
                "type": "azurerm_network_security_rule",
                "name": "network_security_rules",
                "index": "AllowPostgresTrafficFromInternalInbound",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "access": "Allow",
                  "description": "",
                  "destination_address_prefix": "10.229.224.112/28",
                  "destination_address_prefixes": [],
                  "destination_application_security_group_ids": [],
                  "destination_port_range": "5432",
                  "destination_port_ranges": [],
                  "direction": "Inbound",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresTrafficFromInternalInbound",
                  "name": "AllowPostgresTrafficFromInternalInbound",
                  "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
                  "priority": 4033,
                  "protocol": "*",
                  "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                  "source_address_prefix": "",
                  "source_address_prefixes": [
                    "10.0.0.0/8",
                    "157.121.0.0/16",
                    "167.69.0.0/16",
                    "172.16.0.0/12",
                    "198.187.64.0/18",
                    "204.99.0.0/17",
                    "206.213.0.0/16"
                  ],
                  "source_application_security_group_ids": [],
                  "source_port_range": "*",
                  "source_port_ranges": [],
                  "timeouts": null
                },
                "sensitive_values": {
                  "destination_address_prefixes": [],
                  "destination_application_security_group_ids": [],
                  "destination_port_ranges": [],
                  "source_address_prefixes": [
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                    false
                  ],
                  "source_application_security_group_ids": [],
                  "source_port_ranges": []
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_network_security_group.network_security_group",
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs",
                  "module.spoke_asgwy_qa.azurerm_subnet.subnets",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_network_security_group.ext_nsg",
                  "module.spoke_asgwy_qa.data.azurerm_resource_group.all_context_rgs",
                  "module.spoke_asgwy_qa.data.azurerm_resources.all_existing_vms",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_linux_rhel8",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_windows",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.external.existing_rgs",
                  "module.spoke_asgwy_qa.data.external.vm_azlogin",
                  "module.spoke_asgwy_qa.data.external.vm_name_generation",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.peering",
                  "module.spoke_asgwy_qa.terraform_data.existing_rgs"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowPostgresTrafficSelfInbound\"]",
                "mode": "managed",
                "type": "azurerm_network_security_rule",
                "name": "network_security_rules",
                "index": "AllowPostgresTrafficSelfInbound",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "access": "Allow",
                  "description": "",
                  "destination_address_prefix": "10.229.224.112/28",
                  "destination_address_prefixes": [],
                  "destination_application_security_group_ids": [],
                  "destination_port_range": "5432",
                  "destination_port_ranges": [],
                  "direction": "Inbound",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresTrafficSelfInbound",
                  "name": "AllowPostgresTrafficSelfInbound",
                  "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
                  "priority": 4030,
                  "protocol": "*",
                  "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                  "source_address_prefix": "10.229.224.112/28",
                  "source_address_prefixes": [],
                  "source_application_security_group_ids": [],
                  "source_port_range": "*",
                  "source_port_ranges": [],
                  "timeouts": null
                },
                "sensitive_values": {
                  "destination_address_prefixes": [],
                  "destination_application_security_group_ids": [],
                  "destination_port_ranges": [],
                  "source_address_prefixes": [],
                  "source_application_security_group_ids": [],
                  "source_port_ranges": []
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_network_security_group.network_security_group",
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs",
                  "module.spoke_asgwy_qa.azurerm_subnet.subnets",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_network_security_group.ext_nsg",
                  "module.spoke_asgwy_qa.data.azurerm_resource_group.all_context_rgs",
                  "module.spoke_asgwy_qa.data.azurerm_resources.all_existing_vms",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_linux_rhel8",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_windows",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.external.existing_rgs",
                  "module.spoke_asgwy_qa.data.external.vm_azlogin",
                  "module.spoke_asgwy_qa.data.external.vm_name_generation",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.peering",
                  "module.spoke_asgwy_qa.terraform_data.existing_rgs"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"AllowPostgresTrafficSelfOutbound\"]",
                "mode": "managed",
                "type": "azurerm_network_security_rule",
                "name": "network_security_rules",
                "index": "AllowPostgresTrafficSelfOutbound",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "access": "Allow",
                  "description": "",
                  "destination_address_prefix": "10.229.224.112/28",
                  "destination_address_prefixes": [],
                  "destination_application_security_group_ids": [],
                  "destination_port_range": "5432",
                  "destination_port_ranges": [],
                  "direction": "Outbound",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/AllowPostgresTrafficSelfOutbound",
                  "name": "AllowPostgresTrafficSelfOutbound",
                  "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
                  "priority": 4030,
                  "protocol": "*",
                  "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                  "source_address_prefix": "10.229.224.112/28",
                  "source_address_prefixes": [],
                  "source_application_security_group_ids": [],
                  "source_port_range": "*",
                  "source_port_ranges": [],
                  "timeouts": null
                },
                "sensitive_values": {
                  "destination_address_prefixes": [],
                  "destination_application_security_group_ids": [],
                  "destination_port_ranges": [],
                  "source_address_prefixes": [],
                  "source_application_security_group_ids": [],
                  "source_port_ranges": []
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_network_security_group.network_security_group",
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs",
                  "module.spoke_asgwy_qa.azurerm_subnet.subnets",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_network_security_group.ext_nsg",
                  "module.spoke_asgwy_qa.data.azurerm_resource_group.all_context_rgs",
                  "module.spoke_asgwy_qa.data.azurerm_resources.all_existing_vms",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_linux_rhel8",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_windows",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.external.existing_rgs",
                  "module.spoke_asgwy_qa.data.external.vm_azlogin",
                  "module.spoke_asgwy_qa.data.external.vm_name_generation",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.peering",
                  "module.spoke_asgwy_qa.terraform_data.existing_rgs"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"DenyAllInbound\"]",
                "mode": "managed",
                "type": "azurerm_network_security_rule",
                "name": "network_security_rules",
                "index": "DenyAllInbound",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "access": "Deny",
                  "description": "",
                  "destination_address_prefix": "*",
                  "destination_address_prefixes": [],
                  "destination_application_security_group_ids": [],
                  "destination_port_range": "*",
                  "destination_port_ranges": [],
                  "direction": "Inbound",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/DenyAllInbound",
                  "name": "DenyAllInbound",
                  "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
                  "priority": 4096,
                  "protocol": "*",
                  "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                  "source_address_prefix": "*",
                  "source_address_prefixes": [],
                  "source_application_security_group_ids": [],
                  "source_port_range": "*",
                  "source_port_ranges": [],
                  "timeouts": null
                },
                "sensitive_values": {
                  "destination_address_prefixes": [],
                  "destination_application_security_group_ids": [],
                  "destination_port_ranges": [],
                  "source_address_prefixes": [],
                  "source_application_security_group_ids": [],
                  "source_port_ranges": []
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_network_security_group.network_security_group",
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs",
                  "module.spoke_asgwy_qa.azurerm_subnet.subnets",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_network_security_group.ext_nsg",
                  "module.spoke_asgwy_qa.data.azurerm_resource_group.all_context_rgs",
                  "module.spoke_asgwy_qa.data.azurerm_resources.all_existing_vms",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_linux_rhel8",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_windows",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.external.existing_rgs",
                  "module.spoke_asgwy_qa.data.external.vm_azlogin",
                  "module.spoke_asgwy_qa.data.external.vm_name_generation",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.peering",
                  "module.spoke_asgwy_qa.terraform_data.existing_rgs"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules[\"DenyAllOutbound\"]",
                "mode": "managed",
                "type": "azurerm_network_security_rule",
                "name": "network_security_rules",
                "index": "DenyAllOutbound",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "access": "Deny",
                  "description": "",
                  "destination_address_prefix": "*",
                  "destination_address_prefixes": [],
                  "destination_application_security_group_ids": [],
                  "destination_port_range": "*",
                  "destination_port_ranges": [],
                  "direction": "Outbound",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk/securityRules/DenyAllOutbound",
                  "name": "DenyAllOutbound",
                  "network_security_group_name": "nsg-hcb-asgwy-qa-usc-ntwk",
                  "priority": 4096,
                  "protocol": "*",
                  "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                  "source_address_prefix": "*",
                  "source_address_prefixes": [],
                  "source_application_security_group_ids": [],
                  "source_port_range": "*",
                  "source_port_ranges": [],
                  "timeouts": null
                },
                "sensitive_values": {
                  "destination_address_prefixes": [],
                  "destination_application_security_group_ids": [],
                  "destination_port_ranges": [],
                  "source_address_prefixes": [],
                  "source_application_security_group_ids": [],
                  "source_port_ranges": []
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_network_security_group.network_security_group",
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs",
                  "module.spoke_asgwy_qa.azurerm_subnet.subnets",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_network_security_group.ext_nsg",
                  "module.spoke_asgwy_qa.data.azurerm_resource_group.all_context_rgs",
                  "module.spoke_asgwy_qa.data.azurerm_resources.all_existing_vms",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_linux_rhel8",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_windows",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.external.existing_rgs",
                  "module.spoke_asgwy_qa.data.external.vm_azlogin",
                  "module.spoke_asgwy_qa.data.external.vm_name_generation",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.peering",
                  "module.spoke_asgwy_qa.terraform_data.existing_rgs"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_network_watcher_flow_log.main[0]",
                "mode": "managed",
                "type": "azurerm_network_watcher_flow_log",
                "name": "main",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 1,
                "values": {
                  "enabled": true,
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/NetworkWatcherRG/providers/Microsoft.Network/networkWatchers/NetworkWatcher_centralus/flowLogs/nwfl-hcb-asgwy-qa-usc",
                  "location": "centralus",
                  "name": "nwfl-hcb-asgwy-qa-usc",
                  "network_security_group_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk",
                  "network_watcher_name": "NetworkWatcher_centralus",
                  "resource_group_name": "NetworkWatcherRG",
                  "retention_policy": [
                    {
                      "days": 0,
                      "enabled": true
                    }
                  ],
                  "storage_account_id": "/subscriptions/29ea5d6f-8539-4a95-8198-ca801994cbdb/resourceGroups/RG-cvsnsgflhub000/providers/Microsoft.Storage/storageAccounts/sacvsnsgflhubusc000",
                  "tags": {
                    "costcenter": "792513",
                    "createdondate": "2024-12-18",
                    "cvsappid": "APM0015151",
                    "dataclassification": "restrictedD",
                    "environmentsubtype": "QA",
                    "environmenttype": "NonProd",
                    "itpmid": "16118",
                    "managedby": "ExpressCloud",
                    "sharedemailaddress": "GhaiR2@cvshealth.com"
                  },
                  "timeouts": null,
                  "traffic_analytics": [
                    {
                      "enabled": true,
                      "interval_in_minutes": 10,
                      "workspace_id": "bf046fda-638e-44f8-b099-8abd2bdaa859",
                      "workspace_region": "centralus",
                      "workspace_resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.OperationalInsights/workspaces/log-hcb-asgwy-qa-usc"
                    }
                  ],
                  "version": 2
                },
                "sensitive_values": {
                  "retention_policy": [
                    {}
                  ],
                  "tags": {},
                  "traffic_analytics": [
                    {}
                  ]
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_log_analytics_workspace.log_analytics_workspace",
                  "module.spoke_asgwy_qa.azurerm_network_security_group.network_security_group",
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.secr_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_network_watcher.network_watcher",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_private_endpoint.ud_key_vaults_pes[\"db\"]",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "ud_key_vaults_pes",
                "index": "db",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "custom_dns_configs": [
                    {
                      "fqdn": "kv-hcbasgwy0402db.vault.azure.net",
                      "ip_addresses": [
                        "10.229.224.132"
                      ]
                    }
                  ],
                  "custom_network_interface_name": "",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.Network/privateEndpoints/pep-hcb-asgwy-qa-usc-kv-db",
                  "ip_configuration": [],
                  "location": "centralus",
                  "name": "pep-hcb-asgwy-qa-usc-kv-db",
                  "network_interface": [
                    {
                      "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.Network/networkInterfaces/pep-hcb-asgwy-qa-usc-kv-db.nic.e00f8d02-cc44-4feb-8394-5891ecd27664",
                      "name": "pep-hcb-asgwy-qa-usc-kv-db.nic.e00f8d02-cc44-4feb-8394-5891ecd27664"
                    }
                  ],
                  "private_dns_zone_configs": [],
                  "private_dns_zone_group": [],
                  "private_service_connection": [
                    {
                      "is_manual_connection": false,
                      "name": "db-privateserviceconnection",
                      "private_connection_resource_alias": "",
                      "private_connection_resource_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
                      "private_ip_address": "10.229.224.132",
                      "request_message": "",
                      "subresource_names": [
                        "vault"
                      ]
                    }
                  ],
                  "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
                  "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
                  "tags": {
                    "costcenter": "792513",
                    "createdondate": "2024-12-18",
                    "cvsappid": "APM0015151",
                    "dataclassification": "restrictedD",
                    "environmentsubtype": "QA",
                    "environmenttype": "NonProd",
                    "itpmid": "16118",
                    "managedby": "ExpressCloud",
                    "sharedemailaddress": "GhaiR2@cvshealth.com"
                  },
                  "timeouts": null
                },
                "sensitive_values": {
                  "custom_dns_configs": [
                    {
                      "ip_addresses": [
                        false
                      ]
                    }
                  ],
                  "ip_configuration": [],
                  "network_interface": [
                    {}
                  ],
                  "private_dns_zone_configs": [],
                  "private_dns_zone_group": [],
                  "private_service_connection": [
                    {
                      "subresource_names": [
                        false
                      ]
                    }
                  ],
                  "tags": {}
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_key_vault.ud_key_vaults",
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.secr_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs",
                  "module.spoke_asgwy_qa.azurerm_subnet.subnets",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_client_config.current",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.data.terraform_remote_state.spoke",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.kvname",
                  "module.spoke_asgwy_qa.random_string.peering"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_resource_group.backup_rg[0]",
                "mode": "managed",
                "type": "azurerm_resource_group",
                "name": "backup_rg",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-bkp",
                  "location": "centralus",
                  "managed_by": "",
                  "name": "rg-hcb-asgwy-qa-usc-bkp",
                  "tags": {
                    "costcenter": "792513",
                    "createdondate": "2024-12-18",
                    "cvsappid": "APM0015151",
                    "dataclassification": "restrictedD",
                    "environmentsubtype": "QA",
                    "environmenttype": "NonProd",
                    "itpmid": "16118",
                    "managedby": "ExpressCloud",
                    "sharedemailaddress": "GhaiR2@cvshealth.com"
                  },
                  "timeouts": null
                },
                "sensitive_values": {
                  "tags": {}
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_resource_group.mi_rg[0]",
                "mode": "managed",
                "type": "azurerm_resource_group",
                "name": "mi_rg",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-mi",
                  "location": "centralus",
                  "managed_by": "",
                  "name": "rg-hcb-asgwy-qa-usc-mi",
                  "tags": {
                    "costcenter": "792513",
                    "createdondate": "2024-12-18",
                    "cvsappid": "APM0015151",
                    "dataclassification": "restrictedD",
                    "environmentsubtype": "QA",
                    "environmenttype": "NonProd",
                    "itpmid": "16118",
                    "managedby": "ExpressCloud",
                    "sharedemailaddress": "GhaiR2@cvshealth.com"
                  },
                  "timeouts": null
                },
                "sensitive_values": {
                  "tags": {}
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_resource_group.network_rg[0]",
                "mode": "managed",
                "type": "azurerm_resource_group",
                "name": "network_rg",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk",
                  "location": "centralus",
                  "managed_by": "",
                  "name": "rg-hcb-asgwy-qa-usc-ntwk",
                  "tags": {
                    "costcenter": "792513",
                    "createdondate": "2024-12-18",
                    "cvsappid": "APM0015151",
                    "dataclassification": "restrictedD",
                    "environmentsubtype": "QA",
                    "environmenttype": "NonProd",
                    "itpmid": "16118",
                    "managedby": "ExpressCloud",
                    "sharedemailaddress": "GhaiR2@cvshealth.com"
                  },
                  "timeouts": null
                },
                "sensitive_values": {
                  "tags": {}
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_resource_group.secr_rg[0]",
                "mode": "managed",
                "type": "azurerm_resource_group",
                "name": "secr_rg",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr",
                  "location": "centralus",
                  "managed_by": "",
                  "name": "rg-hcb-asgwy-qa-usc-secr",
                  "tags": {
                    "costcenter": "792513",
                    "createdondate": "2024-12-18",
                    "cvsappid": "APM0015151",
                    "dataclassification": "restrictedD",
                    "environmentsubtype": "QA",
                    "environmenttype": "NonProd",
                    "itpmid": "16118",
                    "managedby": "ExpressCloud",
                    "sharedemailaddress": "GhaiR2@cvshealth.com"
                  },
                  "timeouts": null
                },
                "sensitive_values": {
                  "tags": {}
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs[\"app\"]",
                "mode": "managed",
                "type": "azurerm_resource_group",
                "name": "ud_rgs",
                "index": "app",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-app",
                  "location": "centralus",
                  "managed_by": "",
                  "name": "rg-hcb-asgwy-qa-usc-app",
                  "tags": {
                    "costcenter": "792513",
                    "createdondate": "2024-12-18",
                    "cvsappid": "APM0015151",
                    "dataclassification": "restrictedD",
                    "environmentsubtype": "QA",
                    "environmenttype": "NonProd",
                    "itpmid": "16118",
                    "managedby": "ExpressCloud",
                    "sharedemailaddress": "GhaiR2@cvshealth.com"
                  },
                  "timeouts": null
                },
                "sensitive_values": {
                  "tags": {}
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs[\"db\"]",
                "mode": "managed",
                "type": "azurerm_resource_group",
                "name": "ud_rgs",
                "index": "db",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-db",
                  "location": "centralus",
                  "managed_by": "",
                  "name": "rg-hcb-asgwy-qa-usc-db",
                  "tags": {
                    "costcenter": "792513",
                    "createdondate": "2024-12-18",
                    "cvsappid": "APM0015151",
                    "dataclassification": "restrictedD",
                    "environmentsubtype": "QA",
                    "environmenttype": "NonProd",
                    "itpmid": "16118",
                    "managedby": "ExpressCloud",
                    "sharedemailaddress": "GhaiR2@cvshealth.com"
                  },
                  "timeouts": null
                },
                "sensitive_values": {
                  "tags": {}
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_role_assignment.base_kv_key_access_aes_role[0]",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "base_kv_key_access_aes_role",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "condition": "",
                  "condition_version": "",
                  "delegated_managed_identity_resource_id": "",
                  "description": "",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu/providers/Microsoft.Authorization/roleAssignments/91c03327-37b5-393a-4c09-f5db988321b4",
                  "name": "91c03327-37b5-393a-4c09-f5db988321b4",
                  "principal_id": "36899313-5270-482d-b156-57fc8b6f494e",
                  "principal_type": "ServicePrincipal",
                  "role_definition_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/providers/Microsoft.Authorization/roleDefinitions/e147488a-f6f5-4113-8e2d-b22465e65bf6",
                  "role_definition_name": "Key Vault Crypto Service Encryption User",
                  "scope": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu",
                  "skip_service_principal_aad_check": null,
                  "timeouts": null
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_disk_encryption_set.base_kv_des",
                  "module.spoke_asgwy_qa.azurerm_key_vault.base_kv",
                  "module.spoke_asgwy_qa.azurerm_key_vault_key.base_kv_key",
                  "module.spoke_asgwy_qa.azurerm_private_endpoint.base_kv_pep",
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.secr_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs",
                  "module.spoke_asgwy_qa.azurerm_route.routes",
                  "module.spoke_asgwy_qa.azurerm_route_table.route_tables",
                  "module.spoke_asgwy_qa.azurerm_subnet.subnets",
                  "module.spoke_asgwy_qa.azurerm_subnet_route_table_association.route_table_subnet_association",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_client_config.current",
                  "module.spoke_asgwy_qa.data.azurerm_key_vault.host_base_kv",
                  "module.spoke_asgwy_qa.data.azurerm_key_vault_key.base_kv_key",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_resource_group.all_context_rgs",
                  "module.spoke_asgwy_qa.data.azurerm_resources.host_base_key_vault",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_linux_rhel8",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_windows",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.external.azlogin",
                  "module.spoke_asgwy_qa.data.external.existing_rgs",
                  "module.spoke_asgwy_qa.data.external.find_base_key",
                  "module.spoke_asgwy_qa.data.external.vm_azlogin",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.data.terraform_remote_state.spoke",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.kvname",
                  "module.spoke_asgwy_qa.random_string.peering",
                  "module.spoke_asgwy_qa.terraform_data.existing_rgs"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_role_assignment.base_kv_key_access_aes_role_managed_identity[0]",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "base_kv_key_access_aes_role_managed_identity",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "condition": "",
                  "condition_version": "",
                  "delegated_managed_identity_resource_id": "",
                  "description": "",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu/providers/Microsoft.Authorization/roleAssignments/08911769-a98d-00c0-9d20-175a3ccf6941",
                  "name": "08911769-a98d-00c0-9d20-175a3ccf6941",
                  "principal_id": "2af739f2-d4fb-4e65-8d22-bb648fd34f1a",
                  "principal_type": "ServicePrincipal",
                  "role_definition_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/providers/Microsoft.Authorization/roleDefinitions/e147488a-f6f5-4113-8e2d-b22465e65bf6",
                  "role_definition_name": "Key Vault Crypto Service Encryption User",
                  "scope": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu",
                  "skip_service_principal_aad_check": null,
                  "timeouts": null
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_key_vault.base_kv",
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.secr_rg",
                  "module.spoke_asgwy_qa.azurerm_user_assigned_identity.base_kv_uai",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_client_config.current",
                  "module.spoke_asgwy_qa.data.azurerm_key_vault.host_base_kv",
                  "module.spoke_asgwy_qa.data.azurerm_resources.host_base_key_vault",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.data.terraform_remote_state.spoke",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.kvname",
                  "module.spoke_asgwy_qa.random_string.peering"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_route.routes[\"db\"]",
                "mode": "managed",
                "type": "azurerm_route",
                "name": "routes",
                "index": "db",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "address_prefix": "0.0.0.0/0",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-db/routes/udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
                  "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
                  "next_hop_in_ip_address": "10.229.129.4",
                  "next_hop_type": "VirtualAppliance",
                  "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                  "route_table_name": "rt-hcb-asgwy-qa-usc-db",
                  "timeouts": null
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_route_table.route_tables",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.data.terraform_remote_state.spoke",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_route.routes[\"pe\"]",
                "mode": "managed",
                "type": "azurerm_route",
                "name": "routes",
                "index": "pe",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "address_prefix": "0.0.0.0/0",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-pe/routes/udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
                  "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
                  "next_hop_in_ip_address": "10.229.129.4",
                  "next_hop_type": "VirtualAppliance",
                  "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                  "route_table_name": "rt-hcb-asgwy-qa-usc-pe",
                  "timeouts": null
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_route_table.route_tables",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.data.terraform_remote_state.spoke",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_route.routes[\"psqldb\"]",
                "mode": "managed",
                "type": "azurerm_route",
                "name": "routes",
                "index": "psqldb",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "address_prefix": "0.0.0.0/0",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-psqldb/routes/udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
                  "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
                  "next_hop_in_ip_address": "10.229.129.4",
                  "next_hop_type": "VirtualAppliance",
                  "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                  "route_table_name": "rt-hcb-asgwy-qa-usc-psqldb",
                  "timeouts": null
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_route_table.route_tables",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.data.terraform_remote_state.spoke",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_route_table.route_tables[\"db\"]",
                "mode": "managed",
                "type": "azurerm_route_table",
                "name": "route_tables",
                "index": "db",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "bgp_route_propagation_enabled": false,
                  "disable_bgp_route_propagation": true,
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-db",
                  "location": "centralus",
                  "name": "rt-hcb-asgwy-qa-usc-db",
                  "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                  "route": [
                    {
                      "address_prefix": "0.0.0.0/0",
                      "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
                      "next_hop_in_ip_address": "10.229.129.4",
                      "next_hop_type": "VirtualAppliance"
                    }
                  ],
                  "subnets": [
                    "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db"
                  ],
                  "tags": {
                    "costcenter": "792513",
                    "createdondate": "2024-12-18",
                    "cvsappid": "APM0015151",
                    "dataclassification": "restrictedD",
                    "environmentsubtype": "QA",
                    "environmenttype": "NonProd",
                    "itpmid": "16118",
                    "managedby": "ExpressCloud",
                    "sharedemailaddress": "GhaiR2@cvshealth.com"
                  },
                  "timeouts": null
                },
                "sensitive_values": {
                  "route": [
                    {}
                  ],
                  "subnets": [
                    false
                  ],
                  "tags": {}
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.data.terraform_remote_state.spoke",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_route_table.route_tables[\"pe\"]",
                "mode": "managed",
                "type": "azurerm_route_table",
                "name": "route_tables",
                "index": "pe",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "bgp_route_propagation_enabled": false,
                  "disable_bgp_route_propagation": true,
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-pe",
                  "location": "centralus",
                  "name": "rt-hcb-asgwy-qa-usc-pe",
                  "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                  "route": [
                    {
                      "address_prefix": "0.0.0.0/0",
                      "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
                      "next_hop_in_ip_address": "10.229.129.4",
                      "next_hop_type": "VirtualAppliance"
                    }
                  ],
                  "subnets": [
                    "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe"
                  ],
                  "tags": {
                    "costcenter": "792513",
                    "createdondate": "2024-12-18",
                    "cvsappid": "APM0015151",
                    "dataclassification": "restrictedD",
                    "environmentsubtype": "QA",
                    "environmenttype": "NonProd",
                    "itpmid": "16118",
                    "managedby": "ExpressCloud",
                    "sharedemailaddress": "GhaiR2@cvshealth.com"
                  },
                  "timeouts": null
                },
                "sensitive_values": {
                  "route": [
                    {}
                  ],
                  "subnets": [
                    false
                  ],
                  "tags": {}
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.data.terraform_remote_state.spoke",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_route_table.route_tables[\"psqldb\"]",
                "mode": "managed",
                "type": "azurerm_route_table",
                "name": "route_tables",
                "index": "psqldb",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "bgp_route_propagation_enabled": false,
                  "disable_bgp_route_propagation": true,
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-psqldb",
                  "location": "centralus",
                  "name": "rt-hcb-asgwy-qa-usc-psqldb",
                  "resource_group_name": "rg-hcb-asgwy-qa-usc-ntwk",
                  "route": [
                    {
                      "address_prefix": "0.0.0.0/0",
                      "name": "udr-hcb-asgwy-qa-usc-Default_AzFwEgress",
                      "next_hop_in_ip_address": "10.229.129.4",
                      "next_hop_type": "VirtualAppliance"
                    }
                  ],
                  "subnets": [
                    "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb"
                  ],
                  "tags": {
                    "costcenter": "792513",
                    "createdondate": "2024-12-18",
                    "cvsappid": "APM0015151",
                    "dataclassification": "restrictedD",
                    "environmentsubtype": "QA",
                    "environmenttype": "NonProd",
                    "itpmid": "16118",
                    "managedby": "ExpressCloud",
                    "sharedemailaddress": "GhaiR2@cvshealth.com"
                  },
                  "timeouts": null
                },
                "sensitive_values": {
                  "route": [
                    {}
                  ],
                  "subnets": [
                    false
                  ],
                  "tags": {}
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.data.terraform_remote_state.spoke",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_subnet.subnets[\"db\"]",
                "mode": "managed",
                "type": "azurerm_subnet",
                "name": "subnets",
                "index": "db",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "address_prefixes": [
                    "10.229.224.144/28"
                  ],
                  "default_outbound_access_enabled": true,
                  "delegation": [],
                  "enforce_private_link_endpoint_network_policies": false,
                  "enforce_private_link_service_network_policies": false,
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db",
                  "name": "snet-hcb-asgwy-qa-usc-db",
                  "private_endpoint_network_policies": "Enabled",
                  "private_endpoint_network_policies_enabled": true,
                  "private_link_service_network_policies_enabled": true,
                  "resource_group_name": "rg-sub-hcb-common-nonprod-usc-ntwk1",
                  "service_endpoint_policy_ids": [],
                  "service_endpoints": [
                    "Microsoft.AzureActiveDirectory",
                    "Microsoft.KeyVault",
                    "Microsoft.Storage"
                  ],
                  "timeouts": null,
                  "virtual_network_name": "vnet-sub-hcb-common-nonprod-usc-host1"
                },
                "sensitive_values": {
                  "address_prefixes": [
                    false
                  ],
                  "delegation": [],
                  "service_endpoint_policy_ids": [],
                  "service_endpoints": [
                    false,
                    false,
                    false
                  ]
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.peering"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_subnet.subnets[\"pe\"]",
                "mode": "managed",
                "type": "azurerm_subnet",
                "name": "subnets",
                "index": "pe",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "address_prefixes": [
                    "10.229.224.128/28"
                  ],
                  "default_outbound_access_enabled": true,
                  "delegation": [],
                  "enforce_private_link_endpoint_network_policies": false,
                  "enforce_private_link_service_network_policies": false,
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
                  "name": "snet-hcb-asgwy-qa-usc-pe",
                  "private_endpoint_network_policies": "Enabled",
                  "private_endpoint_network_policies_enabled": true,
                  "private_link_service_network_policies_enabled": true,
                  "resource_group_name": "rg-sub-hcb-common-nonprod-usc-ntwk1",
                  "service_endpoint_policy_ids": [],
                  "service_endpoints": [],
                  "timeouts": null,
                  "virtual_network_name": "vnet-sub-hcb-common-nonprod-usc-host1"
                },
                "sensitive_values": {
                  "address_prefixes": [
                    false
                  ],
                  "delegation": [],
                  "service_endpoint_policy_ids": [],
                  "service_endpoints": []
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.peering"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_subnet.subnets[\"psqldb\"]",
                "mode": "managed",
                "type": "azurerm_subnet",
                "name": "subnets",
                "index": "psqldb",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "address_prefixes": [
                    "10.229.224.112/28"
                  ],
                  "default_outbound_access_enabled": true,
                  "delegation": [
                    {
                      "name": "Microsoft.DBforPostgreSQL/flexibleServers",
                      "service_delegation": [
                        {
                          "actions": [
                            "Microsoft.Network/virtualNetworks/subnets/join/action"
                          ],
                          "name": "Microsoft.DBforPostgreSQL/flexibleServers"
                        }
                      ]
                    }
                  ],
                  "enforce_private_link_endpoint_network_policies": false,
                  "enforce_private_link_service_network_policies": false,
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb",
                  "name": "snet-hcb-asgwy-qa-usc-psqldb",
                  "private_endpoint_network_policies": "Enabled",
                  "private_endpoint_network_policies_enabled": true,
                  "private_link_service_network_policies_enabled": true,
                  "resource_group_name": "rg-sub-hcb-common-nonprod-usc-ntwk1",
                  "service_endpoint_policy_ids": [],
                  "service_endpoints": [
                    "Microsoft.AzureActiveDirectory",
                    "Microsoft.KeyVault",
                    "Microsoft.Storage"
                  ],
                  "timeouts": null,
                  "virtual_network_name": "vnet-sub-hcb-common-nonprod-usc-host1"
                },
                "sensitive_values": {
                  "address_prefixes": [
                    false
                  ],
                  "delegation": [
                    {
                      "service_delegation": [
                        {
                          "actions": [
                            false
                          ]
                        }
                      ]
                    }
                  ],
                  "service_endpoint_policy_ids": [],
                  "service_endpoints": [
                    false,
                    false,
                    false
                  ]
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.peering"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_subnet_network_security_group_association.subnets_nsgs_associations[\"db\"]",
                "mode": "managed",
                "type": "azurerm_subnet_network_security_group_association",
                "name": "subnets_nsgs_associations",
                "index": "db",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db",
                  "network_security_group_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk",
                  "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db",
                  "timeouts": null
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_network_security_group.network_security_group",
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_subnet.subnets",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_network_security_group.ext_nsg",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.peering"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_subnet_network_security_group_association.subnets_nsgs_associations[\"pe\"]",
                "mode": "managed",
                "type": "azurerm_subnet_network_security_group_association",
                "name": "subnets_nsgs_associations",
                "index": "pe",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
                  "network_security_group_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk",
                  "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
                  "timeouts": null
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_network_security_group.network_security_group",
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_subnet.subnets",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_network_security_group.ext_nsg",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.peering"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_subnet_network_security_group_association.subnets_nsgs_associations[\"psqldb\"]",
                "mode": "managed",
                "type": "azurerm_subnet_network_security_group_association",
                "name": "subnets_nsgs_associations",
                "index": "psqldb",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb",
                  "network_security_group_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/networkSecurityGroups/nsg-hcb-asgwy-qa-usc-ntwk",
                  "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb",
                  "timeouts": null
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_network_security_group.network_security_group",
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_subnet.subnets",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_network_security_group.ext_nsg",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.peering"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_subnet_route_table_association.route_table_subnet_association[\"db\"]",
                "mode": "managed",
                "type": "azurerm_subnet_route_table_association",
                "name": "route_table_subnet_association",
                "index": "db",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db",
                  "route_table_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-db",
                  "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-db",
                  "timeouts": null
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_route_table.route_tables",
                  "module.spoke_asgwy_qa.azurerm_subnet.subnets",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.data.terraform_remote_state.spoke",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.peering"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_subnet_route_table_association.route_table_subnet_association[\"pe\"]",
                "mode": "managed",
                "type": "azurerm_subnet_route_table_association",
                "name": "route_table_subnet_association",
                "index": "pe",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
                  "route_table_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-pe",
                  "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-pe",
                  "timeouts": null
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_route_table.route_tables",
                  "module.spoke_asgwy_qa.azurerm_subnet.subnets",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.data.terraform_remote_state.spoke",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.peering"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_subnet_route_table_association.route_table_subnet_association[\"psqldb\"]",
                "mode": "managed",
                "type": "azurerm_subnet_route_table_association",
                "name": "route_table_subnet_association",
                "index": "psqldb",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 0,
                "values": {
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb",
                  "route_table_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-ntwk/providers/Microsoft.Network/routeTables/rt-hcb-asgwy-qa-usc-psqldb",
                  "subnet_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-ntwk1/providers/Microsoft.Network/virtualNetworks/vnet-sub-hcb-common-nonprod-usc-host1/subnets/snet-hcb-asgwy-qa-usc-psqldb",
                  "timeouts": null
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_route_table.route_tables",
                  "module.spoke_asgwy_qa.azurerm_subnet.subnets",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.data.terraform_remote_state.spoke",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.peering"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_user_assigned_identity.base_kv_uai[0]",
                "mode": "managed",
                "type": "azurerm_user_assigned_identity",
                "name": "base_kv_uai",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 1,
                "values": {
                  "client_id": "2ea15786-ffd2-49b2-be48-288c91b64b29",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity-asgwy-qa",
                  "location": "centralus",
                  "name": "identity-asgwy-qa",
                  "principal_id": "2af739f2-d4fb-4e65-8d22-bb648fd34f1a",
                  "resource_group_name": "rg-hcb-asgwy-qa-usc-secr",
                  "tags": {
                    "costcenter": "792513",
                    "createdondate": "2024-12-18",
                    "cvsappid": "APM0015151",
                    "dataclassification": "restrictedD",
                    "environmentsubtype": "QA",
                    "environmenttype": "NonProd",
                    "itpmid": "16118",
                    "managedby": "ExpressCloud",
                    "sharedemailaddress": "GhaiR2@cvshealth.com"
                  },
                  "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
                  "timeouts": null
                },
                "sensitive_values": {
                  "tags": {}
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_resource_group.secr_rg",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_user_assigned_identity.ud_managed_identity[\"db\"]",
                "mode": "managed",
                "type": "azurerm_user_assigned_identity",
                "name": "ud_managed_identity",
                "index": "db",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 1,
                "values": {
                  "client_id": "7dfeb293-fd73-41bb-8b3c-cd587b34aa50",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-mi/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mi-hcb-asgwy-qa-usc-db",
                  "location": "centralus",
                  "name": "mi-hcb-asgwy-qa-usc-db",
                  "principal_id": "bcc39471-b447-464d-9840-65d5acb7393f",
                  "resource_group_name": "rg-hcb-asgwy-qa-usc-mi",
                  "tags": {
                    "costcenter": "792513",
                    "createdondate": "2024-12-18",
                    "cvsappid": "APM0015151",
                    "dataclassification": "restrictedD",
                    "environmentsubtype": "QA",
                    "environmenttype": "NonProd",
                    "itpmid": "16118",
                    "managedby": "ExpressCloud",
                    "sharedemailaddress": "GhaiR2@cvshealth.com"
                  },
                  "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
                  "timeouts": null
                },
                "sensitive_values": {
                  "tags": {}
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_resource_group.mi_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_user_assigned_identity.ud_managed_identity[\"psql-flex-ddl-asgwy-user\"]",
                "mode": "managed",
                "type": "azurerm_user_assigned_identity",
                "name": "ud_managed_identity",
                "index": "psql-flex-ddl-asgwy-user",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 1,
                "values": {
                  "client_id": "c52962a5-d6e5-41c0-b69e-d736b7ed2c1c",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-mi/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mi-hcb-asgwy-qa-usc-psql-flex-ddl-asgwy-user",
                  "location": "centralus",
                  "name": "mi-hcb-asgwy-qa-usc-psql-flex-ddl-asgwy-user",
                  "principal_id": "e637341a-4481-4833-84f2-18b157173038",
                  "resource_group_name": "rg-hcb-asgwy-qa-usc-mi",
                  "tags": {
                    "costcenter": "792513",
                    "createdondate": "2024-12-18",
                    "cvsappid": "APM0015151",
                    "dataclassification": "restrictedD",
                    "environmentsubtype": "QA",
                    "environmenttype": "NonProd",
                    "itpmid": "16118",
                    "managedby": "ExpressCloud",
                    "sharedemailaddress": "GhaiR2@cvshealth.com"
                  },
                  "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
                  "timeouts": null
                },
                "sensitive_values": {
                  "tags": {}
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_resource_group.mi_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.azurerm_user_assigned_identity.ud_managed_identity[\"psql-flex-dml-asgwy-user\"]",
                "mode": "managed",
                "type": "azurerm_user_assigned_identity",
                "name": "ud_managed_identity",
                "index": "psql-flex-dml-asgwy-user",
                "provider_name": "registry.terraform.io/hashicorp/azurerm",
                "schema_version": 1,
                "values": {
                  "client_id": "c8e3a81c-9c53-42a0-b874-2df7154652d2",
                  "id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-mi/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mi-hcb-asgwy-qa-usc-psql-flex-dml-asgwy-user",
                  "location": "centralus",
                  "name": "mi-hcb-asgwy-qa-usc-psql-flex-dml-asgwy-user",
                  "principal_id": "d0b83609-fdb9-41ac-b96e-ef0681ad75b2",
                  "resource_group_name": "rg-hcb-asgwy-qa-usc-mi",
                  "tags": {
                    "costcenter": "792513",
                    "createdondate": "2024-12-18",
                    "cvsappid": "APM0015151",
                    "dataclassification": "restrictedD",
                    "environmentsubtype": "QA",
                    "environmenttype": "NonProd",
                    "itpmid": "16118",
                    "managedby": "ExpressCloud",
                    "sharedemailaddress": "GhaiR2@cvshealth.com"
                  },
                  "tenant_id": "fabb61b8-3afe-4e75-b934-a47f782b8cd7",
                  "timeouts": null
                },
                "sensitive_values": {
                  "tags": {}
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_resource_group.mi_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list[\"db\"]",
                "mode": "managed",
                "type": "infoblox_ipv4_network",
                "name": "subnet_cidr_list",
                "index": "db",
                "provider_name": "registry.terraform.io/infobloxopen/infoblox",
                "schema_version": 0,
                "values": {
                  "allocate_prefix_len": 28,
                  "cidr": "10.229.224.144/28",
                  "comment": "EC - snet-hcb-asgwy-qa-usc-db",
                  "ext_attrs": "{\"AKA\":\"SUB-HCB-COMMON-NONPROD\",\"Region\":\"centralus\",\"Site\":\"N/A\"}",
                  "gateway": "",
                  "id": "network/ZG5zLm5ldHdvcmskMTAuMjI5LjIyNC4xNDQvMjgvMA:10.229.224.144/28/Lab",
                  "network_view": "Lab",
                  "parent_cidr": "10.229.224.0/20",
                  "reserve_ip": null,
                  "reserve_ipv6": null
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list[\"pe\"]",
                "mode": "managed",
                "type": "infoblox_ipv4_network",
                "name": "subnet_cidr_list",
                "index": "pe",
                "provider_name": "registry.terraform.io/infobloxopen/infoblox",
                "schema_version": 0,
                "values": {
                  "allocate_prefix_len": 28,
                  "cidr": "10.229.224.128/28",
                  "comment": "EC - snet-hcb-asgwy-qa-usc-pe",
                  "ext_attrs": "{\"AKA\":\"SUB-HCB-COMMON-NONPROD\",\"Region\":\"centralus\",\"Site\":\"N/A\"}",
                  "gateway": "",
                  "id": "network/ZG5zLm5ldHdvcmskMTAuMjI5LjIyNC4xMjgvMjgvMA:10.229.224.128/28/Lab",
                  "network_view": "Lab",
                  "parent_cidr": "10.229.224.0/20",
                  "reserve_ip": null,
                  "reserve_ipv6": null
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list[\"psqldb\"]",
                "mode": "managed",
                "type": "infoblox_ipv4_network",
                "name": "subnet_cidr_list",
                "index": "psqldb",
                "provider_name": "registry.terraform.io/infobloxopen/infoblox",
                "schema_version": 0,
                "values": {
                  "allocate_prefix_len": 28,
                  "cidr": "10.229.224.112/28",
                  "comment": "EC - snet-hcb-asgwy-qa-usc-psqldb",
                  "ext_attrs": "{\"AKA\":\"SUB-HCB-COMMON-NONPROD\",\"Region\":\"centralus\",\"Site\":\"N/A\"}",
                  "gateway": "",
                  "id": "network/ZG5zLm5ldHdvcmskMTAuMjI5LjIyNC4xMTIvMjgvMA:10.229.224.112/28/Lab",
                  "network_view": "Lab",
                  "parent_cidr": "10.229.224.0/20",
                  "reserve_ip": null,
                  "reserve_ipv6": null
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.random_string.kvname",
                "mode": "managed",
                "type": "random_string",
                "name": "kvname",
                "provider_name": "registry.terraform.io/hashicorp/random",
                "schema_version": 2,
                "values": {
                  "id": "8wvf5v",
                  "keepers": null,
                  "length": 6,
                  "lower": true,
                  "min_lower": 0,
                  "min_numeric": 0,
                  "min_special": 0,
                  "min_upper": 0,
                  "number": true,
                  "numeric": true,
                  "override_special": null,
                  "result": "8wvf5v",
                  "special": false,
                  "upper": false
                },
                "sensitive_values": {}
              },
              {
                "address": "module.spoke_asgwy_qa.random_string.peering",
                "mode": "managed",
                "type": "random_string",
                "name": "peering",
                "provider_name": "registry.terraform.io/hashicorp/random",
                "schema_version": 2,
                "values": {
                  "id": "dqj1sj",
                  "keepers": null,
                  "length": 6,
                  "lower": true,
                  "min_lower": 0,
                  "min_numeric": 0,
                  "min_special": 0,
                  "min_upper": 0,
                  "number": true,
                  "numeric": true,
                  "override_special": null,
                  "result": "dqj1sj",
                  "special": false,
                  "upper": false
                },
                "sensitive_values": {}
              },
              {
                "address": "module.spoke_asgwy_qa.terraform_data.go_live_date",
                "mode": "managed",
                "type": "terraform_data",
                "name": "go_live_date",
                "provider_name": "terraform.io/builtin/terraform",
                "schema_version": 0,
                "values": {
                  "id": "30e76630-a20a-e1f4-4c3a-00a38c067eb6",
                  "input": null,
                  "output": null,
                  "triggers_replace": null
                },
                "sensitive_values": {}
              },
              {
                "address": "module.spoke_asgwy_qa.terraform_data.kv_rbac_scopes",
                "mode": "managed",
                "type": "terraform_data",
                "name": "kv_rbac_scopes",
                "provider_name": "terraform.io/builtin/terraform",
                "schema_version": 0,
                "values": {
                  "id": "52ec6d6a-7101-2335-b282-4bb3dba644bb",
                  "input": [
                    "Key Vault Crypto Service Encryption User_/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu_36899313-5270-482d-b156-57fc8b6f494e",
                    "Key Vault Crypto Service Encryption User_/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu_2af739f2-d4fb-4e65-8d22-bb648fd34f1a"
                  ],
                  "output": [
                    "Key Vault Crypto Service Encryption User_/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu_36899313-5270-482d-b156-57fc8b6f494e",
                    "Key Vault Crypto Service Encryption User_/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-sub-hcb-common-nonprod-usc-secr1/providers/Microsoft.KeyVault/vaults/kv-host1abbsu_2af739f2-d4fb-4e65-8d22-bb648fd34f1a"
                  ],
                  "triggers_replace": null
                },
                "sensitive_values": {
                  "input": [
                    false,
                    false
                  ],
                  "output": [
                    false,
                    false
                  ]
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_api_management.apim",
                  "module.spoke_asgwy_qa.azurerm_app_service_environment_v3.ases",
                  "module.spoke_asgwy_qa.azurerm_cognitive_account.cogs",
                  "module.spoke_asgwy_qa.azurerm_data_factory.adf",
                  "module.spoke_asgwy_qa.azurerm_databricks_workspace.dbk",
                  "module.spoke_asgwy_qa.azurerm_disk_encryption_set.aks_disk_encryption_set",
                  "module.spoke_asgwy_qa.azurerm_disk_encryption_set.base_kv_custom_des",
                  "module.spoke_asgwy_qa.azurerm_disk_encryption_set.base_kv_des",
                  "module.spoke_asgwy_qa.azurerm_key_vault.adf_keyvault",
                  "module.spoke_asgwy_qa.azurerm_key_vault.aks_de_keyvault",
                  "module.spoke_asgwy_qa.azurerm_key_vault.aks_int_keyvault",
                  "module.spoke_asgwy_qa.azurerm_key_vault.apim_key_vaults",
                  "module.spoke_asgwy_qa.azurerm_key_vault.base_custom_kv",
                  "module.spoke_asgwy_qa.azurerm_key_vault.base_kv",
                  "module.spoke_asgwy_qa.azurerm_key_vault.cog_kv",
                  "module.spoke_asgwy_qa.azurerm_key_vault.ud_key_vaults",
                  "module.spoke_asgwy_qa.azurerm_key_vault_key.aks_key_vault_key",
                  "module.spoke_asgwy_qa.azurerm_key_vault_key.base_custom_kv_key",
                  "module.spoke_asgwy_qa.azurerm_key_vault_key.base_kv_key",
                  "module.spoke_asgwy_qa.azurerm_key_vault_key.cog_kv_key",
                  "module.spoke_asgwy_qa.azurerm_kubernetes_cluster.aks_cluster",
                  "module.spoke_asgwy_qa.azurerm_linux_function_app.linux_funapps",
                  "module.spoke_asgwy_qa.azurerm_log_analytics_workspace.log_analytics_workspace",
                  "module.spoke_asgwy_qa.azurerm_network_security_group.network_security_group",
                  "module.spoke_asgwy_qa.azurerm_network_security_rule.network_security_rules",
                  "module.spoke_asgwy_qa.azurerm_private_endpoint.aks_de_keyvault_pep",
                  "module.spoke_asgwy_qa.azurerm_private_endpoint.base_custom_kv_pes",
                  "module.spoke_asgwy_qa.azurerm_private_endpoint.base_kv_pep",
                  "module.spoke_asgwy_qa.azurerm_private_endpoint.cog_kv_peps",
                  "module.spoke_asgwy_qa.azurerm_public_ip.additional_apim_public_ip",
                  "module.spoke_asgwy_qa.azurerm_public_ip.apim_public_ip",
                  "module.spoke_asgwy_qa.azurerm_resource_group.adf_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.aks_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.app_services_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.cog_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.mi_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.secr_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.adf_kv_key_access_admin_role",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.adf_kv_key_access_admin_role_system_id",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.apim_kv_access_for_named_value",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.apim_kv_cert_access_for_named_value",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.azure_disk_encryption_permissions",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.base_custom_kv_key_access_aes_role",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.base_custom_kv_key_access_aes_role_managed_identity",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.base_kv_access_cog_role",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.base_kv_key_access_admin_role",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.base_kv_key_access_admin_role_dbk",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.base_kv_key_access_aes_role",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.base_kv_key_access_aes_role_managed_identity",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.base_kv_key_access_dbw_managed_id",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.base_kv_key_access_reader_role",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.base_kv_key_access_user_role",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.cluster_external_managed_identity_user_permissions",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.cluster_gha_managed_identity_user_permissions",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.cog_kv_key_access_aes_role_managed_identity",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.cog_kv_key_access_cv_role_managed_identity",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.dns_zone_permissions",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.key_vault_admin_permissions",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.key_vault_web_app_routing_certificates_officer",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.key_vault_web_app_routing_secrets_user",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.key_vaults_secret_provider_permissions",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.key_vaults_secret_provider_permissions_over_central_xpkube_kv",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.kv_access_apim",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.kv_access_linux_funapps",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.kv_access_windows_funapps",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.openai_cognitive_user_access",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.openai_user_access",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.ud_key_vault_certificates_officer_rbac",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.ud_key_vault_secrets_officer_rbac",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.ud_keyvault_crypto_user_rbac",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.ud_keyvault_secrets_user_rbac",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.ud_keyvault_ud_mi_crypto_user_rbac",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.ud_keyvault_ud_mi_key_vault_admin_certificates_officer_rbac",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.ud_keyvault_ud_mi_key_vault_admin_crypto_officer_rbac",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.ud_keyvault_ud_mi_key_vault_admin_secrets_officer_rbac",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.ud_keyvault_ud_mi_secrets_user_rbac",
                  "module.spoke_asgwy_qa.azurerm_route.routes",
                  "module.spoke_asgwy_qa.azurerm_route_table.route_tables",
                  "module.spoke_asgwy_qa.azurerm_service_plan.asps",
                  "module.spoke_asgwy_qa.azurerm_storage_account.ud_storage_accounts",
                  "module.spoke_asgwy_qa.azurerm_subnet.subnets",
                  "module.spoke_asgwy_qa.azurerm_subnet_route_table_association.route_table_subnet_association",
                  "module.spoke_asgwy_qa.azurerm_user_assigned_identity.aks_managed_identity",
                  "module.spoke_asgwy_qa.azurerm_user_assigned_identity.base_kv_uai",
                  "module.spoke_asgwy_qa.azurerm_user_assigned_identity.cog_kv_uai",
                  "module.spoke_asgwy_qa.azurerm_user_assigned_identity.ud_managed_identity",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.azurerm_windows_function_app.windows_funapps",
                  "module.spoke_asgwy_qa.data.azurerm_client_config.current",
                  "module.spoke_asgwy_qa.data.azurerm_key_vault.host_base_kv",
                  "module.spoke_asgwy_qa.data.azurerm_key_vault_key.base_kv_key",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_network_security_group.ext_nsg",
                  "module.spoke_asgwy_qa.data.azurerm_resource_group.all_context_rgs",
                  "module.spoke_asgwy_qa.data.azurerm_resources.all_existing_vms",
                  "module.spoke_asgwy_qa.data.azurerm_resources.ases",
                  "module.spoke_asgwy_qa.data.azurerm_resources.host_base_key_vault",
                  "module.spoke_asgwy_qa.data.azurerm_resources.host_custom_key_vault",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_linux_rhel8",
                  "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_windows",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_user_assigned_identity.base_kv_uai",
                  "module.spoke_asgwy_qa.data.azurerm_user_assigned_identity.function_uais",
                  "module.spoke_asgwy_qa.data.azurerm_user_assigned_identity.webapprouting_managed_identity",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.external.azlogin",
                  "module.spoke_asgwy_qa.data.external.existing_rgs",
                  "module.spoke_asgwy_qa.data.external.find_base_key",
                  "module.spoke_asgwy_qa.data.external.vm_azlogin",
                  "module.spoke_asgwy_qa.data.external.vm_name_generation",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.data.terraform_remote_state.spoke",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_password.aks_windows_password",
                  "module.spoke_asgwy_qa.random_string.aks_suffix_name",
                  "module.spoke_asgwy_qa.random_string.kvname",
                  "module.spoke_asgwy_qa.random_string.peering",
                  "module.spoke_asgwy_qa.terraform_data.existing_rgs",
                  "module.spoke_asgwy_qa.time_sleep.base_kv_role_propagation",
                  "module.spoke_asgwy_qa.time_sleep.cog_kv_role_propagation"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.terraform_data.ud_key_vaults_lock_triggers[\"db\"]",
                "mode": "managed",
                "type": "terraform_data",
                "name": "ud_key_vaults_lock_triggers",
                "index": "db",
                "provider_name": "terraform.io/builtin/terraform",
                "schema_version": 0,
                "values": {
                  "id": "6d0f9e95-f85a-9086-e7f9-c835dd14417e",
                  "input": {
                    "diag_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db|diag-kv-hcbasgwy0402db",
                    "key_vault_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
                    "pep_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.Network/privateEndpoints/pep-hcb-asgwy-qa-usc-kv-db"
                  },
                  "output": {
                    "diag_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db|diag-kv-hcbasgwy0402db",
                    "key_vault_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.KeyVault/vaults/kv-hcbasgwy0402db",
                    "pep_id": "/subscriptions/e1673bbe-b688-445f-8773-32c3709fcffb/resourceGroups/rg-hcb-asgwy-qa-usc-secr/providers/Microsoft.Network/privateEndpoints/pep-hcb-asgwy-qa-usc-kv-db"
                  },
                  "triggers_replace": null
                },
                "sensitive_values": {
                  "input": {},
                  "output": {}
                },
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_key_vault.ud_key_vaults",
                  "module.spoke_asgwy_qa.azurerm_monitor_diagnostic_setting.diag_ud_key_vaults",
                  "module.spoke_asgwy_qa.azurerm_private_endpoint.ud_key_vaults_pes",
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.secr_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs",
                  "module.spoke_asgwy_qa.azurerm_subnet.subnets",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_client_config.current",
                  "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
                  "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.data.terraform_remote_state.spoke",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.kvname",
                  "module.spoke_asgwy_qa.random_string.peering"
                ]
              },
              {
                "address": "module.spoke_asgwy_qa.time_sleep.base_kv_role_propagation[0]",
                "mode": "managed",
                "type": "time_sleep",
                "name": "base_kv_role_propagation",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/time",
                "schema_version": 0,
                "values": {
                  "create_duration": "30s",
                  "destroy_duration": null,
                  "id": "2024-12-18T20:30:08Z",
                  "triggers": null
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.spoke_asgwy_qa.azurerm_key_vault.base_kv",
                  "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
                  "module.spoke_asgwy_qa.azurerm_resource_group.secr_rg",
                  "module.spoke_asgwy_qa.azurerm_role_assignment.base_kv_key_access_aes_role_managed_identity",
                  "module.spoke_asgwy_qa.azurerm_user_assigned_identity.base_kv_uai",
                  "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_centralus_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
                  "module.spoke_asgwy_qa.azurerm_virtual_network_peering.spoke_to_hub",
                  "module.spoke_asgwy_qa.data.azurerm_client_config.current",
                  "module.spoke_asgwy_qa.data.azurerm_key_vault.host_base_kv",
                  "module.spoke_asgwy_qa.data.azurerm_resources.host_base_key_vault",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.current",
                  "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
                  "module.spoke_asgwy_qa.data.azurerm_virtual_network.hub_vnet",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
                  "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
                  "module.spoke_asgwy_qa.data.terraform_remote_state.spoke",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
                  "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
                  "module.spoke_asgwy_qa.random_string.kvname",
                  "module.spoke_asgwy_qa.random_string.peering"
                ]
              }
            ],
            "address": "module.spoke_asgwy_qa"
          }
        ]
      }
    }
  },
  "configuration": {
    "provider_config": {
      "azurerm": {
        "name": "azurerm",
        "full_name": "registry.terraform.io/hashicorp/azurerm",
        "expressions": {
          "features": [
            {
              "key_vault": [
                {
                  "purge_soft_delete_on_destroy": {
                    "constant_value": false
                  },
                  "purge_soft_deleted_keys_on_destroy": {
                    "constant_value": false
                  }
                }
              ]
            }
          ],
          "subscription_id": {
            "constant_value": "e1673bbe-b688-445f-8773-32c3709fcffb"
          },
          "use_oidc": {
            "constant_value": true
          }
        }
      },
      "azurerm.hub": {
        "name": "azurerm",
        "full_name": "registry.terraform.io/hashicorp/azurerm",
        "alias": "hub",
        "expressions": {
          "features": [
            {}
          ],
          "subscription_id": {
            "references": [
              "local.hub_subscriptions_map",
              "local.region_environment"
            ]
          },
          "use_oidc": {
            "constant_value": true
          }
        }
      },
      "module.spoke_asgwy_qa:azapi": {
        "name": "azapi",
        "full_name": "registry.terraform.io/azure/azapi",
        "version_constraint": "1.11.0",
        "module_address": "module.spoke_asgwy_qa"
      },
      "module.spoke_asgwy_qa:azapi.azapi": {
        "name": "azapi",
        "full_name": "registry.terraform.io/azure/azapi",
        "alias": "azapi",
        "version_constraint": "1.11.0",
        "module_address": "module.spoke_asgwy_qa",
        "expressions": {
          "subscription_id": {
            "references": [
              "data.azurerm_subscription.current.id",
              "data.azurerm_subscription.current"
            ]
          },
          "tenant_id": {
            "references": [
              "data.azurerm_client_config.current.tenant_id",
              "data.azurerm_client_config.current"
            ]
          },
          "use_oidc": {
            "constant_value": true
          }
        }
      },
      "module.spoke_asgwy_qa:azurerm.autoeng": {
        "name": "azurerm",
        "full_name": "registry.terraform.io/hashicorp/azurerm",
        "alias": "autoeng",
        "version_constraint": "3.116.0",
        "module_address": "module.spoke_asgwy_qa",
        "expressions": {
          "features": [
            {}
          ],
          "subscription_id": {
            "constant_value": "82a49f9f-f44c-4d27-a0d3-109a54553d69"
          },
          "use_oidc": {
            "constant_value": true
          }
        }
      },
      "module.spoke_asgwy_qa:external": {
        "name": "external",
        "full_name": "registry.terraform.io/hashicorp/external",
        "module_address": "module.spoke_asgwy_qa"
      },
      "module.spoke_asgwy_qa:infoblox": {
        "name": "infoblox",
        "full_name": "registry.terraform.io/infobloxopen/infoblox",
        "version_constraint": "2.4.1",
        "module_address": "module.spoke_asgwy_qa"
      },
      "module.spoke_asgwy_qa:null": {
        "name": "null",
        "full_name": "registry.terraform.io/hashicorp/null",
        "module_address": "module.spoke_asgwy_qa"
      },
      "module.spoke_asgwy_qa:random": {
        "name": "random",
        "full_name": "registry.terraform.io/hashicorp/random",
        "module_address": "module.spoke_asgwy_qa"
      },
      "module.spoke_asgwy_qa:terraform": {
        "name": "terraform",
        "full_name": "terraform.io/builtin/terraform",
        "module_address": "module.spoke_asgwy_qa"
      },
      "module.spoke_asgwy_qa:time": {
        "name": "time",
        "full_name": "registry.terraform.io/hashicorp/time",
        "module_address": "module.spoke_asgwy_qa"
      },
      "module.spoke_asgwy_qa:tls": {
        "name": "tls",
        "full_name": "registry.terraform.io/hashicorp/tls",
        "module_address": "module.spoke_asgwy_qa"
      }
    },
    "root_module": {
      "module_calls": {
        "spoke_asgwy_qa": {
          "source": "git@github.com:cvs-health-enterprise-code/ExpressCloud-Azure.git?ref=v0.66.3",
          "expressions": {
            "application_id": {
              "constant_value": "asgwy"
            },
            "environment": {
              "constant_value": "qa"
            },
            "host_index": {
              "constant_value": 1
            },
            "internal_use": {
              "constant_value": {
                "ipam_version": 2,
                "network_strategy": "shared_vnet"
              }
            },
            "key_vaults": {
              "constant_value": [
                {
                  "name": "db",
                  "subnet_name": "pe"
                }
              ]
            },
            "line_of_business": {
              "constant_value": "hcb"
            },
            "location": {
              "constant_value": "centralus"
            },
            "required_tags": {
              "constant_value": {
                "costcenter": "792513",
                "cvsappid": "APM0015151",
                "environmentsubtype": "QA",
                "environmenttype": "NonProd",
                "itpmid": "16118",
                "sharedemailaddress": "GhaiR2@cvshealth.com"
              }
            },
            "resource_groups": {
              "constant_value": [
                "app",
                "db"
              ]
            },
            "subnets": {
              "constant_value": [
                {
                  "cidr_suffix": "/28",
                  "name": "db",
                  "service_endpoints": [
                    "Microsoft.Storage",
                    "Microsoft.KeyVault",
                    "Microsoft.AzureActiveDirectory"
                  ]
                },
                {
                  "cidr_suffix": "/28",
                  "name": "psqldb",
                  "service_endpoints": [
                    "Microsoft.Storage",
                    "Microsoft.KeyVault",
                    "Microsoft.AzureActiveDirectory"
                  ],
                  "type": "psql_flexserver"
                },
                {
                  "cidr_suffix": "/28",
                  "name": "pe"
                }
              ]
            },
            "ud_managed_identities": {
              "constant_value": [
                {
                  "name": "db"
                },
                {
                  "name": "psql-flex-ddl-asgwy-user"
                },
                {
                  "name": "psql-flex-dml-asgwy-user"
                }
              ]
            }
          },
          "module": {
            "outputs": {
              "aks_rg": {
                "expression": {
                  "references": [
                    "azurerm_resource_group.aks_rg"
                  ]
                }
              },
              "all_existing_vms": {
                "expression": {
                  "references": [
                    "data.azurerm_resources.all_existing_vms"
                  ]
                }
              },
              "all_rgs": {
                "expression": {
                  "references": [
                    "local.all_rgs"
                  ]
                }
              },
              "base_key_id": {
                "expression": {
                  "references": [
                    "local.base_key_id"
                  ]
                }
              },
              "base_kv_id": {
                "expression": {
                  "references": [
                    "local.base_kv_id"
                  ]
                }
              },
              "base_kv_uai": {
                "expression": {
                  "references": [
                    "azurerm_user_assigned_identity.base_kv_uai"
                  ]
                }
              },
              "cross_region_base_key_id": {
                "expression": {
                  "references": [
                    "local.cross_region_base_key_id"
                  ]
                }
              },
              "cross_region_base_key_vault_id": {
                "expression": {
                  "references": [
                    "local.cross_region_base_key_vault_id"
                  ]
                }
              },
              "cross_region_base_key_vault_name": {
                "expression": {
                  "references": [
                    "local.cross_region_base_key_vault_name"
                  ]
                }
              },
              "cross_region_host_name_prefix": {
                "expression": {
                  "references": [
                    "local.cross_region_host_name_prefix"
                  ]
                }
              },
              "custom_disk_csvs": {
                "expression": {
                  "references": [
                    "local.custom_disk_csvs"
                  ]
                }
              },
              "existing_vm_shortnames": {
                "expression": {
                  "references": [
                    "local.existing_vm_shortnames"
                  ]
                }
              },
              "host_cross_region_rg_suffix": {
                "expression": {
                  "references": [
                    "local.host_cross_region_rg_suffix"
                  ]
                }
              },
              "host_key_name": {
                "expression": {
                  "references": [
                    "local.host_key_name"
                  ]
                }
              },
              "host_name_prefix": {
                "expression": {
                  "references": [
                    "local.host_name_prefix"
                  ]
                }
              },
              "host_rg_suffix": {
                "expression": {
                  "references": [
                    "local.host_rg_suffix"
                  ]
                }
              },
              "host_vnet": {
                "expression": {
                  "references": [
                    "data.azurerm_virtual_network.host_vnet"
                  ]
                }
              },
              "internal_use": {
                "expression": {
                  "references": [
                    "var.internal_use"
                  ]
                }
              },
              "ips": {
                "expression": {
                  "references": [
                    "azurerm_network_interface.nics"
                  ]
                }
              },
              "log_analytics_workspace": {
                "expression": {
                  "references": [
                    "azurerm_log_analytics_workspace.log_analytics_workspace"
                  ]
                }
              },
              "log_analytics_workspace_id": {
                "expression": {
                  "references": [
                    "local.log_analytics_workspace_id"
                  ]
                }
              },
              "name_prefix": {
                "expression": {
                  "references": [
                    "local.name_prefix"
                  ]
                }
              },
              "parent_context_subnets": {
                "expression": {
                  "references": [
                    "local.parent_context_subnets"
                  ]
                }
              },
              "secr_rg": {
                "expression": {
                  "references": [
                    "azurerm_resource_group.secr_rg"
                  ]
                }
              },
              "subnets": {
                "expression": {
                  "references": [
                    "azurerm_subnet.subnets"
                  ]
                }
              },
              "tags": {
                "expression": {
                  "references": [
                    "local.all_tags"
                  ]
                }
              },
              "vm_list": {
                "expression": {
                  "references": [
                    "local.vm_list"
                  ]
                }
              },
              "vm_list_with_disks": {
                "expression": {
                  "references": [
                    "local.vm_list_with_disks"
                  ]
                }
              },
              "vnet_id": {
                "expression": {
                  "references": [
                    "local.vnet_id"
                  ]
                }
              },
              "vnet_name": {
                "expression": {
                  "references": [
                    "local.vnet_name"
                  ]
                }
              },
              "vnet_rg_name": {
                "expression": {
                  "references": [
                    "local.vnet_rg_name"
                  ]
                }
              },
              "zzznsg_vms": {
                "expression": {
                  "references": [
                    "local.linux_corp_vms",
                    "local.linux_corp_subnet_name_list",
                    "local.linux_corp_subnet_name",
                    "local.win_corp_vms",
                    "local.win_corp_subnet_name_list",
                    "local.win_corp_subnet_name",
                    "local.all_subnet_names"
                  ]
                }
              }
            },
            "resources": [
              {
                "address": "azapi_resource.api_srch",
                "mode": "managed",
                "type": "azapi_resource",
                "name": "api_srch",
                "provider_config_key": "module.spoke_asgwy_qa:azapi.azapi",
                "expressions": {
                  "body": {
                    "references": [
                      "each.value.disable_local_auth",
                      "each.value",
                      "each.value.partition_count",
                      "each.value",
                      "each.value.replica_count",
                      "each.value",
                      "each.value.sku_name",
                      "each.value",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  },
                  "identity": [
                    {
                      "type": {
                        "constant_value": "SystemAssigned"
                      }
                    }
                  ],
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "parent_id": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.srch_rg[0].id",
                      "azurerm_resource_group.srch_rg[0]",
                      "azurerm_resource_group.srch_rg"
                    ]
                  },
                  "schema_validation_enabled": {
                    "constant_value": false
                  },
                  "type": {
                    "constant_value": "Microsoft.Search/searchServices@2022-09-01"
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.search_services"
                  ]
                }
              },
              {
                "address": "azapi_resource.azapi_logicapps",
                "mode": "managed",
                "type": "azapi_resource",
                "name": "azapi_logicapps",
                "provider_config_key": "module.spoke_asgwy_qa:azapi.azapi",
                "expressions": {
                  "body": {
                    "references": [
                      "azurerm_service_plan.asps",
                      "each.value.ud_app_service_plan",
                      "each.value",
                      "azurerm_service_plan.asps",
                      "each.value.ud_app_service_plan",
                      "each.value",
                      "azurerm_service_plan.asps",
                      "each.value.ud_app_service_plan",
                      "each.value",
                      "azurerm_service_plan.asps",
                      "each.value.ud_app_service_plan",
                      "each.value",
                      "azurerm_service_plan.asps",
                      "each.value.ud_app_service_plan",
                      "each.value",
                      "each.value.integrated_subnet_name",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.integrated_subnet_name",
                      "each.value",
                      "each.value.external_integrated_subnet_id",
                      "each.value",
                      "azurerm_storage_account.ud_storage_accounts",
                      "each.value.ud_storage_account",
                      "each.value"
                    ]
                  },
                  "identity": [
                    {
                      "type": {
                        "constant_value": "SystemAssigned"
                      }
                    }
                  ],
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.key"
                    ]
                  },
                  "parent_id": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.app_services_rg[0].id",
                      "azurerm_resource_group.app_services_rg[0]",
                      "azurerm_resource_group.app_services_rg"
                    ]
                  },
                  "schema_validation_enabled": {
                    "constant_value": false
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  },
                  "type": {
                    "constant_value": "Microsoft.Web/sites@2022-03-01"
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.logic_apps"
                  ]
                }
              },
              {
                "address": "azurerm_ai_services.ai_account",
                "mode": "managed",
                "type": "azurerm_ai_services",
                "name": "ai_account",
                "provider_config_key": "azurerm",
                "expressions": {
                  "custom_subdomain_name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "local_authentication_enabled": {
                    "constant_value": false
                  },
                  "location": {
                    "references": [
                      "each.value.location",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "public_network_access": {
                    "references": [
                      "each.value.public_network_access",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ai_rg[0].name",
                      "azurerm_resource_group.ai_rg[0]",
                      "azurerm_resource_group.ai_rg"
                    ]
                  },
                  "sku_name": {
                    "references": [
                      "each.value.sku_name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.ai_governance_tag",
                      "each.value",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "each.value.ai_governance_tag",
                      "each.value",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "each.value.ai_governance_tag",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.ai_services"
                  ]
                }
              },
              {
                "address": "azurerm_api_management.apim",
                "mode": "managed",
                "type": "azurerm_api_management",
                "name": "apim",
                "provider_config_key": "azurerm",
                "expressions": {
                  "identity": [
                    {
                      "identity_ids": {
                        "references": [
                          "local.base_kv_uai_id"
                        ]
                      },
                      "type": {
                        "constant_value": "SystemAssigned, UserAssigned"
                      }
                    }
                  ],
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "local.env_region",
                      "each.key"
                    ]
                  },
                  "public_ip_address_id": {
                    "references": [
                      "each.value.is_stv2",
                      "each.value",
                      "azurerm_public_ip.apim_public_ip",
                      "each.key"
                    ]
                  },
                  "publisher_email": {
                    "references": [
                      "each.value.publisher_email",
                      "each.value"
                    ]
                  },
                  "publisher_name": {
                    "references": [
                      "each.value.publisher_name",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value"
                    ]
                  },
                  "sku_name": {
                    "references": [
                      "each.value.sku_name",
                      "each.value",
                      "each.value.deployed_units",
                      "each.value"
                    ]
                  },
                  "virtual_network_type": {
                    "references": [
                      "each.value.virtual_network_type",
                      "each.value"
                    ]
                  },
                  "zones": {
                    "references": [
                      "each.value.zones",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.api_management"
                  ]
                },
                "depends_on": [
                  "azurerm_key_vault.base_kv"
                ]
              },
              {
                "address": "azurerm_app_configuration.appconfs",
                "mode": "managed",
                "type": "azurerm_app_configuration",
                "name": "appconfs",
                "provider_config_key": "azurerm",
                "expressions": {
                  "encryption": [
                    {
                      "identity_client_id": {
                        "references": [
                          "azurerm_user_assigned_identity.base_kv_uai[0].client_id",
                          "azurerm_user_assigned_identity.base_kv_uai[0]",
                          "azurerm_user_assigned_identity.base_kv_uai"
                        ]
                      },
                      "key_vault_key_identifier": {
                        "references": [
                          "local.base_key_id"
                        ]
                      }
                    }
                  ],
                  "identity": [
                    {
                      "identity_ids": {
                        "references": [
                          "local.base_kv_uai_id"
                        ]
                      },
                      "type": {
                        "constant_value": "UserAssigned"
                      }
                    }
                  ],
                  "local_auth_enabled": {
                    "references": [
                      "each.value.local_auth_enabled",
                      "each.value"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.random_kv_names",
                      "var.line_of_business",
                      "var.application_id",
                      "each.key",
                      "random_string.kvname.result",
                      "random_string.kvname",
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.key"
                    ]
                  },
                  "public_network_access": {
                    "constant_value": "Disabled"
                  },
                  "purge_protection_enabled": {
                    "constant_value": true
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.app_services_rg[0].name",
                      "azurerm_resource_group.app_services_rg[0]",
                      "azurerm_resource_group.app_services_rg"
                    ]
                  },
                  "sku": {
                    "constant_value": "standard"
                  },
                  "soft_delete_retention_days": {
                    "constant_value": 7
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.app_configurations"
                  ]
                }
              },
              {
                "address": "azurerm_app_service_environment_v3.ases",
                "mode": "managed",
                "type": "azurerm_app_service_environment_v3",
                "name": "ases",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.dns_suffix",
                          "self",
                          "self.internal_inbound_ip_addresses[0]",
                          "self.internal_inbound_ip_addresses",
                          "self",
                          "self.dns_suffix",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  },
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.dns_suffix",
                          "self",
                          "self.internal_inbound_ip_addresses[0]",
                          "self.internal_inbound_ip_addresses",
                          "self",
                          "self.dns_suffix",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "allow_new_private_endpoint_connections": {
                    "references": [
                      "var.ase_settings.allow_new_private_endpoint_connections",
                      "var.ase_settings"
                    ]
                  },
                  "internal_load_balancing_mode": {
                    "constant_value": "Web, Publishing"
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.key"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.app_services_rg[0].name",
                      "azurerm_resource_group.app_services_rg[0]",
                      "azurerm_resource_group.app_services_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "azurerm_subnet.subnets",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.subnets_with_delegation_info"
                  ]
                }
              },
              {
                "address": "azurerm_application_insights.app_insights",
                "mode": "managed",
                "type": "azurerm_application_insights",
                "name": "app_insights",
                "provider_config_key": "azurerm",
                "expressions": {
                  "application_type": {
                    "references": [
                      "each.value.application_type",
                      "each.value"
                    ]
                  },
                  "daily_data_cap_in_gb": {
                    "references": [
                      "each.value.daily_data_cap_in_gb",
                      "each.value"
                    ]
                  },
                  "location": {
                    "references": [
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "local.env_region",
                      "each.key"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value"
                    ]
                  },
                  "retention_in_days": {
                    "references": [
                      "each.value.retention_in_days",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  },
                  "workspace_id": {
                    "references": [
                      "var.log_analytics_workspace",
                      "azurerm_log_analytics_workspace.log_analytics_workspace[0].id",
                      "azurerm_log_analytics_workspace.log_analytics_workspace[0]",
                      "azurerm_log_analytics_workspace.log_analytics_workspace"
                    ]
                  }
                },
                "schema_version": 2,
                "for_each_expression": {
                  "references": [
                    "var.app_insights"
                  ]
                }
              },
              {
                "address": "azurerm_application_insights.linux_webapps_app_insights",
                "mode": "managed",
                "type": "azurerm_application_insights",
                "name": "linux_webapps_app_insights",
                "provider_config_key": "azurerm",
                "expressions": {
                  "application_type": {
                    "references": [
                      "each.value.application_type",
                      "each.value"
                    ]
                  },
                  "daily_data_cap_in_gb": {
                    "references": [
                      "each.value.app_insights_daily_data_cap_in_gb",
                      "each.value"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.key"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.app_services_rg[0].name",
                      "azurerm_resource_group.app_services_rg[0]",
                      "azurerm_resource_group.app_services_rg"
                    ]
                  },
                  "retention_in_days": {
                    "references": [
                      "each.value.app_insights_retention_in_days",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  },
                  "workspace_id": {
                    "references": [
                      "var.log_analytics_workspace",
                      "azurerm_log_analytics_workspace.log_analytics_workspace[0].id",
                      "azurerm_log_analytics_workspace.log_analytics_workspace[0]",
                      "azurerm_log_analytics_workspace.log_analytics_workspace"
                    ]
                  }
                },
                "schema_version": 2,
                "for_each_expression": {
                  "references": [
                    "local.linux_webapps"
                  ]
                }
              },
              {
                "address": "azurerm_application_insights.windows_webapps_app_insights",
                "mode": "managed",
                "type": "azurerm_application_insights",
                "name": "windows_webapps_app_insights",
                "provider_config_key": "azurerm",
                "expressions": {
                  "application_type": {
                    "references": [
                      "each.value.application_type",
                      "each.value"
                    ]
                  },
                  "daily_data_cap_in_gb": {
                    "references": [
                      "each.value.app_insights_daily_data_cap_in_gb",
                      "each.value"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.key"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.app_services_rg[0].name",
                      "azurerm_resource_group.app_services_rg[0]",
                      "azurerm_resource_group.app_services_rg"
                    ]
                  },
                  "retention_in_days": {
                    "references": [
                      "each.value.app_insights_retention_in_days",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  },
                  "workspace_id": {
                    "references": [
                      "var.log_analytics_workspace",
                      "azurerm_log_analytics_workspace.log_analytics_workspace[0].id",
                      "azurerm_log_analytics_workspace.log_analytics_workspace[0]",
                      "azurerm_log_analytics_workspace.log_analytics_workspace"
                    ]
                  }
                },
                "schema_version": 2,
                "for_each_expression": {
                  "references": [
                    "local.windows_webapps"
                  ]
                }
              },
              {
                "address": "azurerm_cognitive_account.cogs",
                "mode": "managed",
                "type": "azurerm_cognitive_account",
                "name": "cogs",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "each.value.kind",
                          "each.value"
                        ]
                      },
                      "environment": {
                        "references": [
                          "data.azurerm_subscription.current.id",
                          "data.azurerm_subscription.current",
                          "self.id",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "custom_subdomain_name": {
                    "references": [
                      "each.value.custom_subdomain",
                      "each.value",
                      "each.value.custom_subdomain",
                      "each.value",
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "fqdns": {
                    "references": [
                      "each.value.fqdns",
                      "each.value"
                    ]
                  },
                  "kind": {
                    "references": [
                      "each.value.kind",
                      "each.value"
                    ]
                  },
                  "local_auth_enabled": {
                    "references": [
                      "each.value.local_auth_enabled",
                      "each.value"
                    ]
                  },
                  "location": {
                    "references": [
                      "each.value.location",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "network_acls": [
                    {
                      "default_action": {
                        "constant_value": "Deny"
                      },
                      "virtual_network_rules": [
                        {
                          "subnet_id": {
                            "references": [
                              "each.value.external_subnet_id",
                              "each.value",
                              "each.value.external_subnet_id",
                              "each.value",
                              "azurerm_subnet.subnets",
                              "each.value.subnet_name",
                              "each.value"
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "public_network_access_enabled": {
                    "constant_value": false
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.cog_rg[0].name",
                      "azurerm_resource_group.cog_rg[0]",
                      "azurerm_resource_group.cog_rg"
                    ]
                  },
                  "sku_name": {
                    "references": [
                      "each.value.sku_name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.ai_governance_tag",
                      "each.value",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "each.value.ai_governance_tag",
                      "each.value",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "each.value.ai_governance_tag",
                      "each.value",
                      "local.all_tags"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "4h"
                    }
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.cognitive_services"
                  ]
                },
                "depends_on": [
                  "time_sleep.cog_kv_role_propagation"
                ]
              },
              {
                "address": "azurerm_cognitive_account_customer_managed_key.cog_cmk",
                "mode": "managed",
                "type": "azurerm_cognitive_account_customer_managed_key",
                "name": "cog_cmk",
                "provider_config_key": "azurerm",
                "expressions": {
                  "cognitive_account_id": {
                    "references": [
                      "azurerm_cognitive_account.cogs",
                      "each.key"
                    ]
                  },
                  "key_vault_key_id": {
                    "references": [
                      "azurerm_key_vault_key.cog_kv_key",
                      "each.value.location",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.cognitive_services"
                  ]
                },
                "depends_on": [
                  "azurerm_private_endpoint.cog_peps",
                  "azurerm_role_assignment.cog_kv_key_access_cv_role_managed_identity"
                ]
              },
              {
                "address": "azurerm_cognitive_deployment.models",
                "mode": "managed",
                "type": "azurerm_cognitive_deployment",
                "name": "models",
                "provider_config_key": "azurerm",
                "expressions": {
                  "cognitive_account_id": {
                    "references": [
                      "azurerm_cognitive_account.cogs",
                      "each.key"
                    ]
                  },
                  "model": [
                    {
                      "format": {
                        "constant_value": "OpenAI"
                      },
                      "name": {
                        "references": [
                          "each.value.model",
                          "each.value"
                        ]
                      },
                      "version": {
                        "references": [
                          "each.value.model_version",
                          "each.value"
                        ]
                      }
                    }
                  ],
                  "name": {
                    "references": [
                      "each.key",
                      "each.value.model",
                      "each.value"
                    ]
                  },
                  "scale": [
                    {
                      "capacity": {
                        "references": [
                          "each.value.capacity",
                          "each.value"
                        ]
                      },
                      "type": {
                        "constant_value": "Standard"
                      }
                    }
                  ]
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.cognitive_services"
                  ]
                },
                "depends_on": [
                  "time_sleep.openai_dlp_propagation"
                ]
              },
              {
                "address": "azurerm_cognitive_deployment.ud_models",
                "mode": "managed",
                "type": "azurerm_cognitive_deployment",
                "name": "ud_models",
                "provider_config_key": "azurerm",
                "expressions": {
                  "cognitive_account_id": {
                    "references": [
                      "azurerm_cognitive_account.cogs",
                      "each.value.ai_name",
                      "each.value"
                    ]
                  },
                  "model": [
                    {
                      "format": {
                        "constant_value": "OpenAI"
                      },
                      "name": {
                        "references": [
                          "each.value.model",
                          "each.value"
                        ]
                      },
                      "version": {
                        "references": [
                          "each.value.model_version",
                          "each.value"
                        ]
                      }
                    }
                  ],
                  "name": {
                    "references": [
                      "each.value.ai_name",
                      "each.value",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "scale": [
                    {
                      "capacity": {
                        "references": [
                          "each.value.capacity",
                          "each.value"
                        ]
                      },
                      "type": {
                        "constant_value": "Standard"
                      }
                    }
                  ]
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.ai_models"
                  ]
                }
              },
              {
                "address": "azurerm_consumption_budget_resource_group.azure_budget",
                "mode": "managed",
                "type": "azurerm_consumption_budget_resource_group",
                "name": "azure_budget",
                "provider_config_key": "azurerm",
                "expressions": {
                  "amount": {
                    "references": [
                      "each.value.amount",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.key"
                    ]
                  },
                  "notification": [
                    {
                      "contact_emails": {
                        "references": [
                          "each.value.emails",
                          "each.value",
                          "each.value.emails",
                          "each.value",
                          "var.required_tags[\"sharedemailaddress\"]",
                          "var.required_tags"
                        ]
                      },
                      "enabled": {
                        "references": [
                          "each.value.notify",
                          "each.value"
                        ]
                      },
                      "operator": {
                        "constant_value": "GreaterThan"
                      },
                      "threshold": {
                        "references": [
                          "each.value.threshold",
                          "each.value"
                        ]
                      },
                      "threshold_type": {
                        "references": [
                          "each.value.threshold_type",
                          "each.value"
                        ]
                      }
                    }
                  ],
                  "resource_group_id": {
                    "references": [
                      "each.value.resource_group_id",
                      "each.value",
                      "each.value.resource_group_id",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.resource_group",
                      "each.value"
                    ]
                  },
                  "time_grain": {
                    "references": [
                      "each.value.time_grain",
                      "each.value"
                    ]
                  },
                  "time_period": [
                    {
                      "start_date": {
                        "references": [
                          "each.value.start_date",
                          "each.value"
                        ]
                      }
                    }
                  ]
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.budgets"
                  ]
                }
              },
              {
                "address": "azurerm_container_registry.container_registry",
                "mode": "managed",
                "type": "azurerm_container_registry",
                "name": "container_registry",
                "provider_config_key": "azurerm",
                "expressions": {
                  "admin_enabled": {
                    "references": [
                      "each.value.admin_enabled",
                      "each.value"
                    ]
                  },
                  "anonymous_pull_enabled": {
                    "references": [
                      "each.value.anonymous_pull_enabled",
                      "each.value"
                    ]
                  },
                  "encryption": {
                    "references": [
                      "local.base_key_id",
                      "azurerm_user_assigned_identity.base_kv_uai[0].client_id",
                      "azurerm_user_assigned_identity.base_kv_uai[0]",
                      "azurerm_user_assigned_identity.base_kv_uai"
                    ]
                  },
                  "identity": [
                    {
                      "identity_ids": {
                        "references": [
                          "local.base_kv_uai_id"
                        ]
                      },
                      "type": {
                        "constant_value": "UserAssigned"
                      }
                    }
                  ],
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "public_network_access_enabled": {
                    "constant_value": false
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.acr_rg[0].name",
                      "azurerm_resource_group.acr_rg[0]",
                      "azurerm_resource_group.acr_rg"
                    ]
                  },
                  "sku": {
                    "constant_value": "Premium"
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 2,
                "for_each_expression": {
                  "references": [
                    "var.container_registry"
                  ]
                }
              },
              {
                "address": "azurerm_cosmosdb_account.cosmosdb_nosql_account",
                "mode": "managed",
                "type": "azurerm_cosmosdb_account",
                "name": "cosmosdb_nosql_account",
                "provider_config_key": "azurerm",
                "expressions": {
                  "consistency_policy": [
                    {
                      "consistency_level": {
                        "constant_value": "Session"
                      }
                    }
                  ],
                  "default_identity_type": {
                    "references": [
                      "azurerm_user_assigned_identity.base_kv_uai[0].id",
                      "azurerm_user_assigned_identity.base_kv_uai[0]",
                      "azurerm_user_assigned_identity.base_kv_uai"
                    ]
                  },
                  "enable_automatic_failover": {
                    "references": [
                      "each.value.enable_automatic_failover",
                      "each.value"
                    ]
                  },
                  "identity": [
                    {
                      "identity_ids": {
                        "references": [
                          "azurerm_user_assigned_identity.base_kv_uai[0].id",
                          "azurerm_user_assigned_identity.base_kv_uai[0]",
                          "azurerm_user_assigned_identity.base_kv_uai"
                        ]
                      },
                      "type": {
                        "constant_value": "UserAssigned"
                      }
                    }
                  ],
                  "key_vault_key_id": {
                    "references": [
                      "local.base_key_versionless_id"
                    ]
                  },
                  "kind": {
                    "constant_value": "GlobalDocumentDB"
                  },
                  "local_authentication_disabled": {
                    "constant_value": true
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "multiple_write_locations_enabled": {
                    "references": [
                      "each.value.multiple_write_locations_enabled",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "local.short_location_name",
                      "var.application_id",
                      "each.value.name",
                      "each.value",
                      "var.environment"
                    ]
                  },
                  "offer_type": {
                    "constant_value": "Standard"
                  },
                  "public_network_access_enabled": {
                    "constant_value": false
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.db_rgs[\"cdbnosql\"].name",
                      "azurerm_resource_group.db_rgs[\"cdbnosql\"]",
                      "azurerm_resource_group.db_rgs"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.cdb_nosql"
                  ]
                }
              },
              {
                "address": "azurerm_cosmosdb_sql_container.cosmosdb_sql_container",
                "mode": "managed",
                "type": "azurerm_cosmosdb_sql_container",
                "name": "cosmosdb_sql_container",
                "provider_config_key": "azurerm",
                "expressions": {
                  "account_name": {
                    "references": [
                      "azurerm_cosmosdb_account.cosmosdb_nosql_account",
                      "each.value.account_name",
                      "each.value"
                    ]
                  },
                  "autoscale_settings": [
                    {
                      "max_throughput": {
                        "references": [
                          "each.value.max_throughput",
                          "each.value",
                          "local.cdb_sizing_map",
                          "each.value.standard_size",
                          "each.value",
                          "each.value.max_throughput",
                          "each.value"
                        ]
                      }
                    }
                  ],
                  "database_name": {
                    "references": [
                      "azurerm_cosmosdb_sql_database.cosmosdb_sql_db",
                      "each.value.account_name",
                      "each.value",
                      "each.value.db_name",
                      "each.value",
                      "each.value.db_env",
                      "each.value"
                    ]
                  },
                  "indexing_policy": [
                    {
                      "included_path": [
                        {
                          "path": {
                            "constant_value": "/*"
                          }
                        }
                      ],
                      "indexing_mode": {
                        "constant_value": "consistent"
                      }
                    }
                  ],
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "partition_key_path": {
                    "references": [
                      "each.value.partition_key_path",
                      "each.value"
                    ]
                  },
                  "partition_key_version": {
                    "constant_value": 2
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.db_rgs[\"cdbnosql\"].name",
                      "azurerm_resource_group.db_rgs[\"cdbnosql\"]",
                      "azurerm_resource_group.db_rgs"
                    ]
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "local.cdb_nosql_containers"
                  ]
                },
                "depends_on": [
                  "azurerm_cosmosdb_sql_database.cosmosdb_sql_db"
                ]
              },
              {
                "address": "azurerm_cosmosdb_sql_database.cosmosdb_sql_db",
                "mode": "managed",
                "type": "azurerm_cosmosdb_sql_database",
                "name": "cosmosdb_sql_db",
                "provider_config_key": "azurerm",
                "expressions": {
                  "account_name": {
                    "references": [
                      "azurerm_cosmosdb_account.cosmosdb_nosql_account",
                      "each.value.account_name",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.db_name",
                      "each.value",
                      "each.value.db_env",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.db_rgs[\"cdbnosql\"].name",
                      "azurerm_resource_group.db_rgs[\"cdbnosql\"]",
                      "azurerm_resource_group.db_rgs"
                    ]
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "local.cdb_nosql_databases"
                  ]
                },
                "depends_on": [
                  "azurerm_cosmosdb_account.cosmosdb_nosql_account"
                ]
              },
              {
                "address": "azurerm_cosmosdb_sql_role_assignment.cosmosdb_read_only_groups",
                "mode": "managed",
                "type": "azurerm_cosmosdb_sql_role_assignment",
                "name": "cosmosdb_read_only_groups",
                "provider_config_key": "azurerm",
                "expressions": {
                  "account_name": {
                    "references": [
                      "azurerm_cosmosdb_account.cosmosdb_nosql_account",
                      "each.value.account_name",
                      "each.value"
                    ]
                  },
                  "principal_id": {
                    "references": [
                      "each.value.ad_group_id",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.db_rgs[\"cdbnosql\"].name",
                      "azurerm_resource_group.db_rgs[\"cdbnosql\"]",
                      "azurerm_resource_group.db_rgs"
                    ]
                  },
                  "role_definition_id": {
                    "references": [
                      "azurerm_cosmosdb_account.cosmosdb_nosql_account",
                      "each.value.account_name",
                      "each.value"
                    ]
                  },
                  "scope": {
                    "references": [
                      "azurerm_cosmosdb_account.cosmosdb_nosql_account",
                      "each.value.account_name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.cosmos_db_read_only_groups"
                  ]
                }
              },
              {
                "address": "azurerm_data_factory.adf",
                "mode": "managed",
                "type": "azurerm_data_factory",
                "name": "adf",
                "provider_config_key": "azurerm",
                "expressions": {
                  "customer_managed_key_id": {
                    "references": [
                      "local.base_key_id"
                    ]
                  },
                  "customer_managed_key_identity_id": {
                    "references": [
                      "local.base_kv_uai_id"
                    ]
                  },
                  "identity": [
                    {
                      "identity_ids": {
                        "references": [
                          "local.base_kv_uai_id"
                        ]
                      },
                      "type": {
                        "constant_value": "SystemAssigned, UserAssigned"
                      }
                    }
                  ],
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "managed_virtual_network_enabled": {
                    "references": [
                      "var.data_factory.legacy_adf",
                      "var.data_factory"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name"
                    ]
                  },
                  "public_network_enabled": {
                    "constant_value": false
                  },
                  "resource_group_name": {
                    "references": [
                      "var.data_factory.ud_resource_group",
                      "var.data_factory",
                      "azurerm_resource_group.ud_rgs",
                      "var.data_factory.ud_resource_group",
                      "var.data_factory",
                      "azurerm_resource_group.adf_rg[0].name",
                      "azurerm_resource_group.adf_rg[0]",
                      "azurerm_resource_group.adf_rg"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "local.adf_subnet_name"
                  ]
                }
              },
              {
                "address": "azurerm_data_factory_integration_runtime_azure.adf_runtime",
                "mode": "managed",
                "type": "azurerm_data_factory_integration_runtime_azure",
                "name": "adf_runtime",
                "provider_config_key": "azurerm",
                "expressions": {
                  "data_factory_id": {
                    "references": [
                      "azurerm_data_factory.adf[0].id",
                      "azurerm_data_factory.adf[0]",
                      "azurerm_data_factory.adf"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "constant_value": "integration-runtime-azure-managed-vnet"
                  },
                  "virtual_network_enabled": {
                    "constant_value": true
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.adf_subnet_name",
                    "var.data_factory.legacy_adf",
                    "var.data_factory"
                  ]
                }
              },
              {
                "address": "azurerm_data_factory_integration_runtime_azure_ssis.adf_ssis",
                "mode": "managed",
                "type": "azurerm_data_factory_integration_runtime_azure_ssis",
                "name": "adf_ssis",
                "provider_config_key": "azurerm",
                "expressions": {
                  "data_factory_id": {
                    "references": [
                      "azurerm_data_factory.adf[0].id",
                      "azurerm_data_factory.adf[0]",
                      "azurerm_data_factory.adf"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name"
                    ]
                  },
                  "node_size": {
                    "constant_value": "Standard_D8_v3"
                  },
                  "proxy": [
                    {
                      "self_hosted_integration_runtime_name": {
                        "references": [
                          "azurerm_data_factory_integration_runtime_self_hosted.adf_int_shr[0].name",
                          "azurerm_data_factory_integration_runtime_self_hosted.adf_int_shr[0]",
                          "azurerm_data_factory_integration_runtime_self_hosted.adf_int_shr"
                        ]
                      },
                      "staging_storage_linked_service_name": {
                        "references": [
                          "azurerm_data_factory_linked_service_azure_blob_storage.adf_lsabs[0].name",
                          "azurerm_data_factory_linked_service_azure_blob_storage.adf_lsabs[0]",
                          "azurerm_data_factory_linked_service_azure_blob_storage.adf_lsabs"
                        ]
                      }
                    }
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.adf_subnet_name",
                    "var.data_factory.legacy_adf",
                    "var.data_factory"
                  ]
                }
              },
              {
                "address": "azurerm_data_factory_integration_runtime_self_hosted.adf_int_shr",
                "mode": "managed",
                "type": "azurerm_data_factory_integration_runtime_self_hosted",
                "name": "adf_int_shr",
                "provider_config_key": "azurerm",
                "expressions": {
                  "data_factory_id": {
                    "references": [
                      "azurerm_data_factory.adf[0].id",
                      "azurerm_data_factory.adf[0]",
                      "azurerm_data_factory.adf"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.adf_subnet_name",
                    "var.data_factory.legacy_adf",
                    "var.data_factory"
                  ]
                }
              },
              {
                "address": "azurerm_data_factory_linked_service_azure_blob_storage.adf_lsabs",
                "mode": "managed",
                "type": "azurerm_data_factory_linked_service_azure_blob_storage",
                "name": "adf_lsabs",
                "provider_config_key": "azurerm",
                "expressions": {
                  "connection_string": {
                    "references": [
                      "azurerm_storage_account.adf_st[0].primary_connection_string",
                      "azurerm_storage_account.adf_st[0]",
                      "azurerm_storage_account.adf_st"
                    ]
                  },
                  "data_factory_id": {
                    "references": [
                      "azurerm_data_factory.adf[0].id",
                      "azurerm_data_factory.adf[0]",
                      "azurerm_data_factory.adf"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.adf_subnet_name",
                    "var.data_factory.legacy_adf",
                    "var.data_factory"
                  ]
                }
              },
              {
                "address": "azurerm_data_factory_linked_service_key_vault.adf_kv",
                "mode": "managed",
                "type": "azurerm_data_factory_linked_service_key_vault",
                "name": "adf_kv",
                "provider_config_key": "azurerm",
                "expressions": {
                  "data_factory_id": {
                    "references": [
                      "azurerm_data_factory.adf[0].id",
                      "azurerm_data_factory.adf[0]",
                      "azurerm_data_factory.adf"
                    ]
                  },
                  "key_vault_id": {
                    "references": [
                      "azurerm_key_vault.adf_keyvault[0].id",
                      "azurerm_key_vault.adf_keyvault[0]",
                      "azurerm_key_vault.adf_keyvault"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.random_kv_names",
                      "var.application_id",
                      "random_string.kvname.result",
                      "random_string.kvname",
                      "var.line_of_business",
                      "var.application_id",
                      "local.env_region"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.adf_subnet_name",
                    "var.data_factory.legacy_adf",
                    "var.data_factory"
                  ]
                }
              },
              {
                "address": "azurerm_data_factory_managed_private_endpoint.managed_pe",
                "mode": "managed",
                "type": "azurerm_data_factory_managed_private_endpoint",
                "name": "managed_pe",
                "provider_config_key": "azurerm",
                "expressions": {
                  "data_factory_id": {
                    "references": [
                      "azurerm_data_factory.adf[0].id",
                      "azurerm_data_factory.adf[0]",
                      "azurerm_data_factory.adf"
                    ]
                  },
                  "name": {
                    "references": [
                      "azurerm_storage_account.adf_st[0].name",
                      "azurerm_storage_account.adf_st[0]",
                      "azurerm_storage_account.adf_st",
                      "azurerm_data_factory.adf[0].name",
                      "azurerm_data_factory.adf[0]",
                      "azurerm_data_factory.adf"
                    ]
                  },
                  "subresource_name": {
                    "constant_value": "blob"
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_storage_account.adf_st[0].id",
                      "azurerm_storage_account.adf_st[0]",
                      "azurerm_storage_account.adf_st"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.adf_subnet_name",
                    "var.public_keyvaults",
                    "var.data_factory.legacy_adf",
                    "var.data_factory"
                  ]
                }
              },
              {
                "address": "azurerm_databricks_workspace.dbk",
                "mode": "managed",
                "type": "azurerm_databricks_workspace",
                "name": "dbk",
                "provider_config_key": "azurerm",
                "expressions": {
                  "custom_parameters": [
                    {
                      "no_public_ip": {
                        "constant_value": true
                      },
                      "private_subnet_name": {
                        "references": [
                          "azurerm_subnet.subnets",
                          "each.value.private_subnet_name",
                          "each.value"
                        ]
                      },
                      "private_subnet_network_security_group_association_id": {
                        "references": [
                          "azurerm_network_security_group.network_security_group[0].id",
                          "azurerm_network_security_group.network_security_group[0]",
                          "azurerm_network_security_group.network_security_group"
                        ]
                      },
                      "public_subnet_name": {
                        "references": [
                          "azurerm_subnet.subnets",
                          "each.value.public_subnet_name",
                          "each.value"
                        ]
                      },
                      "public_subnet_network_security_group_association_id": {
                        "references": [
                          "azurerm_network_security_group.network_security_group[0].id",
                          "azurerm_network_security_group.network_security_group[0]",
                          "azurerm_network_security_group.network_security_group"
                        ]
                      },
                      "storage_account_name": {
                        "references": [
                          "each.value.import_dbk",
                          "each.value",
                          "each.key",
                          "var.line_of_business",
                          "var.application_id",
                          "local.env_region",
                          "each.value.import_dbk_storage_account_name",
                          "each.value"
                        ]
                      },
                      "storage_account_sku_name": {
                        "references": [
                          "each.value.storage_account_sku_name",
                          "each.value"
                        ]
                      },
                      "virtual_network_id": {
                        "references": [
                          "local.vnet_id"
                        ]
                      }
                    }
                  ],
                  "customer_managed_key_enabled": {
                    "references": [
                      "each.value.sku",
                      "each.value"
                    ]
                  },
                  "infrastructure_encryption_enabled": {
                    "references": [
                      "each.value.sku",
                      "each.value"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "managed_disk_cmk_key_vault_key_id": {
                    "references": [
                      "each.value.sku",
                      "each.value",
                      "local.base_key_id"
                    ]
                  },
                  "managed_resource_group_name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "local.env_region",
                      "each.key"
                    ]
                  },
                  "managed_services_cmk_key_vault_key_id": {
                    "references": [
                      "each.value.sku",
                      "each.value",
                      "local.base_key_id"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.import_dbk",
                      "each.value",
                      "var.line_of_business",
                      "var.application_id",
                      "local.env_region",
                      "each.key",
                      "each.value.import_dbk_name",
                      "each.value"
                    ]
                  },
                  "network_security_group_rules_required": {
                    "constant_value": "NoAzureDatabricksRules"
                  },
                  "public_network_access_enabled": {
                    "constant_value": false
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value"
                    ]
                  },
                  "sku": {
                    "references": [
                      "each.value.sku",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.databricks"
                  ]
                },
                "depends_on": [
                  "azurerm_network_security_rule.network_security_rules",
                  "azurerm_role_assignment.base_kv_key_access_admin_role_dbk"
                ]
              },
              {
                "address": "azurerm_disk_encryption_set.aks_disk_encryption_set",
                "mode": "managed",
                "type": "azurerm_disk_encryption_set",
                "name": "aks_disk_encryption_set",
                "provider_config_key": "azurerm",
                "expressions": {
                  "identity": [
                    {
                      "type": {
                        "constant_value": "SystemAssigned"
                      }
                    }
                  ],
                  "key_vault_key_id": {
                    "references": [
                      "azurerm_key_vault_key.aks_key_vault_key[0].id",
                      "azurerm_key_vault_key.aks_key_vault_key[0]",
                      "azurerm_key_vault_key.aks_key_vault_key"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "local.micro_suffix"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.aks_rg[0].name",
                      "local.aks_rg[0]",
                      "local.aks_rg"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name"
                  ]
                },
                "depends_on": [
                  "azurerm_private_endpoint.aks_de_keyvault_pep",
                  "local.keys_depend_on"
                ]
              },
              {
                "address": "azurerm_disk_encryption_set.base_kv_custom_des",
                "mode": "managed",
                "type": "azurerm_disk_encryption_set",
                "name": "base_kv_custom_des",
                "provider_config_key": "azurerm",
                "expressions": {
                  "identity": [
                    {
                      "type": {
                        "constant_value": "SystemAssigned"
                      }
                    }
                  ],
                  "key_vault_key_id": {
                    "references": [
                      "azurerm_key_vault_key.base_custom_kv_key[0].id",
                      "azurerm_key_vault_key.base_custom_kv_key[0]",
                      "azurerm_key_vault_key.base_custom_kv_key"
                    ]
                  },
                  "location": {
                    "references": [
                      "azurerm_resource_group.secr_rg[0].location",
                      "azurerm_resource_group.secr_rg[0]",
                      "azurerm_resource_group.secr_rg"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.application_id",
                      "var.application_id",
                      "local.host_rg_suffix",
                      "var.location",
                      "var.environment"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.secr_rg[0].name",
                      "azurerm_resource_group.secr_rg[0]",
                      "azurerm_resource_group.secr_rg"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.use_custom_key_vault",
                    "var.is_hub_staging"
                  ]
                },
                "depends_on": [
                  "azurerm_private_endpoint.base_custom_kv_pes",
                  "local.keys_depend_on"
                ]
              },
              {
                "address": "azurerm_disk_encryption_set.base_kv_des",
                "mode": "managed",
                "type": "azurerm_disk_encryption_set",
                "name": "base_kv_des",
                "provider_config_key": "azurerm",
                "expressions": {
                  "identity": [
                    {
                      "type": {
                        "constant_value": "SystemAssigned"
                      }
                    }
                  ],
                  "key_vault_key_id": {
                    "references": [
                      "local.base_key_id"
                    ]
                  },
                  "location": {
                    "references": [
                      "azurerm_resource_group.secr_rg[0].location",
                      "azurerm_resource_group.secr_rg[0]",
                      "azurerm_resource_group.secr_rg"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.application_id",
                      "var.application_id",
                      "local.host_rg_suffix",
                      "var.location",
                      "var.environment"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.secr_rg[0].name",
                      "azurerm_resource_group.secr_rg[0]",
                      "azurerm_resource_group.secr_rg"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.is_spoke",
                    "var.is_hub_staging"
                  ]
                },
                "depends_on": [
                  "azurerm_private_endpoint.base_kv_pep",
                  "local.keys_depend_on"
                ]
              },
              {
                "address": "azurerm_disk_encryption_set.vm_disk_encryption_set",
                "mode": "managed",
                "type": "azurerm_disk_encryption_set",
                "name": "vm_disk_encryption_set",
                "provider_config_key": "azurerm",
                "expressions": {
                  "identity": [
                    {
                      "identity_ids": {
                        "references": [
                          "var.external_vm_settings.subnet_name",
                          "var.external_vm_settings",
                          "azurerm_user_assigned_identity.vm_kv_uai[0].id",
                          "azurerm_user_assigned_identity.vm_kv_uai[0]",
                          "azurerm_user_assigned_identity.vm_kv_uai",
                          "local.base_kv_uai_id"
                        ]
                      },
                      "type": {
                        "constant_value": "SystemAssigned, UserAssigned"
                      }
                    }
                  ],
                  "key_vault_key_id": {
                    "references": [
                      "var.external_vm_settings.subnet_name",
                      "var.external_vm_settings",
                      "azurerm_key_vault.vm_kv[0].id",
                      "azurerm_key_vault.vm_kv[0]",
                      "azurerm_key_vault.vm_kv",
                      "local.base_key_id"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.external_vm_settings.vm_rg",
                      "var.external_vm_settings",
                      "var.external_vm_settings.vm_rg",
                      "var.external_vm_settings",
                      "local.secr_rg_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.vm_list",
                    "local.is_spoke",
                    "local.micro_call"
                  ]
                },
                "depends_on": [
                  "azurerm_private_endpoint.base_kv_pep",
                  "azurerm_private_endpoint.vm_kv_pep",
                  "local.keys_depend_on"
                ]
              },
              {
                "address": "azurerm_eventhub.ehub_instance",
                "mode": "managed",
                "type": "azurerm_eventhub",
                "name": "ehub_instance",
                "provider_config_key": "azurerm",
                "expressions": {
                  "message_retention": {
                    "references": [
                      "each.value.message_retention",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "namespace_name": {
                    "references": [
                      "data.azurerm_eventhub_namespace.ehub_namespace",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "partition_count": {
                    "references": [
                      "each.value.partition_count",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "data.azurerm_eventhub_namespace.ehub_namespace",
                      "each.value.name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.eventhub"
                  ]
                },
                "depends_on": [
                  "azurerm_eventhub_namespace_customer_managed_key.ehub_cmk",
                  "azurerm_eventhub_namespace.eventhub_namespace"
                ]
              },
              {
                "address": "azurerm_eventhub_authorization_rule.ehub_instance_secured_access_policy",
                "mode": "managed",
                "type": "azurerm_eventhub_authorization_rule",
                "name": "ehub_instance_secured_access_policy",
                "provider_config_key": "azurerm",
                "expressions": {
                  "eventhub_name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "listen": {
                    "constant_value": true
                  },
                  "manage": {
                    "constant_value": true
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "namespace_name": {
                    "references": [
                      "each.value.namespace_name",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.resource_group_name",
                      "each.value"
                    ]
                  },
                  "send": {
                    "constant_value": true
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "azurerm_eventhub.ehub_instance",
                    "var.guardium_enabled"
                  ]
                }
              },
              {
                "address": "azurerm_eventhub_consumer_group.ehub_cg",
                "mode": "managed",
                "type": "azurerm_eventhub_consumer_group",
                "name": "ehub_cg",
                "provider_config_key": "azurerm",
                "expressions": {
                  "eventhub_name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "namespace_name": {
                    "references": [
                      "each.value.namespace_name",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.resource_group_name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "azurerm_eventhub.ehub_instance"
                  ]
                }
              },
              {
                "address": "azurerm_eventhub_namespace.eventhub_namespace",
                "mode": "managed",
                "type": "azurerm_eventhub_namespace",
                "name": "eventhub_namespace",
                "provider_config_key": "azurerm",
                "expressions": {
                  "auto_inflate_enabled": {
                    "references": [
                      "each.value.auto_inflate_enabled",
                      "each.value"
                    ]
                  },
                  "capacity": {
                    "references": [
                      "each.value.capacity",
                      "each.value"
                    ]
                  },
                  "identity": [
                    {
                      "type": {
                        "constant_value": "SystemAssigned"
                      }
                    }
                  ],
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "minimum_tls_version": {
                    "constant_value": 1.2
                  },
                  "name": {
                    "references": [
                      "local.eventhub_ns_prefix",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "network_rulesets": {
                    "references": [
                      "azurerm_subnet.subnets",
                      "local.ehub_subnet_name"
                    ]
                  },
                  "public_network_access_enabled": {
                    "constant_value": false
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.ehub_rg[0].name",
                      "azurerm_resource_group.ehub_rg[0]",
                      "azurerm_resource_group.ehub_rg"
                    ]
                  },
                  "sku": {
                    "references": [
                      "each.value.sku",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags",
                      "local.guardium_tag"
                    ]
                  },
                  "zone_redundant": {
                    "references": [
                      "each.value.zone_redundant",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.eventhub_namespace"
                  ]
                },
                "depends_on": [
                  "azurerm_resource_group.ehub_rg"
                ]
              },
              {
                "address": "azurerm_eventhub_namespace_authorization_rule.namespace_auth",
                "mode": "managed",
                "type": "azurerm_eventhub_namespace_authorization_rule",
                "name": "namespace_auth",
                "provider_config_key": "azurerm",
                "expressions": {
                  "listen": {
                    "constant_value": true
                  },
                  "manage": {
                    "constant_value": true
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "namespace_name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.ehub_rg[0].name",
                      "azurerm_resource_group.ehub_rg[0]",
                      "azurerm_resource_group.ehub_rg"
                    ]
                  },
                  "send": {
                    "constant_value": true
                  }
                },
                "schema_version": 2,
                "for_each_expression": {
                  "references": [
                    "azurerm_eventhub_namespace.eventhub_namespace",
                    "var.guardium_enabled"
                  ]
                }
              },
              {
                "address": "azurerm_eventhub_namespace_customer_managed_key.ehub_cmk",
                "mode": "managed",
                "type": "azurerm_eventhub_namespace_customer_managed_key",
                "name": "ehub_cmk",
                "provider_config_key": "azurerm",
                "expressions": {
                  "eventhub_namespace_id": {
                    "references": [
                      "each.value.id",
                      "each.value"
                    ]
                  },
                  "key_vault_key_ids": {
                    "references": [
                      "azurerm_key_vault_key.base_kv_key[0].id",
                      "azurerm_key_vault_key.base_kv_key[0]",
                      "azurerm_key_vault_key.base_kv_key"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "azurerm_eventhub_namespace.eventhub_namespace"
                  ]
                },
                "depends_on": [
                  "azurerm_role_assignment.ehubns_kv_cmk_access"
                ]
              },
              {
                "address": "azurerm_federated_identity_credential.aks_mi_federated_credential",
                "mode": "managed",
                "type": "azurerm_federated_identity_credential",
                "name": "aks_mi_federated_credential",
                "provider_config_key": "azurerm",
                "expressions": {
                  "audience": {
                    "constant_value": [
                      "api://AzureADTokenExchange"
                    ]
                  },
                  "issuer": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].oidc_issuer_url",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "parent_id": {
                    "references": [
                      "each.value.user_defined_managed_identity_name",
                      "each.value",
                      "azurerm_user_assigned_identity.ud_managed_identity",
                      "each.value.user_defined_managed_identity_name",
                      "each.value",
                      "data.azurerm_resources.federated_credential_managed_identities",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.user_defined_managed_identity_name",
                      "each.value",
                      "azurerm_user_assigned_identity.ud_managed_identity",
                      "each.value.user_defined_managed_identity_name",
                      "each.value",
                      "each.value.external_managed_identity_resource_group",
                      "each.value"
                    ]
                  },
                  "subject": {
                    "references": [
                      "each.value.kubernetes_namespace",
                      "each.value",
                      "each.value.kubernetes_service_account_name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.aks_federated_credentials"
                  ]
                },
                "depends_on": [
                  "azurerm_kubernetes_cluster.aks_cluster"
                ]
              },
              {
                "address": "azurerm_federated_identity_credential.external_mi_federated_credential",
                "mode": "managed",
                "type": "azurerm_federated_identity_credential",
                "name": "external_mi_federated_credential",
                "provider_config_key": "azurerm",
                "expressions": {
                  "audience": {
                    "constant_value": [
                      "api://AzureADTokenExchange"
                    ]
                  },
                  "issuer": {
                    "references": [
                      "each.value.issuer",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "parent_id": {
                    "references": [
                      "azurerm_user_assigned_identity.ud_managed_identity",
                      "each.value.user_defined_managed_identity_name",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_user_assigned_identity.ud_managed_identity",
                      "each.value.user_defined_managed_identity_name",
                      "each.value"
                    ]
                  },
                  "subject": {
                    "references": [
                      "each.value.subject",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.external_federated_credentials"
                  ]
                },
                "depends_on": [
                  "azurerm_user_assigned_identity.ud_managed_identity"
                ]
              },
              {
                "address": "azurerm_federated_identity_credential.gha_mi_federated_credential",
                "mode": "managed",
                "type": "azurerm_federated_identity_credential",
                "name": "gha_mi_federated_credential",
                "provider_config_key": "azurerm",
                "expressions": {
                  "audience": {
                    "constant_value": [
                      "api://AzureADTokenExchange"
                    ]
                  },
                  "issuer": {
                    "constant_value": "https://token.actions.githubusercontent.com"
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "parent_id": {
                    "references": [
                      "azurerm_user_assigned_identity.ud_managed_identity",
                      "each.value.user_defined_managed_identity_name",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_user_assigned_identity.ud_managed_identity",
                      "each.value.user_defined_managed_identity_name",
                      "each.value"
                    ]
                  },
                  "subject": {
                    "references": [
                      "each.value.subject",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.gha_fc_with_subject"
                  ]
                },
                "depends_on": [
                  "azurerm_user_assigned_identity.ud_managed_identity"
                ]
              },
              {
                "address": "azurerm_key_vault.adf_keyvault",
                "mode": "managed",
                "type": "azurerm_key_vault",
                "name": "adf_keyvault",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enable_rbac_authorization": {
                    "constant_value": true
                  },
                  "enabled_for_disk_encryption": {
                    "constant_value": true
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.random_kv_names",
                      "var.application_id",
                      "random_string.kvname.result",
                      "random_string.kvname",
                      "var.line_of_business",
                      "var.application_id",
                      "local.env_region"
                    ]
                  },
                  "network_acls": [
                    {
                      "bypass": {
                        "constant_value": "AzureServices"
                      },
                      "default_action": {
                        "references": [
                          "var.public_keyvaults"
                        ]
                      }
                    }
                  ],
                  "public_network_access_enabled": {
                    "references": [
                      "var.public_keyvaults"
                    ]
                  },
                  "purge_protection_enabled": {
                    "constant_value": true
                  },
                  "resource_group_name": {
                    "references": [
                      "var.data_factory.ud_resource_group",
                      "var.data_factory",
                      "azurerm_resource_group.ud_rgs",
                      "var.data_factory.ud_resource_group",
                      "var.data_factory",
                      "azurerm_resource_group.adf_rg[0].name",
                      "azurerm_resource_group.adf_rg[0]",
                      "azurerm_resource_group.adf_rg"
                    ]
                  },
                  "sku_name": {
                    "constant_value": "premium"
                  },
                  "soft_delete_retention_days": {
                    "constant_value": 7
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  },
                  "tenant_id": {
                    "references": [
                      "data.azurerm_client_config.current.tenant_id",
                      "data.azurerm_client_config.current"
                    ]
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "local.adf_subnet_name",
                    "var.data_factory.legacy_adf",
                    "var.data_factory"
                  ]
                },
                "depends_on": [
                  "local.peering_resources"
                ]
              },
              {
                "address": "azurerm_key_vault.ai_kv",
                "mode": "managed",
                "type": "azurerm_key_vault",
                "name": "ai_kv",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enable_rbac_authorization": {
                    "constant_value": true
                  },
                  "enabled_for_disk_encryption": {
                    "constant_value": true
                  },
                  "location": {
                    "references": [
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.random_kv_names",
                      "local.ai_locations_needing_keys",
                      "each.value",
                      "var.line_of_business",
                      "var.application_id",
                      "random_string.kvname.result",
                      "random_string.kvname",
                      "var.random_kv_names",
                      "local.ai_location_name_code_map",
                      "each.value",
                      "var.application_id",
                      "random_string.kvname.result",
                      "random_string.kvname",
                      "var.line_of_business",
                      "var.application_id",
                      "local.env_region",
                      "local.ai_location_name_code_map",
                      "each.value"
                    ]
                  },
                  "network_acls": [
                    {
                      "bypass": {
                        "constant_value": "AzureServices"
                      },
                      "default_action": {
                        "references": [
                          "var.public_keyvaults"
                        ]
                      }
                    }
                  ],
                  "public_network_access_enabled": {
                    "references": [
                      "var.public_keyvaults"
                    ]
                  },
                  "purge_protection_enabled": {
                    "constant_value": true
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.secr_rg[0].name",
                      "azurerm_resource_group.secr_rg[0]",
                      "azurerm_resource_group.secr_rg"
                    ]
                  },
                  "sku_name": {
                    "constant_value": "premium"
                  },
                  "soft_delete_retention_days": {
                    "constant_value": 7
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  },
                  "tenant_id": {
                    "references": [
                      "data.azurerm_client_config.current.tenant_id",
                      "data.azurerm_client_config.current"
                    ]
                  }
                },
                "schema_version": 2,
                "for_each_expression": {
                  "references": [
                    "local.ai_locations_needing_keys"
                  ]
                },
                "depends_on": [
                  "local.peering_resources"
                ]
              },
              {
                "address": "azurerm_key_vault.aks_de_keyvault",
                "mode": "managed",
                "type": "azurerm_key_vault",
                "name": "aks_de_keyvault",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enable_rbac_authorization": {
                    "constant_value": true
                  },
                  "enabled_for_disk_encryption": {
                    "constant_value": true
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.random_kv_names",
                      "var.application_id",
                      "random_string.kvname.result",
                      "random_string.kvname",
                      "var.line_of_business",
                      "var.application_id",
                      "local.env_region"
                    ]
                  },
                  "network_acls": [
                    {
                      "bypass": {
                        "constant_value": "AzureServices"
                      },
                      "default_action": {
                        "references": [
                          "var.public_keyvaults"
                        ]
                      }
                    }
                  ],
                  "public_network_access_enabled": {
                    "references": [
                      "var.public_keyvaults"
                    ]
                  },
                  "purge_protection_enabled": {
                    "constant_value": true
                  },
                  "resource_group_name": {
                    "references": [
                      "local.aks_rg[0].name",
                      "local.aks_rg[0]",
                      "local.aks_rg"
                    ]
                  },
                  "sku_name": {
                    "constant_value": "premium"
                  },
                  "soft_delete_retention_days": {
                    "constant_value": 7
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  },
                  "tenant_id": {
                    "references": [
                      "data.azurerm_client_config.current.tenant_id",
                      "data.azurerm_client_config.current"
                    ]
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name"
                  ]
                },
                "depends_on": [
                  "local.peering_resources"
                ]
              },
              {
                "address": "azurerm_key_vault.aks_int_keyvault",
                "mode": "managed",
                "type": "azurerm_key_vault",
                "name": "aks_int_keyvault",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enable_rbac_authorization": {
                    "constant_value": true
                  },
                  "enabled_for_disk_encryption": {
                    "constant_value": true
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.random_kv_names",
                      "var.application_id",
                      "random_string.kvname.result",
                      "random_string.kvname",
                      "var.line_of_business",
                      "var.application_id",
                      "local.env_region"
                    ]
                  },
                  "network_acls": [
                    {
                      "bypass": {
                        "constant_value": "AzureServices"
                      },
                      "default_action": {
                        "references": [
                          "var.public_keyvaults"
                        ]
                      }
                    }
                  ],
                  "public_network_access_enabled": {
                    "references": [
                      "var.public_keyvaults"
                    ]
                  },
                  "purge_protection_enabled": {
                    "constant_value": true
                  },
                  "resource_group_name": {
                    "references": [
                      "local.aks_rg[0].name",
                      "local.aks_rg[0]",
                      "local.aks_rg"
                    ]
                  },
                  "sku_name": {
                    "constant_value": "premium"
                  },
                  "soft_delete_retention_days": {
                    "constant_value": 7
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  },
                  "tenant_id": {
                    "references": [
                      "data.azurerm_client_config.current.tenant_id",
                      "data.azurerm_client_config.current"
                    ]
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.aks_cluster.key_vault_secrets_provider",
                    "var.aks_cluster"
                  ]
                },
                "depends_on": [
                  "local.peering_resources"
                ]
              },
              {
                "address": "azurerm_key_vault.apim_key_vaults",
                "mode": "managed",
                "type": "azurerm_key_vault",
                "name": "apim_key_vaults",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enable_rbac_authorization": {
                    "constant_value": true
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.random_kv_names",
                      "var.application_id",
                      "each.key",
                      "random_string.kvname.result",
                      "random_string.kvname",
                      "var.line_of_business",
                      "var.application_id",
                      "local.env_region",
                      "each.key"
                    ]
                  },
                  "network_acls": [
                    {
                      "bypass": {
                        "constant_value": "AzureServices"
                      },
                      "default_action": {
                        "references": [
                          "var.public_keyvaults"
                        ]
                      }
                    }
                  ],
                  "public_network_access_enabled": {
                    "constant_value": false
                  },
                  "purge_protection_enabled": {
                    "constant_value": true
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value"
                    ]
                  },
                  "sku_name": {
                    "references": [
                      "var.legacy_standard_kv",
                      "each.value.sku_name",
                      "each.value"
                    ]
                  },
                  "soft_delete_retention_days": {
                    "constant_value": 7
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  },
                  "tenant_id": {
                    "references": [
                      "data.azurerm_client_config.current.tenant_id",
                      "data.azurerm_client_config.current"
                    ]
                  }
                },
                "schema_version": 2,
                "for_each_expression": {
                  "references": [
                    "var.api_management"
                  ]
                }
              },
              {
                "address": "azurerm_key_vault.base_custom_kv",
                "mode": "managed",
                "type": "azurerm_key_vault",
                "name": "base_custom_kv",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enable_rbac_authorization": {
                    "constant_value": true
                  },
                  "enabled_for_disk_encryption": {
                    "constant_value": true
                  },
                  "location": {
                    "references": [
                      "azurerm_resource_group.secr_rg[0].location",
                      "azurerm_resource_group.secr_rg[0]",
                      "azurerm_resource_group.secr_rg"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.application_id",
                      "random_string.kvname.result",
                      "random_string.kvname"
                    ]
                  },
                  "network_acls": [
                    {
                      "bypass": {
                        "constant_value": "AzureServices"
                      },
                      "default_action": {
                        "references": [
                          "var.public_keyvaults"
                        ]
                      }
                    }
                  ],
                  "public_network_access_enabled": {
                    "references": [
                      "var.public_keyvaults"
                    ]
                  },
                  "purge_protection_enabled": {
                    "constant_value": true
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.secr_rg[0].name",
                      "azurerm_resource_group.secr_rg[0]",
                      "azurerm_resource_group.secr_rg"
                    ]
                  },
                  "sku_name": {
                    "constant_value": "premium"
                  },
                  "soft_delete_retention_days": {
                    "constant_value": 90
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  },
                  "tenant_id": {
                    "references": [
                      "data.azurerm_client_config.current.tenant_id",
                      "data.azurerm_client_config.current"
                    ]
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "local.use_custom_key_vault",
                    "local.build_base_resources"
                  ]
                },
                "depends_on": [
                  "local.peering_resources",
                  "azurerm_key_vault.base_kv"
                ]
              },
              {
                "address": "azurerm_key_vault.base_kv",
                "mode": "managed",
                "type": "azurerm_key_vault",
                "name": "base_kv",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enable_rbac_authorization": {
                    "constant_value": true
                  },
                  "enabled_for_disk_encryption": {
                    "constant_value": true
                  },
                  "location": {
                    "references": [
                      "azurerm_resource_group.secr_rg[0].location",
                      "azurerm_resource_group.secr_rg[0]",
                      "azurerm_resource_group.secr_rg"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.random_kv_names",
                      "var.application_id",
                      "random_string.kvname.result",
                      "random_string.kvname",
                      "var.line_of_business",
                      "var.application_id",
                      "local.env_region"
                    ]
                  },
                  "network_acls": [
                    {
                      "bypass": {
                        "constant_value": "AzureServices"
                      },
                      "default_action": {
                        "references": [
                          "var.public_keyvaults"
                        ]
                      }
                    }
                  ],
                  "public_network_access_enabled": {
                    "references": [
                      "var.public_keyvaults"
                    ]
                  },
                  "purge_protection_enabled": {
                    "constant_value": true
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.secr_rg[0].name",
                      "azurerm_resource_group.secr_rg[0]",
                      "azurerm_resource_group.secr_rg"
                    ]
                  },
                  "sku_name": {
                    "constant_value": "premium"
                  },
                  "soft_delete_retention_days": {
                    "constant_value": 90
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  },
                  "tenant_id": {
                    "references": [
                      "data.azurerm_client_config.current.tenant_id",
                      "data.azurerm_client_config.current"
                    ]
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "local.is_spoke",
                    "local.build_base_resources"
                  ]
                },
                "depends_on": [
                  "local.peering_resources"
                ]
              },
              {
                "address": "azurerm_key_vault.cog_kv",
                "mode": "managed",
                "type": "azurerm_key_vault",
                "name": "cog_kv",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enable_rbac_authorization": {
                    "constant_value": true
                  },
                  "enabled_for_disk_encryption": {
                    "constant_value": true
                  },
                  "location": {
                    "references": [
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.random_kv_names",
                      "local.locations_needing_keys",
                      "each.value",
                      "var.line_of_business",
                      "var.application_id",
                      "random_string.kvname.result",
                      "random_string.kvname",
                      "var.random_kv_names",
                      "local.location_name_code_map",
                      "each.value",
                      "var.application_id",
                      "random_string.kvname.result",
                      "random_string.kvname",
                      "var.line_of_business",
                      "var.application_id",
                      "local.env_region",
                      "local.location_name_code_map",
                      "each.value"
                    ]
                  },
                  "network_acls": [
                    {
                      "bypass": {
                        "constant_value": "AzureServices"
                      },
                      "default_action": {
                        "references": [
                          "var.public_keyvaults"
                        ]
                      }
                    }
                  ],
                  "public_network_access_enabled": {
                    "references": [
                      "var.public_keyvaults"
                    ]
                  },
                  "purge_protection_enabled": {
                    "constant_value": true
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.secr_rg[0].name",
                      "azurerm_resource_group.secr_rg[0]",
                      "azurerm_resource_group.secr_rg"
                    ]
                  },
                  "sku_name": {
                    "constant_value": "premium"
                  },
                  "soft_delete_retention_days": {
                    "constant_value": 7
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  },
                  "tenant_id": {
                    "references": [
                      "data.azurerm_client_config.current.tenant_id",
                      "data.azurerm_client_config.current"
                    ]
                  }
                },
                "schema_version": 2,
                "for_each_expression": {
                  "references": [
                    "local.locations_needing_keys"
                  ]
                },
                "depends_on": [
                  "local.peering_resources"
                ]
              },
              {
                "address": "azurerm_key_vault.ud_key_vaults",
                "mode": "managed",
                "type": "azurerm_key_vault",
                "name": "ud_key_vaults",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enable_rbac_authorization": {
                    "constant_value": true
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.random_kv_names",
                      "var.application_id",
                      "each.key",
                      "random_string.kvname.result",
                      "random_string.kvname",
                      "var.line_of_business",
                      "var.application_id",
                      "local.env_region",
                      "each.key"
                    ]
                  },
                  "network_acls": [
                    {
                      "bypass": {
                        "constant_value": "AzureServices"
                      },
                      "default_action": {
                        "references": [
                          "var.public_keyvaults"
                        ]
                      }
                    }
                  ],
                  "public_network_access_enabled": {
                    "constant_value": false
                  },
                  "purge_protection_enabled": {
                    "references": [
                      "each.value.purge_protection_enabled",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.resource_group_name",
                      "each.value",
                      "each.value.resource_group_name",
                      "each.value",
                      "each.value.resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.resource_group",
                      "each.value",
                      "local.secr_rg_name"
                    ]
                  },
                  "sku_name": {
                    "references": [
                      "var.legacy_standard_kv",
                      "each.value.sku_name",
                      "each.value"
                    ]
                  },
                  "soft_delete_retention_days": {
                    "references": [
                      "each.value.soft_delete_retention_days",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  },
                  "tenant_id": {
                    "references": [
                      "data.azurerm_client_config.current.tenant_id",
                      "data.azurerm_client_config.current"
                    ]
                  }
                },
                "schema_version": 2,
                "for_each_expression": {
                  "references": [
                    "var.key_vaults"
                  ]
                },
                "depends_on": [
                  "local.peering_resources"
                ]
              },
              {
                "address": "azurerm_key_vault.vm_kv",
                "mode": "managed",
                "type": "azurerm_key_vault",
                "name": "vm_kv",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enable_rbac_authorization": {
                    "constant_value": true
                  },
                  "enabled_for_disk_encryption": {
                    "constant_value": true
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.application_id",
                      "random_string.kvname.result",
                      "random_string.kvname"
                    ]
                  },
                  "network_acls": [
                    {
                      "bypass": {
                        "constant_value": "AzureServices"
                      },
                      "default_action": {
                        "references": [
                          "var.public_keyvaults"
                        ]
                      }
                    }
                  ],
                  "public_network_access_enabled": {
                    "references": [
                      "var.public_keyvaults"
                    ]
                  },
                  "purge_protection_enabled": {
                    "constant_value": true
                  },
                  "resource_group_name": {
                    "references": [
                      "data.azurerm_resource_group.vm_rg[0].name",
                      "data.azurerm_resource_group.vm_rg[0]",
                      "data.azurerm_resource_group.vm_rg",
                      "azurerm_resource_group.ud_rgs",
                      "var.external_vm_settings.vm_rg",
                      "var.external_vm_settings"
                    ]
                  },
                  "sku_name": {
                    "constant_value": "premium"
                  },
                  "soft_delete_retention_days": {
                    "constant_value": 90
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  },
                  "tenant_id": {
                    "references": [
                      "data.azurerm_client_config.current.tenant_id",
                      "data.azurerm_client_config.current"
                    ]
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "var.external_vm_settings.subnet_name",
                    "var.external_vm_settings"
                  ]
                }
              },
              {
                "address": "azurerm_key_vault_key.ai_kv_key",
                "mode": "managed",
                "type": "azurerm_key_vault_key",
                "name": "ai_kv_key",
                "provider_config_key": "azurerm",
                "expressions": {
                  "expiration_date": {},
                  "key_opts": {
                    "constant_value": [
                      "decrypt",
                      "encrypt",
                      "unwrapKey",
                      "wrapKey"
                    ]
                  },
                  "key_size": {
                    "constant_value": 2048
                  },
                  "key_type": {
                    "constant_value": "RSA-HSM"
                  },
                  "key_vault_id": {
                    "references": [
                      "azurerm_key_vault.ai_kv",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.random_kv_names",
                      "var.application_id",
                      "var.location",
                      "var.environment",
                      "random_string.kvname.result",
                      "random_string.kvname",
                      "var.application_id",
                      "var.location",
                      "var.environment",
                      "local.ai_location_name_code_map",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.ai_locations_needing_keys"
                  ]
                },
                "depends_on": [
                  "azurerm_private_endpoint.ai_kv_peps",
                  "local.keys_depend_on"
                ]
              },
              {
                "address": "azurerm_key_vault_key.aks_key_vault_key",
                "mode": "managed",
                "type": "azurerm_key_vault_key",
                "name": "aks_key_vault_key",
                "provider_config_key": "azurerm",
                "expressions": {
                  "key_opts": {
                    "constant_value": [
                      "decrypt",
                      "encrypt",
                      "sign",
                      "unwrapKey",
                      "verify",
                      "wrapKey"
                    ]
                  },
                  "key_size": {
                    "constant_value": 2048
                  },
                  "key_type": {
                    "constant_value": "RSA-HSM"
                  },
                  "key_vault_id": {
                    "references": [
                      "azurerm_key_vault.aks_de_keyvault[0].id",
                      "azurerm_key_vault.aks_de_keyvault[0]",
                      "azurerm_key_vault.aks_de_keyvault"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.random_kv_names",
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "random_string.kvname.result",
                      "random_string.kvname",
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name"
                  ]
                },
                "depends_on": [
                  "azurerm_private_endpoint.aks_de_keyvault_pep",
                  "local.keys_depend_on"
                ]
              },
              {
                "address": "azurerm_key_vault_key.base_custom_kv_key",
                "mode": "managed",
                "type": "azurerm_key_vault_key",
                "name": "base_custom_kv_key",
                "provider_config_key": "azurerm",
                "expressions": {
                  "key_opts": {
                    "constant_value": [
                      "decrypt",
                      "encrypt",
                      "unwrapKey",
                      "wrapKey"
                    ]
                  },
                  "key_size": {
                    "constant_value": 2048
                  },
                  "key_type": {
                    "constant_value": "RSA-HSM"
                  },
                  "key_vault_id": {
                    "references": [
                      "local.custom_base_key_vault_id"
                    ]
                  },
                  "name": {
                    "references": [
                      "random_string.kvname.result",
                      "random_string.kvname"
                    ]
                  },
                  "rotation_policy": [
                    {
                      "automatic": [
                        {
                          "time_after_creation": {
                            "constant_value": "P1Y"
                          }
                        }
                      ]
                    }
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.use_custom_key_vault",
                    "var.is_hub_staging"
                  ]
                },
                "depends_on": [
                  "azurerm_private_endpoint.base_custom_kv_pes",
                  "local.keys_depend_on",
                  "azurerm_key_vault.base_custom_kv"
                ]
              },
              {
                "address": "azurerm_key_vault_key.base_kv_key",
                "mode": "managed",
                "type": "azurerm_key_vault_key",
                "name": "base_kv_key",
                "provider_config_key": "azurerm",
                "expressions": {
                  "expiration_date": {
                    "constant_value": null
                  },
                  "key_opts": {
                    "constant_value": [
                      "decrypt",
                      "encrypt",
                      "unwrapKey",
                      "wrapKey"
                    ]
                  },
                  "key_size": {
                    "constant_value": 2048
                  },
                  "key_type": {
                    "constant_value": "RSA-HSM"
                  },
                  "key_vault_id": {
                    "references": [
                      "local.base_kv_id"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.random_kv_names",
                      "var.application_id",
                      "var.location",
                      "var.environment",
                      "random_string.kvname.result",
                      "random_string.kvname",
                      "var.application_id",
                      "var.location",
                      "var.environment"
                    ]
                  },
                  "rotation_policy": [
                    {
                      "automatic": [
                        {
                          "time_after_creation": {
                            "constant_value": "P1Y"
                          }
                        }
                      ]
                    }
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.is_spoke",
                    "var.is_hub_staging"
                  ]
                },
                "depends_on": [
                  "local.keys_depend_on"
                ]
              },
              {
                "address": "azurerm_key_vault_key.cog_kv_key",
                "mode": "managed",
                "type": "azurerm_key_vault_key",
                "name": "cog_kv_key",
                "provider_config_key": "azurerm",
                "expressions": {
                  "expiration_date": {},
                  "key_opts": {
                    "constant_value": [
                      "decrypt",
                      "encrypt",
                      "unwrapKey",
                      "wrapKey"
                    ]
                  },
                  "key_size": {
                    "constant_value": 2048
                  },
                  "key_type": {
                    "constant_value": "RSA-HSM"
                  },
                  "key_vault_id": {
                    "references": [
                      "azurerm_key_vault.cog_kv",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.random_kv_names",
                      "var.application_id",
                      "var.location",
                      "var.environment",
                      "random_string.kvname.result",
                      "random_string.kvname",
                      "var.application_id",
                      "var.location",
                      "var.environment",
                      "local.location_name_code_map",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.locations_needing_keys"
                  ]
                },
                "depends_on": [
                  "azurerm_private_endpoint.cog_kv_peps",
                  "local.keys_depend_on"
                ]
              },
              {
                "address": "azurerm_key_vault_key.ud_kv_key",
                "mode": "managed",
                "type": "azurerm_key_vault_key",
                "name": "ud_kv_key",
                "provider_config_key": "azurerm",
                "expressions": {
                  "key_opts": {
                    "constant_value": [
                      "decrypt",
                      "encrypt",
                      "unwrapKey",
                      "wrapKey"
                    ]
                  },
                  "key_size": {
                    "constant_value": 2048
                  },
                  "key_type": {
                    "constant_value": "RSA-HSM"
                  },
                  "key_vault_id": {
                    "references": [
                      "azurerm_key_vault.ud_key_vaults",
                      "each.value.key_vault_name",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.key",
                      "random_string.kvname.result",
                      "random_string.kvname"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.ud_key_vault_keys"
                  ]
                },
                "depends_on": [
                  "azurerm_private_endpoint.ud_key_vaults_pes",
                  "local.keys_depend_on"
                ]
              },
              {
                "address": "azurerm_key_vault_key.vm_kv_key",
                "mode": "managed",
                "type": "azurerm_key_vault_key",
                "name": "vm_kv_key",
                "provider_config_key": "azurerm",
                "expressions": {
                  "key_opts": {
                    "constant_value": [
                      "decrypt",
                      "encrypt",
                      "unwrapKey",
                      "wrapKey"
                    ]
                  },
                  "key_size": {
                    "constant_value": 2048
                  },
                  "key_type": {
                    "constant_value": "RSA-HSM"
                  },
                  "key_vault_id": {
                    "references": [
                      "azurerm_key_vault.vm_kv[0].id",
                      "azurerm_key_vault.vm_kv[0]",
                      "azurerm_key_vault.vm_kv"
                    ]
                  },
                  "name": {
                    "references": [
                      "random_string.kvname.result",
                      "random_string.kvname"
                    ]
                  },
                  "rotation_policy": [
                    {
                      "automatic": [
                        {
                          "time_after_creation": {
                            "constant_value": "P1Y"
                          }
                        }
                      ]
                    }
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "data.azurerm_subnet.ext_vm_subnet[0].id",
                    "data.azurerm_subnet.ext_vm_subnet[0]",
                    "data.azurerm_subnet.ext_vm_subnet"
                  ]
                }
              },
              {
                "address": "azurerm_key_vault_secret.aks_windows_password",
                "mode": "managed",
                "type": "azurerm_key_vault_secret",
                "name": "aks_windows_password",
                "provider_config_key": "azurerm",
                "expressions": {
                  "key_vault_id": {
                    "references": [
                      "azurerm_key_vault.aks_de_keyvault[0].id",
                      "azurerm_key_vault.aks_de_keyvault[0]",
                      "azurerm_key_vault.aks_de_keyvault"
                    ]
                  },
                  "name": {
                    "constant_value": "windows-password"
                  },
                  "value": {
                    "references": [
                      "random_password.aks_windows_password[0].result",
                      "random_password.aks_windows_password[0]",
                      "random_password.aks_windows_password"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.aks_cluster.network_plugin",
                    "var.aks_cluster"
                  ]
                }
              },
              {
                "address": "azurerm_kubernetes_cluster.aks_cluster",
                "mode": "managed",
                "type": "azurerm_kubernetes_cluster",
                "name": "aks_cluster",
                "provider_config_key": "azurerm",
                "expressions": {
                  "automatic_channel_upgrade": {
                    "references": [
                      "var.aks_cluster.auto_upgrade",
                      "var.aks_cluster"
                    ]
                  },
                  "azure_active_directory_role_based_access_control": [
                    {
                      "admin_group_object_ids": {
                        "references": [
                          "var.aks_cluster.cluster_admin_group_object_ids",
                          "var.aks_cluster"
                        ]
                      },
                      "azure_rbac_enabled": {
                        "constant_value": true
                      },
                      "managed": {
                        "constant_value": true
                      }
                    }
                  ],
                  "azure_policy_enabled": {
                    "constant_value": true
                  },
                  "cost_analysis_enabled": {
                    "references": [
                      "var.aks_cluster.cost_analysis_enabled",
                      "var.aks_cluster"
                    ]
                  },
                  "default_node_pool": [
                    {
                      "enable_auto_scaling": {
                        "references": [
                          "var.aks_default_node_pool.enable_auto_scaling",
                          "var.aks_default_node_pool"
                        ]
                      },
                      "enable_host_encryption": {
                        "references": [
                          "var.aks_default_node_pool.enable_host_encryption",
                          "var.aks_default_node_pool"
                        ]
                      },
                      "max_count": {
                        "references": [
                          "var.aks_default_node_pool.enable_auto_scaling",
                          "var.aks_default_node_pool",
                          "var.aks_default_node_pool.max_count",
                          "var.aks_default_node_pool"
                        ]
                      },
                      "max_pods": {
                        "references": [
                          "var.aks_default_node_pool.max_pods",
                          "var.aks_default_node_pool"
                        ]
                      },
                      "min_count": {
                        "references": [
                          "var.aks_default_node_pool.enable_auto_scaling",
                          "var.aks_default_node_pool",
                          "var.aks_default_node_pool.min_count",
                          "var.aks_default_node_pool"
                        ]
                      },
                      "name": {
                        "references": [
                          "var.aks_default_node_pool.name",
                          "var.aks_default_node_pool"
                        ]
                      },
                      "node_count": {
                        "references": [
                          "var.aks_default_node_pool.node_count",
                          "var.aks_default_node_pool"
                        ]
                      },
                      "node_taints": {
                        "references": [
                          "var.aks_default_node_pool.node_taints",
                          "var.aks_default_node_pool"
                        ]
                      },
                      "only_critical_addons_enabled": {
                        "references": [
                          "var.aks_default_node_pool.only_critical_addons_enabled",
                          "var.aks_default_node_pool"
                        ]
                      },
                      "orchestrator_version": {
                        "references": [
                          "var.aks_default_node_pool.orchestrator_version",
                          "var.aks_default_node_pool"
                        ]
                      },
                      "temporary_name_for_rotation": {
                        "constant_value": "ectemppool"
                      },
                      "upgrade_settings": [
                        {
                          "drain_timeout_in_minutes": {
                            "references": [
                              "var.aks_default_node_pool.drain_timeout_in_minutes",
                              "var.aks_default_node_pool"
                            ]
                          },
                          "max_surge": {
                            "references": [
                              "var.aks_default_node_pool.max_surge",
                              "var.aks_default_node_pool"
                            ]
                          },
                          "node_soak_duration_in_minutes": {
                            "references": [
                              "var.aks_default_node_pool.node_soak_duration_in_minutes",
                              "var.aks_default_node_pool"
                            ]
                          }
                        }
                      ],
                      "vm_size": {
                        "references": [
                          "var.aks_default_node_pool.vm_size",
                          "var.aks_default_node_pool"
                        ]
                      },
                      "vnet_subnet_id": {
                        "references": [
                          "var.aks_cluster.external_subnet_id",
                          "var.aks_cluster",
                          "var.aks_cluster.external_subnet_id",
                          "var.aks_cluster",
                          "azurerm_subnet.subnets",
                          "var.aks_cluster.subnet_name",
                          "var.aks_cluster"
                        ]
                      },
                      "zones": {
                        "references": [
                          "var.aks_default_node_pool.zones",
                          "var.aks_default_node_pool"
                        ]
                      }
                    }
                  ],
                  "disk_encryption_set_id": {
                    "references": [
                      "azurerm_disk_encryption_set.aks_disk_encryption_set[0].id",
                      "azurerm_disk_encryption_set.aks_disk_encryption_set[0]",
                      "azurerm_disk_encryption_set.aks_disk_encryption_set"
                    ]
                  },
                  "dns_prefix": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name"
                    ]
                  },
                  "identity": [
                    {
                      "identity_ids": {
                        "references": [
                          "azurerm_user_assigned_identity.aks_managed_identity[0].id",
                          "azurerm_user_assigned_identity.aks_managed_identity[0]",
                          "azurerm_user_assigned_identity.aks_managed_identity"
                        ]
                      },
                      "type": {
                        "constant_value": "UserAssigned"
                      }
                    }
                  ],
                  "kubernetes_version": {
                    "references": [
                      "var.aks_cluster.kubernetes_version",
                      "var.aks_cluster",
                      "var.aks_cluster.kubernetes_version",
                      "var.aks_cluster"
                    ]
                  },
                  "local_account_disabled": {
                    "references": [
                      "var.aks_cluster.local_account_disabled",
                      "var.aks_cluster"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.aks_cluster.index",
                      "var.aks_cluster",
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "var.aks_cluster.index",
                      "var.aks_cluster",
                      "var.aks_cluster.random_suffix",
                      "var.aks_cluster",
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "random_string.aks_suffix_name[0].result",
                      "random_string.aks_suffix_name[0]",
                      "random_string.aks_suffix_name",
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name"
                    ]
                  },
                  "network_profile": [
                    {
                      "dns_service_ip": {
                        "references": [
                          "var.aks_cluster.network_plugin",
                          "var.aks_cluster"
                        ]
                      },
                      "network_plugin": {
                        "references": [
                          "var.aks_cluster.network_plugin",
                          "var.aks_cluster"
                        ]
                      },
                      "outbound_type": {
                        "constant_value": "userDefinedRouting"
                      },
                      "pod_cidr": {
                        "references": [
                          "var.aks_cluster.network_plugin",
                          "var.aks_cluster"
                        ]
                      },
                      "service_cidr": {
                        "references": [
                          "var.aks_cluster.network_plugin",
                          "var.aks_cluster"
                        ]
                      }
                    }
                  ],
                  "node_resource_group": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "local.micro_suffix"
                    ]
                  },
                  "oidc_issuer_enabled": {
                    "references": [
                      "var.aks_cluster.workload_identity_enabled",
                      "var.aks_cluster"
                    ]
                  },
                  "private_cluster_enabled": {
                    "constant_value": true
                  },
                  "private_dns_zone_id": {
                    "references": [
                      "local.private_dns_zone_id"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.aks_rg[0].name",
                      "local.aks_rg[0]",
                      "local.aks_rg"
                    ]
                  },
                  "role_based_access_control_enabled": {
                    "constant_value": true
                  },
                  "sku_tier": {
                    "references": [
                      "var.aks_cluster.sku_tier",
                      "var.aks_cluster",
                      "var.aks_cluster.sku_tier",
                      "var.aks_cluster"
                    ]
                  },
                  "support_plan": {
                    "references": [
                      "var.aks_cluster.support_plan",
                      "var.aks_cluster"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  },
                  "workload_identity_enabled": {
                    "references": [
                      "var.aks_cluster.workload_identity_enabled",
                      "var.aks_cluster"
                    ]
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name"
                  ]
                },
                "depends_on": [
                  "azurerm_role_assignment.dns_zone_permissions",
                  "azurerm_role_assignment.azure_disk_encryption_permissions"
                ]
              },
              {
                "address": "azurerm_kubernetes_cluster_node_pool.extra_nodepools",
                "mode": "managed",
                "type": "azurerm_kubernetes_cluster_node_pool",
                "name": "extra_nodepools",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enable_auto_scaling": {
                    "references": [
                      "each.value.enable_auto_scaling",
                      "each.value"
                    ]
                  },
                  "enable_host_encryption": {
                    "references": [
                      "each.value.enable_host_encryption",
                      "each.value"
                    ]
                  },
                  "eviction_policy": {
                    "references": [
                      "each.value.eviction_policy",
                      "each.value"
                    ]
                  },
                  "kubernetes_cluster_id": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].id",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  },
                  "max_count": {
                    "references": [
                      "each.value.enable_auto_scaling",
                      "each.value",
                      "each.value.max_count",
                      "each.value"
                    ]
                  },
                  "max_pods": {
                    "references": [
                      "each.value.max_pods",
                      "each.value"
                    ]
                  },
                  "min_count": {
                    "references": [
                      "each.value.enable_auto_scaling",
                      "each.value",
                      "each.value.min_count",
                      "each.value"
                    ]
                  },
                  "mode": {
                    "references": [
                      "each.value.mode",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "node_count": {
                    "references": [
                      "each.value.node_count",
                      "each.value"
                    ]
                  },
                  "node_labels": {
                    "references": [
                      "each.value.labels",
                      "each.value"
                    ]
                  },
                  "node_taints": {
                    "references": [
                      "each.value.node_taints",
                      "each.value"
                    ]
                  },
                  "orchestrator_version": {
                    "references": [
                      "each.value.orchestrator_version",
                      "each.value"
                    ]
                  },
                  "os_type": {
                    "references": [
                      "each.value.os_type",
                      "each.value"
                    ]
                  },
                  "priority": {
                    "references": [
                      "each.value.priority",
                      "each.value"
                    ]
                  },
                  "spot_max_price": {
                    "references": [
                      "each.value.spot_max_price",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  },
                  "vm_size": {
                    "references": [
                      "each.value.vm_size",
                      "each.value"
                    ]
                  },
                  "vnet_subnet_id": {
                    "references": [
                      "var.aks_cluster.external_subnet_id",
                      "var.aks_cluster",
                      "var.aks_cluster.external_subnet_id",
                      "var.aks_cluster",
                      "azurerm_subnet.subnets",
                      "var.aks_cluster.subnet_name",
                      "var.aks_cluster"
                    ]
                  },
                  "zones": {
                    "references": [
                      "each.value.zones",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "var.aks_extra_node_pools"
                  ]
                }
              },
              {
                "address": "azurerm_lb.alb",
                "mode": "managed",
                "type": "azurerm_lb",
                "name": "alb",
                "provider_config_key": "azurerm",
                "expressions": {
                  "frontend_ip_configuration": [
                    {
                      "name": {
                        "references": [
                          "each.key"
                        ]
                      },
                      "private_ip_address": {
                        "references": [
                          "each.value.frontend_ip_config.ip_address",
                          "each.value.frontend_ip_config",
                          "each.value"
                        ]
                      },
                      "private_ip_address_allocation": {
                        "references": [
                          "each.value.frontend_ip_config.is_dynamic_ip",
                          "each.value.frontend_ip_config",
                          "each.value"
                        ]
                      },
                      "subnet_id": {
                        "references": [
                          "azurerm_subnet.subnets",
                          "each.value.frontend_ip_config.subnet",
                          "each.value.frontend_ip_config",
                          "each.value"
                        ]
                      }
                    }
                  ],
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.key"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value"
                    ]
                  },
                  "sku": {
                    "references": [
                      "each.value.sku",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.lb_list"
                  ]
                }
              },
              {
                "address": "azurerm_lb_backend_address_pool.lb_pool",
                "mode": "managed",
                "type": "azurerm_lb_backend_address_pool",
                "name": "lb_pool",
                "provider_config_key": "azurerm",
                "expressions": {
                  "loadbalancer_id": {
                    "references": [
                      "azurerm_lb.alb",
                      "each.key"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.key"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.backend_pool_addresses"
                  ]
                }
              },
              {
                "address": "azurerm_lb_backend_address_pool_address.bepa",
                "mode": "managed",
                "type": "azurerm_lb_backend_address_pool_address",
                "name": "bepa",
                "provider_config_key": "azurerm",
                "expressions": {
                  "backend_address_pool_id": {
                    "references": [
                      "azurerm_lb_backend_address_pool.lb_pool",
                      "each.value.lb_name",
                      "each.value"
                    ]
                  },
                  "ip_address": {
                    "references": [
                      "each.key"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.key"
                    ]
                  },
                  "virtual_network_id": {
                    "references": [
                      "local.vnet_id"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.backend_pool_addresses"
                  ]
                }
              },
              {
                "address": "azurerm_lb_probe.lb_probe",
                "mode": "managed",
                "type": "azurerm_lb_probe",
                "name": "lb_probe",
                "provider_config_key": "azurerm",
                "expressions": {
                  "interval_in_seconds": {
                    "references": [
                      "each.value.interval",
                      "each.value"
                    ]
                  },
                  "loadbalancer_id": {
                    "references": [
                      "azurerm_lb.alb",
                      "each.value.lb_name",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "port": {
                    "references": [
                      "each.value.port",
                      "each.value"
                    ]
                  },
                  "probe_threshold": {
                    "references": [
                      "each.value.threshold",
                      "each.value"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "each.value.protocol",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.health_probes"
                  ]
                }
              },
              {
                "address": "azurerm_lb_rule.lb_rule",
                "mode": "managed",
                "type": "azurerm_lb_rule",
                "name": "lb_rule",
                "provider_config_key": "azurerm",
                "expressions": {
                  "backend_address_pool_ids": {
                    "references": [
                      "azurerm_lb_backend_address_pool.lb_pool",
                      "each.value.lb_name",
                      "each.value"
                    ]
                  },
                  "backend_port": {
                    "references": [
                      "each.value.backend_port",
                      "each.value"
                    ]
                  },
                  "disable_outbound_snat": {
                    "constant_value": true
                  },
                  "frontend_ip_configuration_name": {
                    "references": [
                      "each.value.lb_name",
                      "each.value"
                    ]
                  },
                  "frontend_port": {
                    "references": [
                      "each.value.frontend_port",
                      "each.value"
                    ]
                  },
                  "loadbalancer_id": {
                    "references": [
                      "azurerm_lb.alb",
                      "each.value.lb_name",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "probe_id": {
                    "references": [
                      "azurerm_lb_probe.lb_probe",
                      "each.value.health_probe",
                      "each.value"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "each.value.protocol",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.lb_rules"
                  ]
                }
              },
              {
                "address": "azurerm_linux_function_app.linux_funapps",
                "mode": "managed",
                "type": "azurerm_linux_function_app",
                "name": "linux_funapps",
                "provider_config_key": "azurerm",
                "expressions": {
                  "https_only": {
                    "constant_value": true
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.key"
                    ]
                  },
                  "public_network_access_enabled": {
                    "references": [
                      "each.value.public_network_access_enabled",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.app_services_rg[0].name",
                      "azurerm_resource_group.app_services_rg[0]",
                      "azurerm_resource_group.app_services_rg"
                    ]
                  },
                  "service_plan_id": {
                    "references": [
                      "azurerm_service_plan.asps",
                      "each.value.ud_app_service_plan",
                      "each.value"
                    ]
                  },
                  "storage_account_access_key": {
                    "references": [
                      "azurerm_storage_account.ud_storage_accounts",
                      "each.value.ud_storage_account",
                      "each.value"
                    ]
                  },
                  "storage_account_name": {
                    "references": [
                      "azurerm_storage_account.ud_storage_accounts",
                      "each.value.ud_storage_account",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  },
                  "virtual_network_subnet_id": {
                    "references": [
                      "each.value.integrated_subnet_name",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.integrated_subnet_name",
                      "each.value",
                      "each.value.external_integrated_subnet_id",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "local.linux_funapps"
                  ]
                }
              },
              {
                "address": "azurerm_linux_virtual_machine.vms",
                "mode": "managed",
                "type": "azurerm_linux_virtual_machine",
                "name": "vms",
                "provider_config_key": "azurerm",
                "expressions": {
                  "admin_password": {
                    "references": [
                      "random_password.win_default_admin_pass[0].result",
                      "random_password.win_default_admin_pass[0]",
                      "random_password.win_default_admin_pass"
                    ]
                  },
                  "admin_username": {
                    "constant_value": "azureuser"
                  },
                  "computer_name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "custom_data": {
                    "references": [
                      "each.value.line_of_business",
                      "each.value",
                      "local.hcb_custom_data"
                    ]
                  },
                  "disable_password_authentication": {
                    "constant_value": false
                  },
                  "encryption_at_host_enabled": {
                    "constant_value": true
                  },
                  "identity": [
                    {
                      "identity_ids": {
                        "references": [
                          "var.external_vm_settings.subnet_name",
                          "var.external_vm_settings",
                          "azurerm_user_assigned_identity.vm_kv_uai[0].id",
                          "azurerm_user_assigned_identity.vm_kv_uai[0]",
                          "azurerm_user_assigned_identity.vm_kv_uai",
                          "local.base_kv_uai_id"
                        ]
                      },
                      "type": {
                        "constant_value": "SystemAssigned, UserAssigned"
                      }
                    }
                  ],
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "network_interface_ids": {
                    "references": [
                      "azurerm_network_interface.nics",
                      "each.key"
                    ]
                  },
                  "os_disk": [
                    {
                      "caching": {
                        "references": [
                          "each.value.os_disk_caching",
                          "each.value"
                        ]
                      },
                      "disk_encryption_set_id": {
                        "references": [
                          "azurerm_disk_encryption_set.vm_disk_encryption_set[0].id",
                          "azurerm_disk_encryption_set.vm_disk_encryption_set[0]",
                          "azurerm_disk_encryption_set.vm_disk_encryption_set"
                        ]
                      },
                      "disk_size_gb": {
                        "references": [
                          "each.value.os_disk_size",
                          "each.value"
                        ]
                      },
                      "name": {
                        "references": [
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "storage_account_type": {
                        "references": [
                          "each.value.os_disk_storage_account_type",
                          "each.value"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "each.value.resource_group_name",
                      "each.value"
                    ]
                  },
                  "size": {
                    "references": [
                      "each.value.vm_size",
                      "each.value"
                    ]
                  },
                  "source_image_id": {
                    "references": [
                      "data.azurerm_shared_image_version.os_image",
                      "each.key"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "each.value.short_name",
                      "each.value",
                      "local.all_tags",
                      "each.value.short_name",
                      "each.value"
                    ]
                  },
                  "zone": {
                    "references": [
                      "each.value.zone",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.vm_list"
                  ]
                }
              },
              {
                "address": "azurerm_linux_web_app.linux_webapps",
                "mode": "managed",
                "type": "azurerm_linux_web_app",
                "name": "linux_webapps",
                "provider_config_key": "azurerm",
                "expressions": {
                  "app_settings": {
                    "references": [
                      "azurerm_application_insights.linux_webapps_app_insights",
                      "each.key",
                      "azurerm_application_insights.linux_webapps_app_insights",
                      "each.key",
                      "each.value.app_settings",
                      "each.value"
                    ]
                  },
                  "https_only": {
                    "constant_value": true
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.key"
                    ]
                  },
                  "public_network_access_enabled": {
                    "references": [
                      "each.value.public_network_access_enabled",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.app_services_rg[0].name",
                      "azurerm_resource_group.app_services_rg[0]",
                      "azurerm_resource_group.app_services_rg"
                    ]
                  },
                  "service_plan_id": {
                    "references": [
                      "azurerm_service_plan.asps",
                      "each.value.ud_app_service_plan",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  },
                  "virtual_network_subnet_id": {
                    "references": [
                      "each.value.disable_vnet_integration",
                      "each.value",
                      "each.value.integrated_subnet_name",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.integrated_subnet_name",
                      "each.value",
                      "each.value.external_integrated_subnet_id",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "local.linux_webapps"
                  ]
                }
              },
              {
                "address": "azurerm_log_analytics_workspace.log_analytics_workspace",
                "mode": "managed",
                "type": "azurerm_log_analytics_workspace",
                "name": "log_analytics_workspace",
                "provider_config_key": "azurerm",
                "expressions": {
                  "internet_ingestion_enabled": {
                    "constant_value": true
                  },
                  "internet_query_enabled": {
                    "constant_value": true
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.log_analytics_workspace_specs.ud_resource_group",
                      "var.log_analytics_workspace_specs",
                      "azurerm_resource_group.ud_rgs",
                      "var.log_analytics_workspace_specs.ud_resource_group",
                      "var.log_analytics_workspace_specs",
                      "azurerm_resource_group.secr_rg[0].name",
                      "azurerm_resource_group.secr_rg[0]",
                      "azurerm_resource_group.secr_rg"
                    ]
                  },
                  "retention_in_days": {
                    "references": [
                      "var.log_analytics_workspace_specs.retention_in_days",
                      "var.log_analytics_workspace_specs"
                    ]
                  },
                  "sku": {
                    "references": [
                      "var.log_analytics_workspace_specs.sku",
                      "var.log_analytics_workspace_specs"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 3,
                "count_expression": {
                  "references": [
                    "var.log_analytics_workspace",
                    "local.micro_call"
                  ]
                }
              },
              {
                "address": "azurerm_logic_app_standard.logicapps",
                "mode": "managed",
                "type": "azurerm_logic_app_standard",
                "name": "logicapps",
                "provider_config_key": "azurerm",
                "expressions": {
                  "app_service_plan_id": {
                    "references": [
                      "azurerm_service_plan.asps",
                      "each.value.ud_app_service_plan",
                      "each.value"
                    ]
                  },
                  "app_settings": {
                    "references": [
                      "local.app_settings",
                      "each.value.app_settings",
                      "each.value"
                    ]
                  },
                  "https_only": {
                    "constant_value": true
                  },
                  "identity": [
                    {
                      "type": {
                        "constant_value": "SystemAssigned"
                      }
                    }
                  ],
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.key"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.app_services_rg[0].name",
                      "azurerm_resource_group.app_services_rg[0]",
                      "azurerm_resource_group.app_services_rg"
                    ]
                  },
                  "storage_account_access_key": {
                    "references": [
                      "azurerm_storage_account.ud_storage_accounts",
                      "each.value.ud_storage_account",
                      "each.value"
                    ]
                  },
                  "storage_account_name": {
                    "references": [
                      "azurerm_storage_account.ud_storage_accounts",
                      "each.value.ud_storage_account",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  },
                  "version": {
                    "references": [
                      "each.value.version",
                      "each.value"
                    ]
                  },
                  "virtual_network_subnet_id": {
                    "references": [
                      "each.value.integrated_subnet_name",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.integrated_subnet_name",
                      "each.value",
                      "each.value.external_integrated_subnet_id",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.logic_apps"
                  ]
                },
                "depends_on": [
                  "azurerm_private_endpoint.ud_storage_accounts_pes"
                ]
              },
              {
                "address": "azurerm_managed_disk.base_managed_disks",
                "mode": "managed",
                "type": "azurerm_managed_disk",
                "name": "base_managed_disks",
                "provider_config_key": "azurerm",
                "expressions": {
                  "create_option": {
                    "references": [
                      "each.value.create_option",
                      "each.value"
                    ]
                  },
                  "disk_encryption_set_id": {
                    "references": [
                      "azurerm_disk_encryption_set.vm_disk_encryption_set[0].id",
                      "azurerm_disk_encryption_set.vm_disk_encryption_set[0]",
                      "azurerm_disk_encryption_set.vm_disk_encryption_set"
                    ]
                  },
                  "disk_size_gb": {
                    "references": [
                      "each.value.disk_size_gb",
                      "each.value"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "public_network_access_enabled": {
                    "constant_value": false
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.resource_group_name",
                      "each.value"
                    ]
                  },
                  "storage_account_type": {
                    "references": [
                      "each.value.storage_account_type",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  },
                  "zone": {
                    "references": [
                      "each.value.zone",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "local.disks_list"
                  ]
                }
              },
              {
                "address": "azurerm_managed_disk.managed_disks",
                "mode": "managed",
                "type": "azurerm_managed_disk",
                "name": "managed_disks",
                "provider_config_key": "azurerm",
                "expressions": {
                  "create_option": {
                    "references": [
                      "each.value.create_option",
                      "each.value"
                    ]
                  },
                  "disk_encryption_set_id": {
                    "references": [
                      "azurerm_disk_encryption_set.vm_disk_encryption_set[0].id",
                      "azurerm_disk_encryption_set.vm_disk_encryption_set[0]",
                      "azurerm_disk_encryption_set.vm_disk_encryption_set"
                    ]
                  },
                  "disk_size_gb": {
                    "references": [
                      "each.value.disk_size_gb",
                      "each.value"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "public_network_access_enabled": {
                    "constant_value": false
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.resource_group_name",
                      "each.value"
                    ]
                  },
                  "storage_account_type": {
                    "references": [
                      "each.value.storage_account_type",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "var.managed_disks"
                  ]
                }
              },
              {
                "address": "azurerm_management_lock.adf_kv",
                "mode": "managed",
                "type": "azurerm_management_lock",
                "name": "adf_kv",
                "provider_config_key": "azurerm",
                "expressions": {
                  "lock_level": {
                    "constant_value": "CanNotDelete"
                  },
                  "name": {
                    "constant_value": "EIS_CSS_Delete_Lock"
                  },
                  "notes": {
                    "constant_value": "GRP 71 [AR] Enforce delete prevention for Azure KeyVault"
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.adf_keyvault[0].id",
                      "azurerm_key_vault.adf_keyvault[0]",
                      "azurerm_key_vault.adf_keyvault"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.adf_subnet_name",
                    "var.data_factory.legacy_adf",
                    "var.data_factory",
                    "var.kv_locks"
                  ]
                },
                "depends_on": [
                  "azurerm_key_vault.adf_keyvault",
                  "azurerm_private_endpoint.adf_keyvault_pep",
                  "azurerm_role_assignment.adf_kv_key_access_admin_role",
                  "azurerm_role_assignment.adf_kv_key_access_admin_role_system_id",
                  "azurerm_data_factory_linked_service_key_vault.adf_kv"
                ]
              },
              {
                "address": "azurerm_management_lock.ai_kv",
                "mode": "managed",
                "type": "azurerm_management_lock",
                "name": "ai_kv",
                "provider_config_key": "azurerm",
                "expressions": {
                  "lock_level": {
                    "constant_value": "CanNotDelete"
                  },
                  "name": {
                    "constant_value": "EIS_CSS_Delete_Lock"
                  },
                  "notes": {
                    "constant_value": "GRP 71 [AR] Enforce delete prevention for Azure KeyVault"
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.ai_kv",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.ai_locations_needing_keys"
                  ]
                },
                "depends_on": [
                  "azurerm_role_assignment.ai_kv_key_access_cv_role_managed_identity",
                  "azurerm_role_assignment.ai_kv_key_access_aes_role_managed_identity",
                  "azurerm_key_vault_key.ai_kv_key",
                  "azurerm_private_endpoint.ai_kv_peps",
                  "azurerm_monitor_diagnostic_setting.diag_ai_kv",
                  "azurerm_key_vault.ai_kv"
                ]
              },
              {
                "address": "azurerm_management_lock.aks_de_keyvault",
                "mode": "managed",
                "type": "azurerm_management_lock",
                "name": "aks_de_keyvault",
                "provider_config_key": "azurerm",
                "expressions": {
                  "lock_level": {
                    "constant_value": "CanNotDelete"
                  },
                  "name": {
                    "constant_value": "EIS_CSS_Delete_Lock"
                  },
                  "notes": {
                    "constant_value": "GRP 71 [AR] Enforce delete prevention for Azure KeyVault"
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.aks_de_keyvault[0].id",
                      "azurerm_key_vault.aks_de_keyvault[0]",
                      "azurerm_key_vault.aks_de_keyvault"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.kv_locks"
                  ]
                },
                "depends_on": [
                  "azurerm_key_vault.aks_de_keyvault",
                  "local.peering_resources",
                  "azurerm_private_endpoint.aks_de_keyvault_pep",
                  "azurerm_key_vault_key.aks_key_vault_key",
                  "azurerm_key_vault_secret.aks_windows_password",
                  "azurerm_monitor_diagnostic_setting.diag_aks_de_keyvault"
                ]
              },
              {
                "address": "azurerm_management_lock.aks_int_keyvault",
                "mode": "managed",
                "type": "azurerm_management_lock",
                "name": "aks_int_keyvault",
                "provider_config_key": "azurerm",
                "expressions": {
                  "lock_level": {
                    "constant_value": "CanNotDelete"
                  },
                  "name": {
                    "constant_value": "EIS_CSS_Delete_Lock"
                  },
                  "notes": {
                    "constant_value": "GRP 71 [AR] Enforce delete prevention for Azure KeyVault"
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.aks_int_keyvault[0].id",
                      "azurerm_key_vault.aks_int_keyvault[0]",
                      "azurerm_key_vault.aks_int_keyvault"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.aks_cluster.key_vault_secrets_provider",
                    "var.aks_cluster",
                    "var.kv_locks"
                  ]
                },
                "depends_on": [
                  "local.peering_resources",
                  "azurerm_key_vault.aks_int_keyvault",
                  "azurerm_private_endpoint.aks_int_keyvault_pep",
                  "azurerm_monitor_diagnostic_setting.diag_aks_int_keyvault"
                ]
              },
              {
                "address": "azurerm_management_lock.apim_kv",
                "mode": "managed",
                "type": "azurerm_management_lock",
                "name": "apim_kv",
                "provider_config_key": "azurerm",
                "expressions": {
                  "lock_level": {
                    "constant_value": "CanNotDelete"
                  },
                  "name": {
                    "constant_value": "EIS_CSS_Delete_Lock"
                  },
                  "notes": {
                    "constant_value": "GRP 71 [AR] Enforce delete prevention for Azure KeyVault"
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.apim_key_vaults",
                      "each.value.name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.api_management",
                    "var.kv_locks"
                  ]
                },
                "depends_on": [
                  "azurerm_role_assignment.apim_kv_cert_access_for_named_value",
                  "azurerm_role_assignment.apim_kv_access_for_named_value",
                  "azurerm_private_endpoint.apim_key_vaults_pes",
                  "azurerm_monitor_diagnostic_setting.diag_apim_keyvault",
                  "azurerm_key_vault.apim_key_vaults"
                ]
              },
              {
                "address": "azurerm_management_lock.base_custom_kv",
                "mode": "managed",
                "type": "azurerm_management_lock",
                "name": "base_custom_kv",
                "provider_config_key": "azurerm",
                "expressions": {
                  "lock_level": {
                    "constant_value": "CanNotDelete"
                  },
                  "name": {
                    "constant_value": "EIS_CSS_Delete_Lock"
                  },
                  "notes": {
                    "constant_value": "GRP 71 [AR] Enforce delete prevention for Azure KeyVault"
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.base_custom_kv[0].id",
                      "azurerm_key_vault.base_custom_kv[0]",
                      "azurerm_key_vault.base_custom_kv"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.use_custom_key_vault",
                    "local.build_base_resources",
                    "var.kv_locks"
                  ]
                },
                "depends_on": [
                  "local.peering_resources",
                  "azurerm_key_vault.base_kv",
                  "azurerm_key_vault_key.base_custom_kv_key",
                  "azurerm_private_endpoint.base_custom_kv_pes",
                  "azurerm_disk_encryption_set.base_kv_custom_des",
                  "azurerm_monitor_diagnostic_setting.diag_base_custom_kv"
                ]
              },
              {
                "address": "azurerm_management_lock.base_kv",
                "mode": "managed",
                "type": "azurerm_management_lock",
                "name": "base_kv",
                "provider_config_key": "azurerm",
                "expressions": {
                  "lock_level": {
                    "constant_value": "CanNotDelete"
                  },
                  "name": {
                    "constant_value": "EIS_CSS_Delete_Lock"
                  },
                  "notes": {
                    "constant_value": "GRP 71 [AR] Enforce delete prevention for Azure KeyVault"
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.base_kv[0].id",
                      "azurerm_key_vault.base_kv[0]",
                      "azurerm_key_vault.base_kv"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.is_spoke",
                    "local.build_base_resources",
                    "var.kv_locks"
                  ]
                },
                "depends_on": [
                  "local.peering_resources",
                  "azurerm_key_vault_key.base_kv_key",
                  "azurerm_private_endpoint.base_kv_pep",
                  "azurerm_monitor_diagnostic_setting.diag_base_kv"
                ]
              },
              {
                "address": "azurerm_management_lock.cog_kv",
                "mode": "managed",
                "type": "azurerm_management_lock",
                "name": "cog_kv",
                "provider_config_key": "azurerm",
                "expressions": {
                  "lock_level": {
                    "constant_value": "CanNotDelete"
                  },
                  "name": {
                    "constant_value": "EIS_CSS_Delete_Lock"
                  },
                  "notes": {
                    "constant_value": "GRP 71 [AR] Enforce delete prevention for Azure KeyVault"
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.cog_kv",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.locations_needing_keys"
                  ]
                },
                "depends_on": [
                  "azurerm_role_assignment.cog_kv_key_access_cv_role_managed_identity",
                  "azurerm_role_assignment.cog_kv_key_access_aes_role_managed_identity",
                  "azurerm_key_vault_key.cog_kv_key",
                  "azurerm_private_endpoint.cog_kv_peps",
                  "azurerm_monitor_diagnostic_setting.diag_cog_kv",
                  "azurerm_key_vault.cog_kv"
                ]
              },
              {
                "address": "azurerm_management_lock.ud_key_vaults",
                "mode": "managed",
                "type": "azurerm_management_lock",
                "name": "ud_key_vaults",
                "provider_config_key": "azurerm",
                "expressions": {
                  "lock_level": {
                    "constant_value": "CanNotDelete"
                  },
                  "name": {
                    "constant_value": "EIS_CSS_Delete_Lock"
                  },
                  "notes": {
                    "constant_value": "GRP 71 [AR] Enforce delete prevention for Azure KeyVault"
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.ud_key_vaults",
                      "each.key"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.key_vaults",
                    "var.kv_locks"
                  ]
                },
                "depends_on": [
                  "azurerm_private_endpoint.ud_key_vaults_pes",
                  "azurerm_key_vault_key.ud_kv_key",
                  "local.peering_resources",
                  "azurerm_monitor_diagnostic_setting.diag_ud_key_vaults"
                ]
              },
              {
                "address": "azurerm_management_lock.vm_kv",
                "mode": "managed",
                "type": "azurerm_management_lock",
                "name": "vm_kv",
                "provider_config_key": "azurerm",
                "expressions": {
                  "lock_level": {
                    "constant_value": "CanNotDelete"
                  },
                  "name": {
                    "constant_value": "EIS_CSS_Delete_Lock"
                  },
                  "notes": {
                    "constant_value": "GRP 71 [AR] Enforce delete prevention for Azure KeyVault"
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.vm_kv[0].id",
                      "azurerm_key_vault.vm_kv[0]",
                      "azurerm_key_vault.vm_kv"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "data.azurerm_subnet.ext_vm_subnet[0].id",
                    "data.azurerm_subnet.ext_vm_subnet[0]",
                    "data.azurerm_subnet.ext_vm_subnet"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_action_group.ag",
                "mode": "managed",
                "type": "azurerm_monitor_action_group",
                "name": "ag",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enabled": {
                    "constant_value": true
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "local.env_region",
                      "each.key"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value"
                    ]
                  },
                  "short_name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "local.env_region",
                      "each.key",
                      "each.key",
                      "var.line_of_business",
                      "var.application_id",
                      "local.env_region",
                      "var.line_of_business",
                      "var.application_id",
                      "local.env_region",
                      "each.key"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "var.monitor_action_groups"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_autoscale_setting.asp_autoscale",
                "mode": "managed",
                "type": "azurerm_monitor_autoscale_setting",
                "name": "asp_autoscale",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "azurerm_service_plan.asps",
                      "each.key"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.key"
                    ]
                  },
                  "profile": [
                    {
                      "capacity": [
                        {
                          "default": {
                            "references": [
                              "each.value.min_instances",
                              "each.value"
                            ]
                          },
                          "maximum": {
                            "references": [
                              "each.value.max_instances",
                              "each.value"
                            ]
                          },
                          "minimum": {
                            "references": [
                              "each.value.min_instances",
                              "each.value"
                            ]
                          }
                        }
                      ],
                      "name": {
                        "constant_value": "defaultProfile"
                      },
                      "rule": [
                        {
                          "metric_trigger": [
                            {
                              "metric_name": {
                                "constant_value": "CpuPercentage"
                              },
                              "metric_resource_id": {
                                "references": [
                                  "azurerm_service_plan.asps",
                                  "each.key"
                                ]
                              },
                              "operator": {
                                "constant_value": "GreaterThan"
                              },
                              "statistic": {
                                "constant_value": "Average"
                              },
                              "threshold": {
                                "references": [
                                  "each.value.scale_up_threshold",
                                  "each.value"
                                ]
                              },
                              "time_aggregation": {
                                "constant_value": "Average"
                              },
                              "time_grain": {
                                "constant_value": "PT1M"
                              },
                              "time_window": {
                                "constant_value": "PT5M"
                              }
                            }
                          ],
                          "scale_action": [
                            {
                              "cooldown": {
                                "constant_value": "PT5M"
                              },
                              "direction": {
                                "constant_value": "Increase"
                              },
                              "type": {
                                "constant_value": "ChangeCount"
                              },
                              "value": {
                                "constant_value": "1"
                              }
                            }
                          ]
                        },
                        {
                          "metric_trigger": [
                            {
                              "metric_name": {
                                "constant_value": "CpuPercentage"
                              },
                              "metric_resource_id": {
                                "references": [
                                  "azurerm_service_plan.asps",
                                  "each.key"
                                ]
                              },
                              "operator": {
                                "constant_value": "LessThan"
                              },
                              "statistic": {
                                "constant_value": "Average"
                              },
                              "threshold": {
                                "references": [
                                  "each.value.scale_down_threshold",
                                  "each.value"
                                ]
                              },
                              "time_aggregation": {
                                "constant_value": "Average"
                              },
                              "time_grain": {
                                "constant_value": "PT1M"
                              },
                              "time_window": {
                                "constant_value": "PT5M"
                              }
                            }
                          ],
                          "scale_action": [
                            {
                              "cooldown": {
                                "constant_value": "PT5M"
                              },
                              "direction": {
                                "constant_value": "Decrease"
                              },
                              "type": {
                                "constant_value": "ChangeCount"
                              },
                              "value": {
                                "constant_value": "1"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "azurerm_service_plan.asps",
                      "each.key"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_service_plan.asps",
                      "each.key"
                    ]
                  }
                },
                "schema_version": 2,
                "for_each_expression": {
                  "references": [
                    "var.app_service_plans"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_diagnostic_setting.diag_adf_kv",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "diag_adf_kv",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enabled_log": [
                    {
                      "category_group": {
                        "constant_value": "audit"
                      },
                      "retention_policy": [
                        {
                          "enabled": {
                            "constant_value": false
                          }
                        }
                      ]
                    }
                  ],
                  "eventhub_authorization_rule_id": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "eventhub_name": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "log_analytics_workspace_id": {
                    "references": [
                      "var.log_analytics_workspace_id"
                    ]
                  },
                  "name": {
                    "references": [
                      "azurerm_key_vault.adf_keyvault[0].name",
                      "azurerm_key_vault.adf_keyvault[0]",
                      "azurerm_key_vault.adf_keyvault"
                    ]
                  },
                  "partner_solution_id": {
                    "references": [
                      "var.partner_solution_id"
                    ]
                  },
                  "storage_account_id": {
                    "references": [
                      "var.diag_storage_account_id"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_key_vault.adf_keyvault[0].id",
                      "azurerm_key_vault.adf_keyvault[0]",
                      "azurerm_key_vault.adf_keyvault"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.adf_subnet_name",
                    "var.data_factory.legacy_adf",
                    "var.data_factory"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_diagnostic_setting.diag_ai",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "diag_ai",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enabled_log": [
                    {
                      "category_group": {
                        "constant_value": "audit"
                      },
                      "retention_policy": [
                        {
                          "enabled": {
                            "constant_value": false
                          }
                        }
                      ]
                    }
                  ],
                  "eventhub_authorization_rule_id": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "eventhub_name": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "log_analytics_workspace_id": {
                    "references": [
                      "var.log_analytics_workspace_id"
                    ]
                  },
                  "name": {
                    "references": [
                      "azurerm_ai_services.ai_account",
                      "each.key"
                    ]
                  },
                  "partner_solution_id": {
                    "references": [
                      "var.partner_solution_id"
                    ]
                  },
                  "storage_account_id": {
                    "references": [
                      "var.diag_storage_account_id"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_ai_services.ai_account",
                      "each.key"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.ai_services"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_diagnostic_setting.diag_ai_kv",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "diag_ai_kv",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enabled_log": [
                    {
                      "category_group": {
                        "constant_value": "audit"
                      },
                      "retention_policy": [
                        {
                          "enabled": {
                            "constant_value": false
                          }
                        }
                      ]
                    }
                  ],
                  "eventhub_authorization_rule_id": {
                    "references": [
                      "local.eventhub_info",
                      "each.key",
                      "local.routing_environment"
                    ]
                  },
                  "eventhub_name": {
                    "references": [
                      "local.eventhub_info",
                      "each.key",
                      "local.routing_environment"
                    ]
                  },
                  "log_analytics_workspace_id": {
                    "references": [
                      "var.log_analytics_workspace_id"
                    ]
                  },
                  "name": {
                    "references": [
                      "azurerm_key_vault.ai_kv",
                      "each.key"
                    ]
                  },
                  "partner_solution_id": {
                    "references": [
                      "var.partner_solution_id"
                    ]
                  },
                  "storage_account_id": {
                    "references": [
                      "var.diag_storage_account_id"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_key_vault.ai_kv",
                      "each.key"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.ai_locations_needing_keys"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_diagnostic_setting.diag_aks_de_keyvault",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "diag_aks_de_keyvault",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enabled_log": [
                    {
                      "category_group": {
                        "constant_value": "audit"
                      },
                      "retention_policy": [
                        {
                          "enabled": {
                            "constant_value": false
                          }
                        }
                      ]
                    }
                  ],
                  "eventhub_authorization_rule_id": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "eventhub_name": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "log_analytics_workspace_id": {
                    "references": [
                      "var.log_analytics_workspace_id"
                    ]
                  },
                  "name": {
                    "references": [
                      "azurerm_key_vault.aks_de_keyvault",
                      "count.index"
                    ]
                  },
                  "partner_solution_id": {
                    "references": [
                      "var.partner_solution_id"
                    ]
                  },
                  "storage_account_id": {
                    "references": [
                      "var.diag_storage_account_id"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_key_vault.aks_de_keyvault",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_diagnostic_setting.diag_aks_int_keyvault",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "diag_aks_int_keyvault",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enabled_log": [
                    {
                      "category_group": {
                        "constant_value": "audit"
                      },
                      "retention_policy": [
                        {
                          "enabled": {
                            "constant_value": false
                          }
                        }
                      ]
                    }
                  ],
                  "eventhub_authorization_rule_id": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "eventhub_name": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "log_analytics_workspace_id": {
                    "references": [
                      "var.log_analytics_workspace_id"
                    ]
                  },
                  "name": {
                    "references": [
                      "azurerm_key_vault.aks_int_keyvault",
                      "count.index"
                    ]
                  },
                  "partner_solution_id": {
                    "references": [
                      "var.partner_solution_id"
                    ]
                  },
                  "storage_account_id": {
                    "references": [
                      "var.diag_storage_account_id"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_key_vault.aks_int_keyvault",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.aks_cluster.key_vault_secrets_provider",
                    "var.aks_cluster"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_diagnostic_setting.diag_apim_keyvault",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "diag_apim_keyvault",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enabled_log": [
                    {
                      "category_group": {
                        "constant_value": "audit"
                      },
                      "retention_policy": [
                        {
                          "enabled": {
                            "constant_value": false
                          }
                        }
                      ]
                    }
                  ],
                  "eventhub_authorization_rule_id": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "eventhub_name": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "log_analytics_workspace_id": {
                    "references": [
                      "var.log_analytics_workspace_id"
                    ]
                  },
                  "name": {
                    "references": [
                      "azurerm_key_vault.apim_key_vaults",
                      "each.key"
                    ]
                  },
                  "partner_solution_id": {
                    "references": [
                      "var.partner_solution_id"
                    ]
                  },
                  "storage_account_id": {
                    "references": [
                      "var.diag_storage_account_id"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_key_vault.apim_key_vaults",
                      "each.key"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.api_management"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_diagnostic_setting.diag_app_insights",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "diag_app_insights",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enabled_log": [
                    {
                      "category_group": {
                        "constant_value": "allLogs"
                      },
                      "retention_policy": [
                        {
                          "enabled": {
                            "constant_value": false
                          }
                        }
                      ]
                    }
                  ],
                  "eventhub_authorization_rule_id": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "eventhub_name": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "log_analytics_workspace_id": {
                    "references": [
                      "var.log_analytics_workspace",
                      "azurerm_log_analytics_workspace.log_analytics_workspace[0].id",
                      "azurerm_log_analytics_workspace.log_analytics_workspace[0]",
                      "azurerm_log_analytics_workspace.log_analytics_workspace"
                    ]
                  },
                  "name": {
                    "references": [
                      "azurerm_application_insights.app_insights",
                      "each.key"
                    ]
                  },
                  "partner_solution_id": {
                    "references": [
                      "var.partner_solution_id"
                    ]
                  },
                  "storage_account_id": {
                    "references": [
                      "var.diag_storage_account_id"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_application_insights.app_insights",
                      "each.key"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.app_insights"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_diagnostic_setting.diag_base_custom_kv",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "diag_base_custom_kv",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enabled_log": [
                    {
                      "category_group": {
                        "constant_value": "audit"
                      },
                      "retention_policy": [
                        {
                          "enabled": {
                            "constant_value": false
                          }
                        }
                      ]
                    }
                  ],
                  "eventhub_authorization_rule_id": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "eventhub_name": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "log_analytics_workspace_id": {
                    "references": [
                      "var.log_analytics_workspace_id"
                    ]
                  },
                  "name": {
                    "constant_value": "diag-custom"
                  },
                  "partner_solution_id": {
                    "references": [
                      "var.partner_solution_id"
                    ]
                  },
                  "storage_account_id": {
                    "references": [
                      "var.diag_storage_account_id"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_key_vault.base_custom_kv[0].id",
                      "azurerm_key_vault.base_custom_kv[0]",
                      "azurerm_key_vault.base_custom_kv"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.use_custom_key_vault",
                    "local.build_base_resources"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_diagnostic_setting.diag_base_kv",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "diag_base_kv",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enabled_log": [
                    {
                      "category_group": {
                        "constant_value": "audit"
                      },
                      "retention_policy": [
                        {
                          "enabled": {
                            "constant_value": false
                          }
                        }
                      ]
                    }
                  ],
                  "eventhub_authorization_rule_id": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "eventhub_name": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "log_analytics_workspace_id": {
                    "references": [
                      "var.log_analytics_workspace_id"
                    ]
                  },
                  "name": {
                    "references": [
                      "azurerm_key_vault.base_kv",
                      "count.index"
                    ]
                  },
                  "partner_solution_id": {
                    "references": [
                      "var.partner_solution_id"
                    ]
                  },
                  "storage_account_id": {
                    "references": [
                      "var.diag_storage_account_id"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_key_vault.base_kv",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.is_spoke",
                    "local.build_base_resources"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_diagnostic_setting.diag_cog",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "diag_cog",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enabled_log": [
                    {
                      "category_group": {
                        "constant_value": "audit"
                      },
                      "retention_policy": [
                        {
                          "enabled": {
                            "constant_value": false
                          }
                        }
                      ]
                    }
                  ],
                  "eventhub_authorization_rule_id": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "eventhub_name": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "log_analytics_workspace_id": {
                    "references": [
                      "var.log_analytics_workspace_id"
                    ]
                  },
                  "name": {
                    "references": [
                      "azurerm_cognitive_account.cogs",
                      "each.key"
                    ]
                  },
                  "partner_solution_id": {
                    "references": [
                      "var.partner_solution_id"
                    ]
                  },
                  "storage_account_id": {
                    "references": [
                      "var.diag_storage_account_id"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_cognitive_account.cogs",
                      "each.key"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.cognitive_services"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_diagnostic_setting.diag_cog_kv",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "diag_cog_kv",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enabled_log": [
                    {
                      "category_group": {
                        "constant_value": "audit"
                      },
                      "retention_policy": [
                        {
                          "enabled": {
                            "constant_value": false
                          }
                        }
                      ]
                    }
                  ],
                  "eventhub_authorization_rule_id": {
                    "references": [
                      "local.eventhub_info",
                      "each.key",
                      "local.routing_environment"
                    ]
                  },
                  "eventhub_name": {
                    "references": [
                      "local.eventhub_info",
                      "each.key",
                      "local.routing_environment"
                    ]
                  },
                  "log_analytics_workspace_id": {
                    "references": [
                      "var.log_analytics_workspace_id"
                    ]
                  },
                  "name": {
                    "references": [
                      "azurerm_key_vault.cog_kv",
                      "each.key"
                    ]
                  },
                  "partner_solution_id": {
                    "references": [
                      "var.partner_solution_id"
                    ]
                  },
                  "storage_account_id": {
                    "references": [
                      "var.diag_storage_account_id"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_key_vault.cog_kv",
                      "each.key"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.locations_needing_keys"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_diagnostic_setting.diag_dbk",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "diag_dbk",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enabled_log": [
                    {
                      "category_group": {
                        "constant_value": "allLogs"
                      },
                      "retention_policy": [
                        {
                          "enabled": {
                            "constant_value": false
                          }
                        }
                      ]
                    }
                  ],
                  "eventhub_authorization_rule_id": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "eventhub_name": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "log_analytics_workspace_id": {
                    "references": [
                      "var.log_analytics_workspace_id"
                    ]
                  },
                  "name": {
                    "references": [
                      "azurerm_databricks_workspace.dbk",
                      "each.key"
                    ]
                  },
                  "partner_solution_id": {
                    "references": [
                      "var.partner_solution_id"
                    ]
                  },
                  "storage_account_id": {
                    "references": [
                      "var.diag_storage_account_id"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_databricks_workspace.dbk",
                      "each.key"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.databricks"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_diagnostic_setting.diag_ud_key_vaults",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "diag_ud_key_vaults",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enabled_log": [
                    {
                      "category_group": {
                        "constant_value": "audit"
                      },
                      "retention_policy": [
                        {
                          "enabled": {
                            "constant_value": false
                          }
                        }
                      ]
                    }
                  ],
                  "eventhub_authorization_rule_id": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "eventhub_name": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "log_analytics_workspace_id": {
                    "references": [
                      "var.log_analytics_workspace_id"
                    ]
                  },
                  "name": {
                    "references": [
                      "azurerm_key_vault.ud_key_vaults",
                      "each.key"
                    ]
                  },
                  "partner_solution_id": {
                    "references": [
                      "var.partner_solution_id"
                    ]
                  },
                  "storage_account_id": {
                    "references": [
                      "var.diag_storage_account_id"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_key_vault.ud_key_vaults",
                      "each.key"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.key_vaults"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_diagnostic_setting.law_diagnostics_eventhub",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "law_diagnostics_eventhub",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enabled_log": [
                    {
                      "category_group": {
                        "constant_value": "audit"
                      },
                      "retention_policy": [
                        {
                          "enabled": {
                            "constant_value": false
                          }
                        }
                      ]
                    },
                    {
                      "category_group": {
                        "constant_value": "allLogs"
                      },
                      "retention_policy": [
                        {
                          "enabled": {
                            "constant_value": false
                          }
                        }
                      ]
                    }
                  ],
                  "eventhub_authorization_rule_id": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "eventhub_name": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "log_analytics_workspace_id": {
                    "references": [
                      "var.log_analytics_workspace_id"
                    ]
                  },
                  "name": {
                    "references": [
                      "azurerm_log_analytics_workspace.log_analytics_workspace",
                      "count.index"
                    ]
                  },
                  "partner_solution_id": {
                    "references": [
                      "var.partner_solution_id"
                    ]
                  },
                  "storage_account_id": {
                    "references": [
                      "var.diag_storage_account_id"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_log_analytics_workspace.log_analytics_workspace",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.log_analytics_workspace",
                    "var.forward_law_to_eh",
                    "var.is_hub",
                    "local.micro_call"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_diagnostic_setting.subscription_diagnostics",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "subscription_diagnostics",
                "provider_config_key": "azurerm",
                "expressions": {
                  "log_analytics_workspace_id": {
                    "references": [
                      "azurerm_log_analytics_workspace.log_analytics_workspace[0].id",
                      "azurerm_log_analytics_workspace.log_analytics_workspace[0]",
                      "azurerm_log_analytics_workspace.log_analytics_workspace"
                    ]
                  },
                  "name": {
                    "references": [
                      "data.azurerm_subscription.current.display_name",
                      "data.azurerm_subscription.current"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "data.azurerm_subscription.current.id",
                      "data.azurerm_subscription.current"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_subscription_diagnostics",
                    "var.log_analytics_workspace"
                  ]
                }
              },
              {
                "address": "azurerm_monitor_diagnostic_setting.vm_kv_diagnostic_setting",
                "mode": "managed",
                "type": "azurerm_monitor_diagnostic_setting",
                "name": "vm_kv_diagnostic_setting",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enabled_log": [
                    {
                      "category_group": {
                        "constant_value": "audit"
                      },
                      "retention_policy": [
                        {
                          "enabled": {
                            "constant_value": false
                          }
                        }
                      ]
                    }
                  ],
                  "eventhub_authorization_rule_id": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "eventhub_name": {
                    "references": [
                      "local.eventhub_info",
                      "local.region_environment"
                    ]
                  },
                  "log_analytics_workspace_id": {
                    "references": [
                      "var.log_analytics_workspace_id"
                    ]
                  },
                  "name": {
                    "constant_value": "diag-vm-kv"
                  },
                  "partner_solution_id": {
                    "references": [
                      "var.partner_solution_id"
                    ]
                  },
                  "storage_account_id": {
                    "references": [
                      "var.diag_storage_account_id"
                    ]
                  },
                  "target_resource_id": {
                    "references": [
                      "azurerm_key_vault.vm_kv[0].id",
                      "azurerm_key_vault.vm_kv[0]",
                      "azurerm_key_vault.vm_kv"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "data.azurerm_subnet.ext_vm_subnet[0].id",
                    "data.azurerm_subnet.ext_vm_subnet[0]",
                    "data.azurerm_subnet.ext_vm_subnet"
                  ]
                }
              },
              {
                "address": "azurerm_mysql_flexible_database.flex_db",
                "mode": "managed",
                "type": "azurerm_mysql_flexible_database",
                "name": "flex_db",
                "provider_config_key": "azurerm",
                "expressions": {
                  "charset": {
                    "references": [
                      "each.value.charset",
                      "each.value"
                    ]
                  },
                  "collation": {
                    "references": [
                      "each.value.collation",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.db_name",
                      "each.value",
                      "each.value.db_env",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_mysql_flexible_server.mysql",
                      "each.value.mysql_name",
                      "each.value"
                    ]
                  },
                  "server_name": {
                    "references": [
                      "azurerm_mysql_flexible_server.mysql",
                      "each.value.mysql_name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.mysqls_databases"
                  ]
                }
              },
              {
                "address": "azurerm_mysql_flexible_server.mysql",
                "mode": "managed",
                "type": "azurerm_mysql_flexible_server",
                "name": "mysql",
                "provider_config_key": "azurerm",
                "expressions": {
                  "administrator_login": {
                    "constant_value": "mysqlauto"
                  },
                  "administrator_password": {
                    "references": [
                      "random_password.password_mysql_flex[0].result",
                      "random_password.password_mysql_flex[0]",
                      "random_password.password_mysql_flex"
                    ]
                  },
                  "backup_retention_days": {
                    "references": [
                      "local.is_prod_env"
                    ]
                  },
                  "create_mode": {
                    "references": [
                      "each.value.create_mode",
                      "each.value"
                    ]
                  },
                  "delegated_subnet_id": {
                    "references": [
                      "azurerm_subnet.subnets",
                      "each.value.subnet_name",
                      "each.value"
                    ]
                  },
                  "geo_redundant_backup_enabled": {
                    "references": [
                      "local.is_prod_env",
                      "each.value.grb_nonprod_requested",
                      "each.value"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "maintenance_window": [
                    {
                      "day_of_week": {
                        "references": [
                          "each.value.maintenance_window.maintenance_day",
                          "each.value.maintenance_window",
                          "each.value"
                        ]
                      },
                      "start_hour": {
                        "references": [
                          "each.value.maintenance_window.maintenance_hour",
                          "each.value.maintenance_window",
                          "each.value"
                        ]
                      }
                    }
                  ],
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "point_in_time_restore_time_in_utc": {
                    "references": [
                      "each.value.point_in_time_restore_time_in_utc",
                      "each.value"
                    ]
                  },
                  "private_dns_zone_id": {
                    "references": [
                      "azurerm_private_dns_zone.mysql_dns[0].id",
                      "azurerm_private_dns_zone.mysql_dns[0]",
                      "azurerm_private_dns_zone.mysql_dns"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.create_mode",
                      "each.value",
                      "each.value.resource_group_name",
                      "each.value",
                      "var.resource_groups",
                      "azurerm_resource_group.db_rgs[\"mysql\"].name",
                      "azurerm_resource_group.db_rgs[\"mysql\"]",
                      "azurerm_resource_group.db_rgs",
                      "azurerm_resource_group.ud_rgs[\"mysql\"].name",
                      "azurerm_resource_group.ud_rgs[\"mysql\"]",
                      "azurerm_resource_group.ud_rgs"
                    ]
                  },
                  "sku_name": {
                    "references": [
                      "local.mysql_dbaas_sizing_map",
                      "each.value.dbaas_standard_size",
                      "each.value"
                    ]
                  },
                  "source_server_id": {
                    "references": [
                      "each.value.source_server_id",
                      "each.value"
                    ]
                  },
                  "storage": [
                    {
                      "auto_grow_enabled": {
                        "references": [
                          "each.value.auto_grow_enabled",
                          "each.value"
                        ]
                      },
                      "size_gb": {
                        "references": [
                          "each.value.storage_gb",
                          "each.value",
                          "local.mysql_dbaas_sizing_map",
                          "each.value.dbaas_standard_size",
                          "each.value",
                          "each.value.storage_gb",
                          "each.value"
                        ]
                      }
                    }
                  ],
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_mysql_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_mysql_tags"
                    ]
                  },
                  "version": {
                    "references": [
                      "each.value.version",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.mysqls"
                  ]
                },
                "depends_on": [
                  "azurerm_private_dns_zone_virtual_network_link.mysql_vnetlink_mysqldb",
                  "azurerm_private_dns_zone_virtual_network_link.mysql_vnetlink_infoblox_com1_usc",
                  "azurerm_private_dns_zone_virtual_network_link.mysql_vnetlink_infoblox_com1_use2",
                  "azurerm_private_dns_zone_virtual_network_link.mysql_vnetlink_infoblox_securehub_usc",
                  "azurerm_private_dns_zone_virtual_network_link.mysql_vnetlink_infoblox_securehub_use2"
                ]
              },
              {
                "address": "azurerm_mysql_flexible_server_active_directory_administrator.mysql_aad_admin_automation_spn",
                "mode": "managed",
                "type": "azurerm_mysql_flexible_server_active_directory_administrator",
                "name": "mysql_aad_admin_automation_spn",
                "provider_config_key": "azurerm",
                "expressions": {
                  "identity_id": {
                    "references": [
                      "local.managed_identity_code_map",
                      "var.location"
                    ]
                  },
                  "login": {
                    "references": [
                      "local.mysql_entra_admin_group.display_name",
                      "local.mysql_entra_admin_group"
                    ]
                  },
                  "object_id": {
                    "references": [
                      "local.mysql_entra_admin_group.object_id",
                      "local.mysql_entra_admin_group"
                    ]
                  },
                  "server_id": {
                    "references": [
                      "azurerm_mysql_flexible_server.mysql",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "tenant_id": {
                    "references": [
                      "data.azurerm_client_config.current.tenant_id",
                      "data.azurerm_client_config.current"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.mysqls"
                  ]
                }
              },
              {
                "address": "azurerm_network_interface.nics",
                "mode": "managed",
                "type": "azurerm_network_interface",
                "name": "nics",
                "provider_config_key": "azurerm",
                "expressions": {
                  "ip_configuration": [
                    {
                      "name": {
                        "references": [
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "private_ip_address_allocation": {
                        "constant_value": "Dynamic"
                      },
                      "subnet_id": {
                        "references": [
                          "data.azurerm_subnet.ext_vm_subnet[0].id",
                          "data.azurerm_subnet.ext_vm_subnet[0]",
                          "data.azurerm_subnet.ext_vm_subnet",
                          "local.all_context_subnets",
                          "each.value.subnet_name",
                          "each.value",
                          "azurerm_subnet.subnets",
                          "each.value.subnet_name",
                          "each.value"
                        ]
                      }
                    }
                  ],
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.line_of_business",
                      "each.value",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.key"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.resource_group_name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.vm_list"
                  ]
                }
              },
              {
                "address": "azurerm_network_security_group.network_security_group",
                "mode": "managed",
                "type": "azurerm_network_security_group",
                "name": "network_security_group",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.network_rg[0].name",
                      "azurerm_resource_group.network_rg[0]",
                      "azurerm_resource_group.network_rg"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.subnet_with_infoblox",
                    "local.micro_call"
                  ]
                }
              },
              {
                "address": "azurerm_network_security_rule.ext_network_security_rules",
                "mode": "managed",
                "type": "azurerm_network_security_rule",
                "name": "ext_network_security_rules",
                "provider_config_key": "azurerm",
                "expressions": {
                  "access": {
                    "references": [
                      "each.value.access",
                      "each.value"
                    ]
                  },
                  "destination_address_prefix": {
                    "references": [
                      "each.value.destination_address_prefix",
                      "each.value",
                      "local.all_subnet_names",
                      "each.value.destination_address_prefix",
                      "each.value",
                      "data.azurerm_subnet.subnets",
                      "each.value.destination_address_prefix",
                      "each.value",
                      "each.value.destination_address_prefix",
                      "each.value"
                    ]
                  },
                  "destination_address_prefixes": {
                    "references": [
                      "each.value.destination_address_prefixes",
                      "each.value",
                      "each.value.destination_address_prefixes",
                      "each.value",
                      "local.all_subnet_names",
                      "data.azurerm_subnet.subnets"
                    ]
                  },
                  "destination_port_range": {
                    "references": [
                      "each.value.destination_port_range",
                      "each.value"
                    ]
                  },
                  "destination_port_ranges": {
                    "references": [
                      "each.value.destination_port_ranges",
                      "each.value"
                    ]
                  },
                  "direction": {
                    "references": [
                      "each.value.direction",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value",
                      "var.micro_type",
                      "local.nsg_suffix"
                    ]
                  },
                  "network_security_group_name": {
                    "references": [
                      "data.azurerm_network_security_group.ext_nsg[0].name",
                      "data.azurerm_network_security_group.ext_nsg[0]",
                      "data.azurerm_network_security_group.ext_nsg"
                    ]
                  },
                  "priority": {
                    "references": [
                      "each.value.priority",
                      "each.value",
                      "local.extend_offset"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "each.value.protocol",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "data.azurerm_network_security_group.ext_nsg[0].resource_group_name",
                      "data.azurerm_network_security_group.ext_nsg[0]",
                      "data.azurerm_network_security_group.ext_nsg"
                    ]
                  },
                  "source_address_prefix": {
                    "references": [
                      "each.value.source_address_prefix",
                      "each.value",
                      "local.all_subnet_names",
                      "each.value.source_address_prefix",
                      "each.value",
                      "data.azurerm_subnet.subnets",
                      "each.value.source_address_prefix",
                      "each.value",
                      "each.value.source_address_prefix",
                      "each.value"
                    ]
                  },
                  "source_address_prefixes": {
                    "references": [
                      "each.value.source_address_prefixes",
                      "each.value",
                      "each.value.source_address_prefixes",
                      "each.value",
                      "local.all_subnet_names",
                      "data.azurerm_subnet.subnets"
                    ]
                  },
                  "source_port_range": {
                    "references": [
                      "each.value.source_port_range",
                      "each.value"
                    ]
                  },
                  "source_port_ranges": {
                    "references": [
                      "each.value.source_port_ranges",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.nsg_rule_list_with_priorities",
                    "local.micro_call",
                    "var.build_nsg_rules"
                  ]
                }
              },
              {
                "address": "azurerm_network_security_rule.network_security_rules",
                "mode": "managed",
                "type": "azurerm_network_security_rule",
                "name": "network_security_rules",
                "provider_config_key": "azurerm",
                "expressions": {
                  "access": {
                    "references": [
                      "each.value.access",
                      "each.value"
                    ]
                  },
                  "destination_address_prefix": {
                    "references": [
                      "each.value.destination_address_prefix",
                      "each.value",
                      "local.subnet_names",
                      "each.value.destination_address_prefix",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.destination_address_prefix",
                      "each.value",
                      "each.value.destination_address_prefix",
                      "each.value"
                    ]
                  },
                  "destination_address_prefixes": {
                    "references": [
                      "each.value.destination_address_prefixes",
                      "each.value",
                      "each.value.destination_address_prefixes",
                      "each.value",
                      "local.subnet_names",
                      "azurerm_subnet.subnets"
                    ]
                  },
                  "destination_port_range": {
                    "references": [
                      "each.value.destination_port_range",
                      "each.value"
                    ]
                  },
                  "destination_port_ranges": {
                    "references": [
                      "each.value.destination_port_ranges",
                      "each.value"
                    ]
                  },
                  "direction": {
                    "references": [
                      "each.value.direction",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "network_security_group_name": {
                    "references": [
                      "azurerm_network_security_group.network_security_group[0].name",
                      "azurerm_network_security_group.network_security_group[0]",
                      "azurerm_network_security_group.network_security_group"
                    ]
                  },
                  "priority": {
                    "references": [
                      "each.value.priority",
                      "each.value"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "each.value.protocol",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.network_rg[0].name",
                      "azurerm_resource_group.network_rg[0]",
                      "azurerm_resource_group.network_rg"
                    ]
                  },
                  "source_address_prefix": {
                    "references": [
                      "each.value.source_address_prefix",
                      "each.value",
                      "local.subnet_names",
                      "each.value.source_address_prefix",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.source_address_prefix",
                      "each.value",
                      "each.value.source_address_prefix",
                      "each.value"
                    ]
                  },
                  "source_address_prefixes": {
                    "references": [
                      "each.value.source_address_prefixes",
                      "each.value",
                      "each.value.source_address_prefixes",
                      "each.value",
                      "local.subnet_names",
                      "azurerm_subnet.subnets"
                    ]
                  },
                  "source_port_range": {
                    "references": [
                      "each.value.source_port_range",
                      "each.value"
                    ]
                  },
                  "source_port_ranges": {
                    "references": [
                      "each.value.source_port_ranges",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.nsg_rule_list_with_priorities",
                    "local.micro_call"
                  ]
                }
              },
              {
                "address": "azurerm_network_watcher_flow_log.main",
                "mode": "managed",
                "type": "azurerm_network_watcher_flow_log",
                "name": "main",
                "provider_config_key": "azurerm",
                "expressions": {
                  "enabled": {
                    "constant_value": true
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.application_id",
                      "local.host_rg_suffix",
                      "var.environment",
                      "local.short_location_name"
                    ]
                  },
                  "network_security_group_id": {
                    "references": [
                      "azurerm_network_security_group.network_security_group[0].id",
                      "azurerm_network_security_group.network_security_group[0]",
                      "azurerm_network_security_group.network_security_group"
                    ]
                  },
                  "network_watcher_name": {
                    "references": [
                      "data.azurerm_network_watcher.network_watcher.name",
                      "data.azurerm_network_watcher.network_watcher"
                    ]
                  },
                  "resource_group_name": {
                    "constant_value": "NetworkWatcherRG"
                  },
                  "retention_policy": [
                    {
                      "days": {
                        "references": [
                          "var.flowlog_retention_days"
                        ]
                      },
                      "enabled": {
                        "constant_value": true
                      }
                    }
                  ],
                  "storage_account_id": {
                    "references": [
                      "local.shglobalntwkflowlogs_map",
                      "local.region_environment"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  },
                  "version": {
                    "constant_value": 2
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "local.all_subnets",
                    "local.is_peered",
                    "var.disable_watcher",
                    "var.is_hub"
                  ]
                }
              },
              {
                "address": "azurerm_postgresql_flexible_server.psql",
                "mode": "managed",
                "type": "azurerm_postgresql_flexible_server",
                "name": "psql",
                "provider_config_key": "azurerm",
                "expressions": {
                  "administrator_login": {
                    "constant_value": "postgresauto"
                  },
                  "administrator_password": {
                    "references": [
                      "random_password.password_psql_flex[0].result",
                      "random_password.password_psql_flex[0]",
                      "random_password.password_psql_flex"
                    ]
                  },
                  "authentication": [
                    {
                      "active_directory_auth_enabled": {
                        "constant_value": true
                      },
                      "password_auth_enabled": {
                        "constant_value": true
                      },
                      "tenant_id": {
                        "references": [
                          "data.azurerm_client_config.current.tenant_id",
                          "data.azurerm_client_config.current"
                        ]
                      }
                    }
                  ],
                  "auto_grow_enabled": {
                    "references": [
                      "each.value.auto_grow_enabled",
                      "each.value"
                    ]
                  },
                  "backup_retention_days": {
                    "references": [
                      "local.is_prod_env"
                    ]
                  },
                  "create_mode": {
                    "references": [
                      "each.value.create_mode",
                      "each.value"
                    ]
                  },
                  "delegated_subnet_id": {
                    "references": [
                      "azurerm_subnet.subnets",
                      "each.value.delegated_subnet_name",
                      "each.value"
                    ]
                  },
                  "geo_redundant_backup_enabled": {
                    "references": [
                      "local.is_prod_env",
                      "each.value.grb_nonprod_requested",
                      "each.value"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "maintenance_window": [
                    {
                      "day_of_week": {
                        "references": [
                          "each.value.maintenance_window.maintenance_day",
                          "each.value.maintenance_window",
                          "each.value"
                        ]
                      },
                      "start_hour": {
                        "references": [
                          "each.value.maintenance_window.maintenance_hour",
                          "each.value.maintenance_window",
                          "each.value"
                        ]
                      },
                      "start_minute": {
                        "references": [
                          "each.value.maintenance_window.maintenance_minute",
                          "each.value.maintenance_window",
                          "each.value"
                        ]
                      }
                    }
                  ],
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "point_in_time_restore_time_in_utc": {
                    "references": [
                      "each.value.point_in_time_restore_time_in_utc",
                      "each.value"
                    ]
                  },
                  "private_dns_zone_id": {
                    "references": [
                      "azurerm_private_dns_zone.psql_dns[0].id",
                      "azurerm_private_dns_zone.psql_dns[0]",
                      "azurerm_private_dns_zone.psql_dns"
                    ]
                  },
                  "public_network_access_enabled": {
                    "constant_value": false
                  },
                  "resource_group_name": {
                    "references": [
                      "var.resource_groups",
                      "azurerm_resource_group.db_rgs[\"psql\"].name",
                      "azurerm_resource_group.db_rgs[\"psql\"]",
                      "azurerm_resource_group.db_rgs",
                      "azurerm_resource_group.ud_rgs[\"db\"].name",
                      "azurerm_resource_group.ud_rgs[\"db\"]",
                      "azurerm_resource_group.ud_rgs"
                    ]
                  },
                  "sku_name": {
                    "references": [
                      "local.dbaas_sizing_map",
                      "each.value.dbaas_standard_size",
                      "each.value"
                    ]
                  },
                  "source_server_id": {
                    "references": [
                      "each.value.source_server_id",
                      "each.value"
                    ]
                  },
                  "storage_mb": {
                    "references": [
                      "each.value.storage_mb",
                      "each.value",
                      "local.dbaas_sizing_map",
                      "each.value.dbaas_standard_size",
                      "each.value",
                      "each.value.storage_mb",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_psql_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_psql_tags"
                    ]
                  },
                  "version": {
                    "references": [
                      "each.value.version",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.psqls"
                  ]
                },
                "depends_on": [
                  "azurerm_private_dns_zone_virtual_network_link.psql_vnetlink_postgresqldb",
                  "azurerm_private_dns_zone_virtual_network_link.psql_vnetlink_infoblox_com1_usc",
                  "azurerm_private_dns_zone_virtual_network_link.psql_vnetlink_infoblox_com1_use2",
                  "azurerm_private_dns_zone_virtual_network_link.psql_vnetlink_infoblox_securehub_usc",
                  "azurerm_private_dns_zone_virtual_network_link.psql_vnetlink_infoblox_securehub_use2"
                ]
              },
              {
                "address": "azurerm_postgresql_flexible_server_active_directory_administrator.psql_aad_admin_automation_spn",
                "mode": "managed",
                "type": "azurerm_postgresql_flexible_server_active_directory_administrator",
                "name": "psql_aad_admin_automation_spn",
                "provider_config_key": "azurerm",
                "expressions": {
                  "object_id": {
                    "references": [
                      "local.automation_spn.object_id",
                      "local.automation_spn"
                    ]
                  },
                  "principal_name": {
                    "references": [
                      "local.automation_spn.display_name",
                      "local.automation_spn"
                    ]
                  },
                  "principal_type": {
                    "constant_value": "ServicePrincipal"
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "server_name": {
                    "references": [
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "tenant_id": {
                    "references": [
                      "data.azurerm_client_config.current.tenant_id",
                      "data.azurerm_client_config.current"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.psqls"
                  ]
                }
              },
              {
                "address": "azurerm_postgresql_flexible_server_active_directory_administrator.psql_aad_admin_dba_ops",
                "mode": "managed",
                "type": "azurerm_postgresql_flexible_server_active_directory_administrator",
                "name": "psql_aad_admin_dba_ops",
                "provider_config_key": "azurerm",
                "expressions": {
                  "object_id": {
                    "references": [
                      "each.value.test_mode",
                      "each.value"
                    ]
                  },
                  "principal_name": {
                    "references": [
                      "each.value.test_mode",
                      "each.value"
                    ]
                  },
                  "principal_type": {
                    "constant_value": "Group"
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "server_name": {
                    "references": [
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "tenant_id": {
                    "references": [
                      "data.azurerm_client_config.current.tenant_id",
                      "data.azurerm_client_config.current"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.psqls"
                  ]
                }
              },
              {
                "address": "azurerm_postgresql_flexible_server_configuration.psql_extensions",
                "mode": "managed",
                "type": "azurerm_postgresql_flexible_server_configuration",
                "name": "psql_extensions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "constant_value": "azure.extensions"
                  },
                  "server_id": {
                    "references": [
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.psql_flex_server_name",
                      "each.value"
                    ]
                  },
                  "value": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.psqls_databases_extensions"
                  ]
                },
                "depends_on": [
                  "azurerm_postgresql_flexible_server_database.flex_db"
                ]
              },
              {
                "address": "azurerm_postgresql_flexible_server_configuration.psql_shared_library",
                "mode": "managed",
                "type": "azurerm_postgresql_flexible_server_configuration",
                "name": "psql_shared_library",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "constant_value": "shared_preload_libraries"
                  },
                  "server_id": {
                    "references": [
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.psql_flex_server_name",
                      "each.value"
                    ]
                  },
                  "value": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.psqls_databases_extensions",
                    "local.psqls_databases_extensions"
                  ]
                },
                "depends_on": [
                  "azurerm_postgresql_flexible_server_configuration.psql_extensions"
                ]
              },
              {
                "address": "azurerm_postgresql_flexible_server_database.flex_db",
                "mode": "managed",
                "type": "azurerm_postgresql_flexible_server_database",
                "name": "flex_db",
                "provider_config_key": "azurerm",
                "expressions": {
                  "charset": {
                    "references": [
                      "each.value.charset",
                      "each.value"
                    ]
                  },
                  "collation": {
                    "references": [
                      "each.value.collation",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.db_name",
                      "each.value",
                      "each.value.db_env",
                      "each.value"
                    ]
                  },
                  "server_id": {
                    "references": [
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.psql_name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.psqls_databases"
                  ]
                }
              },
              {
                "address": "azurerm_private_dns_zone.mysql_dns",
                "mode": "managed",
                "type": "azurerm_private_dns_zone",
                "name": "mysql_dns",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "var.application_id",
                      "local.subscription_name_suffix",
                      "local.short_location_name",
                      "var.environment"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.resource_groups",
                      "azurerm_resource_group.db_rgs[\"mysql\"].name",
                      "azurerm_resource_group.db_rgs[\"mysql\"]",
                      "azurerm_resource_group.db_rgs",
                      "azurerm_resource_group.ud_rgs[\"mysql\"].name",
                      "azurerm_resource_group.ud_rgs[\"mysql\"]",
                      "azurerm_resource_group.ud_rgs"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.dns_zone_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.mysqls"
                  ]
                }
              },
              {
                "address": "azurerm_private_dns_zone.private_dns_zones",
                "mode": "managed",
                "type": "azurerm_private_dns_zone",
                "name": "private_dns_zones",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.network_rg[0].name",
                      "azurerm_resource_group.network_rg[0]",
                      "azurerm_resource_group.network_rg"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.dns_zone_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.private_dns_zones",
                    "var.psqls",
                    "local.is_client",
                    "var.is_host"
                  ]
                }
              },
              {
                "address": "azurerm_private_dns_zone.psql_dns",
                "mode": "managed",
                "type": "azurerm_private_dns_zone",
                "name": "psql_dns",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "var.application_id",
                      "local.subscription_name_suffix",
                      "local.short_location_name",
                      "var.environment"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.resource_groups",
                      "azurerm_resource_group.db_rgs[\"psql\"].name",
                      "azurerm_resource_group.db_rgs[\"psql\"]",
                      "azurerm_resource_group.db_rgs",
                      "azurerm_resource_group.ud_rgs[\"db\"].name",
                      "azurerm_resource_group.ud_rgs[\"db\"]",
                      "azurerm_resource_group.ud_rgs"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.dns_zone_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.psqls"
                  ]
                }
              },
              {
                "address": "azurerm_private_dns_zone_virtual_network_link.mysql_vnetlink_infoblox_com1_usc",
                "mode": "managed",
                "type": "azurerm_private_dns_zone_virtual_network_link",
                "name": "mysql_vnetlink_infoblox_com1_usc",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "constant_value": "infoblox-cvs-usc-com1"
                  },
                  "private_dns_zone_name": {
                    "references": [
                      "azurerm_private_dns_zone.mysql_dns[0].name",
                      "azurerm_private_dns_zone.mysql_dns[0]",
                      "azurerm_private_dns_zone.mysql_dns"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.resource_groups",
                      "azurerm_resource_group.db_rgs[\"mysql\"].name",
                      "azurerm_resource_group.db_rgs[\"mysql\"]",
                      "azurerm_resource_group.db_rgs",
                      "azurerm_resource_group.ud_rgs[\"mysql\"].name",
                      "azurerm_resource_group.ud_rgs[\"mysql\"]",
                      "azurerm_resource_group.ud_rgs"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.dns_zone_tags"
                    ]
                  },
                  "virtual_network_id": {
                    "constant_value": "/subscriptions/7f81ff32-74f5-45e3-bc03-a8141f72754d/resourceGroups/RG-CVS-USC-COM-1/providers/Microsoft.Network/virtualNetworks/VN-CVS-USC-COM-1"
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "azurerm_private_dns_zone.mysql_dns"
                  ]
                },
                "depends_on": [
                  "azurerm_private_dns_zone.mysql_dns"
                ]
              },
              {
                "address": "azurerm_private_dns_zone_virtual_network_link.mysql_vnetlink_infoblox_com1_use2",
                "mode": "managed",
                "type": "azurerm_private_dns_zone_virtual_network_link",
                "name": "mysql_vnetlink_infoblox_com1_use2",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "constant_value": "infoblox-cvs-use2-com1"
                  },
                  "private_dns_zone_name": {
                    "references": [
                      "azurerm_private_dns_zone.mysql_dns[0].name",
                      "azurerm_private_dns_zone.mysql_dns[0]",
                      "azurerm_private_dns_zone.mysql_dns"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.resource_groups",
                      "azurerm_resource_group.db_rgs[\"mysql\"].name",
                      "azurerm_resource_group.db_rgs[\"mysql\"]",
                      "azurerm_resource_group.db_rgs",
                      "azurerm_resource_group.ud_rgs[\"mysql\"].name",
                      "azurerm_resource_group.ud_rgs[\"mysql\"]",
                      "azurerm_resource_group.ud_rgs"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.dns_zone_tags"
                    ]
                  },
                  "virtual_network_id": {
                    "constant_value": "/subscriptions/7f81ff32-74f5-45e3-bc03-a8141f72754d/resourceGroups/RG-CVS-USE2-COM-1/providers/Microsoft.Network/virtualNetworks/VN-CVS-USE2-COM-1"
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "azurerm_private_dns_zone.mysql_dns"
                  ]
                },
                "depends_on": [
                  "azurerm_private_dns_zone.mysql_dns"
                ]
              },
              {
                "address": "azurerm_private_dns_zone_virtual_network_link.mysql_vnetlink_infoblox_securehub_usc",
                "mode": "managed",
                "type": "azurerm_private_dns_zone_virtual_network_link",
                "name": "mysql_vnetlink_infoblox_securehub_usc",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "constant_value": "infoblox-cvs-usc-securehub"
                  },
                  "private_dns_zone_name": {
                    "references": [
                      "azurerm_private_dns_zone.mysql_dns[0].name",
                      "azurerm_private_dns_zone.mysql_dns[0]",
                      "azurerm_private_dns_zone.mysql_dns"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.resource_groups",
                      "azurerm_resource_group.db_rgs[\"mysql\"].name",
                      "azurerm_resource_group.db_rgs[\"mysql\"]",
                      "azurerm_resource_group.db_rgs",
                      "azurerm_resource_group.ud_rgs[\"mysql\"].name",
                      "azurerm_resource_group.ud_rgs[\"mysql\"]",
                      "azurerm_resource_group.ud_rgs"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.dns_zone_tags"
                    ]
                  },
                  "virtual_network_id": {
                    "constant_value": "/subscriptions/29ea5d6f-8539-4a95-8198-ca801994cbdb/resourceGroups/rg-cvsntwkhub000/providers/Microsoft.Network/virtualNetworks/vnet-cvshub001"
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "azurerm_private_dns_zone.mysql_dns"
                  ]
                },
                "depends_on": [
                  "azurerm_private_dns_zone.mysql_dns"
                ]
              },
              {
                "address": "azurerm_private_dns_zone_virtual_network_link.mysql_vnetlink_infoblox_securehub_use2",
                "mode": "managed",
                "type": "azurerm_private_dns_zone_virtual_network_link",
                "name": "mysql_vnetlink_infoblox_securehub_use2",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "constant_value": "infoblox-cvs-use2-securehub"
                  },
                  "private_dns_zone_name": {
                    "references": [
                      "azurerm_private_dns_zone.mysql_dns[0].name",
                      "azurerm_private_dns_zone.mysql_dns[0]",
                      "azurerm_private_dns_zone.mysql_dns"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.resource_groups",
                      "azurerm_resource_group.db_rgs[\"mysql\"].name",
                      "azurerm_resource_group.db_rgs[\"mysql\"]",
                      "azurerm_resource_group.db_rgs",
                      "azurerm_resource_group.ud_rgs[\"mysql\"].name",
                      "azurerm_resource_group.ud_rgs[\"mysql\"]",
                      "azurerm_resource_group.ud_rgs"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.dns_zone_tags"
                    ]
                  },
                  "virtual_network_id": {
                    "constant_value": "/subscriptions/59b2cd00-9406-4a41-a772-e073dbe19796/resourceGroups/rg-cvsntwkhub000/providers/Microsoft.Network/virtualNetworks/vnet-cvshub000"
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "azurerm_private_dns_zone.mysql_dns"
                  ]
                },
                "depends_on": [
                  "azurerm_private_dns_zone.mysql_dns"
                ]
              },
              {
                "address": "azurerm_private_dns_zone_virtual_network_link.mysql_vnetlink_mysqldb",
                "mode": "managed",
                "type": "azurerm_private_dns_zone_virtual_network_link",
                "name": "mysql_vnetlink_mysqldb",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "constant_value": "mysqldb"
                  },
                  "private_dns_zone_name": {
                    "references": [
                      "azurerm_private_dns_zone.mysql_dns[0].name",
                      "azurerm_private_dns_zone.mysql_dns[0]",
                      "azurerm_private_dns_zone.mysql_dns"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.resource_groups",
                      "azurerm_resource_group.db_rgs[\"mysql\"].name",
                      "azurerm_resource_group.db_rgs[\"mysql\"]",
                      "azurerm_resource_group.db_rgs",
                      "azurerm_resource_group.ud_rgs[\"mysql\"].name",
                      "azurerm_resource_group.ud_rgs[\"mysql\"]",
                      "azurerm_resource_group.ud_rgs"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.dns_zone_tags"
                    ]
                  },
                  "virtual_network_id": {
                    "references": [
                      "local.vnet_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "azurerm_private_dns_zone.mysql_dns"
                  ]
                },
                "depends_on": [
                  "azurerm_private_dns_zone.mysql_dns"
                ]
              },
              {
                "address": "azurerm_private_dns_zone_virtual_network_link.private_dns_network_links",
                "mode": "managed",
                "type": "azurerm_private_dns_zone_virtual_network_link",
                "name": "private_dns_network_links",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "local.vnet_name"
                    ]
                  },
                  "private_dns_zone_name": {
                    "references": [
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.network_rg[0].name",
                      "azurerm_resource_group.network_rg[0]",
                      "azurerm_resource_group.network_rg"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.dns_zone_tags"
                    ]
                  },
                  "virtual_network_id": {
                    "references": [
                      "local.vnet_id"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.private_dns_zones",
                    "var.psqls",
                    "local.is_client",
                    "var.is_host"
                  ]
                },
                "depends_on": [
                  "azurerm_private_dns_zone.private_dns_zones"
                ]
              },
              {
                "address": "azurerm_private_dns_zone_virtual_network_link.psql_vnetlink_infoblox_com1_usc",
                "mode": "managed",
                "type": "azurerm_private_dns_zone_virtual_network_link",
                "name": "psql_vnetlink_infoblox_com1_usc",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "constant_value": "infoblox-cvs-usc-com1"
                  },
                  "private_dns_zone_name": {
                    "references": [
                      "azurerm_private_dns_zone.psql_dns[0].name",
                      "azurerm_private_dns_zone.psql_dns[0]",
                      "azurerm_private_dns_zone.psql_dns"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.resource_groups",
                      "azurerm_resource_group.db_rgs[\"psql\"].name",
                      "azurerm_resource_group.db_rgs[\"psql\"]",
                      "azurerm_resource_group.db_rgs",
                      "azurerm_resource_group.ud_rgs[\"db\"].name",
                      "azurerm_resource_group.ud_rgs[\"db\"]",
                      "azurerm_resource_group.ud_rgs"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.dns_zone_tags"
                    ]
                  },
                  "virtual_network_id": {
                    "constant_value": "/subscriptions/7f81ff32-74f5-45e3-bc03-a8141f72754d/resourceGroups/RG-CVS-USC-COM-1/providers/Microsoft.Network/virtualNetworks/VN-CVS-USC-COM-1"
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "azurerm_private_dns_zone.psql_dns"
                  ]
                },
                "depends_on": [
                  "azurerm_private_dns_zone.psql_dns"
                ]
              },
              {
                "address": "azurerm_private_dns_zone_virtual_network_link.psql_vnetlink_infoblox_com1_use2",
                "mode": "managed",
                "type": "azurerm_private_dns_zone_virtual_network_link",
                "name": "psql_vnetlink_infoblox_com1_use2",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "constant_value": "infoblox-cvs-use2-com1"
                  },
                  "private_dns_zone_name": {
                    "references": [
                      "azurerm_private_dns_zone.psql_dns[0].name",
                      "azurerm_private_dns_zone.psql_dns[0]",
                      "azurerm_private_dns_zone.psql_dns"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.resource_groups",
                      "azurerm_resource_group.db_rgs[\"psql\"].name",
                      "azurerm_resource_group.db_rgs[\"psql\"]",
                      "azurerm_resource_group.db_rgs",
                      "azurerm_resource_group.ud_rgs[\"db\"].name",
                      "azurerm_resource_group.ud_rgs[\"db\"]",
                      "azurerm_resource_group.ud_rgs"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.dns_zone_tags"
                    ]
                  },
                  "virtual_network_id": {
                    "constant_value": "/subscriptions/7f81ff32-74f5-45e3-bc03-a8141f72754d/resourceGroups/RG-CVS-USE2-COM-1/providers/Microsoft.Network/virtualNetworks/VN-CVS-USE2-COM-1"
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "azurerm_private_dns_zone.psql_dns"
                  ]
                },
                "depends_on": [
                  "azurerm_private_dns_zone.psql_dns"
                ]
              },
              {
                "address": "azurerm_private_dns_zone_virtual_network_link.psql_vnetlink_infoblox_securehub_usc",
                "mode": "managed",
                "type": "azurerm_private_dns_zone_virtual_network_link",
                "name": "psql_vnetlink_infoblox_securehub_usc",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "constant_value": "infoblox-cvs-usc-securehub"
                  },
                  "private_dns_zone_name": {
                    "references": [
                      "azurerm_private_dns_zone.psql_dns[0].name",
                      "azurerm_private_dns_zone.psql_dns[0]",
                      "azurerm_private_dns_zone.psql_dns"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.resource_groups",
                      "azurerm_resource_group.db_rgs[\"psql\"].name",
                      "azurerm_resource_group.db_rgs[\"psql\"]",
                      "azurerm_resource_group.db_rgs",
                      "azurerm_resource_group.ud_rgs[\"db\"].name",
                      "azurerm_resource_group.ud_rgs[\"db\"]",
                      "azurerm_resource_group.ud_rgs"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.dns_zone_tags"
                    ]
                  },
                  "virtual_network_id": {
                    "constant_value": "/subscriptions/29ea5d6f-8539-4a95-8198-ca801994cbdb/resourceGroups/rg-cvsntwkhub000/providers/Microsoft.Network/virtualNetworks/vnet-cvshub001"
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "azurerm_private_dns_zone.psql_dns"
                  ]
                },
                "depends_on": [
                  "azurerm_private_dns_zone.psql_dns"
                ]
              },
              {
                "address": "azurerm_private_dns_zone_virtual_network_link.psql_vnetlink_infoblox_securehub_use2",
                "mode": "managed",
                "type": "azurerm_private_dns_zone_virtual_network_link",
                "name": "psql_vnetlink_infoblox_securehub_use2",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "constant_value": "infoblox-cvs-use2-securehub"
                  },
                  "private_dns_zone_name": {
                    "references": [
                      "azurerm_private_dns_zone.psql_dns[0].name",
                      "azurerm_private_dns_zone.psql_dns[0]",
                      "azurerm_private_dns_zone.psql_dns"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.resource_groups",
                      "azurerm_resource_group.db_rgs[\"psql\"].name",
                      "azurerm_resource_group.db_rgs[\"psql\"]",
                      "azurerm_resource_group.db_rgs",
                      "azurerm_resource_group.ud_rgs[\"db\"].name",
                      "azurerm_resource_group.ud_rgs[\"db\"]",
                      "azurerm_resource_group.ud_rgs"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.dns_zone_tags"
                    ]
                  },
                  "virtual_network_id": {
                    "constant_value": "/subscriptions/59b2cd00-9406-4a41-a772-e073dbe19796/resourceGroups/rg-cvsntwkhub000/providers/Microsoft.Network/virtualNetworks/vnet-cvshub000"
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "azurerm_private_dns_zone.psql_dns"
                  ]
                },
                "depends_on": [
                  "azurerm_private_dns_zone.psql_dns"
                ]
              },
              {
                "address": "azurerm_private_dns_zone_virtual_network_link.psql_vnetlink_postgresqldb",
                "mode": "managed",
                "type": "azurerm_private_dns_zone_virtual_network_link",
                "name": "psql_vnetlink_postgresqldb",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "constant_value": "postgresqldb"
                  },
                  "private_dns_zone_name": {
                    "references": [
                      "azurerm_private_dns_zone.psql_dns[0].name",
                      "azurerm_private_dns_zone.psql_dns[0]",
                      "azurerm_private_dns_zone.psql_dns"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.resource_groups",
                      "azurerm_resource_group.db_rgs[\"psql\"].name",
                      "azurerm_resource_group.db_rgs[\"psql\"]",
                      "azurerm_resource_group.db_rgs",
                      "azurerm_resource_group.ud_rgs[\"db\"].name",
                      "azurerm_resource_group.ud_rgs[\"db\"]",
                      "azurerm_resource_group.ud_rgs"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.dns_zone_tags"
                    ]
                  },
                  "virtual_network_id": {
                    "references": [
                      "local.vnet_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "azurerm_private_dns_zone.psql_dns"
                  ]
                },
                "depends_on": [
                  "azurerm_private_dns_zone.psql_dns"
                ]
              },
              {
                "address": "azurerm_private_endpoint.acr_pes",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "acr_pes",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "var.location",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  },
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.custom_dns_configs[1].ip_addresses[0]",
                          "self.custom_dns_configs[1].ip_addresses",
                          "self.custom_dns_configs[1]",
                          "self.custom_dns_configs",
                          "self",
                          "self.custom_dns_configs[1].fqdn",
                          "self.custom_dns_configs[1]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_container_registry.container_registry",
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "registry"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.acr_rg[0].name",
                      "azurerm_resource_group.acr_rg[0]",
                      "azurerm_resource_group.acr_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "each.value.external_subnet_id",
                      "each.value",
                      "each.value.external_subnet_id",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.subnet_name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.container_registry"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.adf_keyvault_pep",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "adf_keyvault_pep",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "local.env_region"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "constant_value": "adf-de-kv-privateserviceconnection"
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_key_vault.adf_keyvault[0].id",
                          "azurerm_key_vault.adf_keyvault[0]",
                          "azurerm_key_vault.adf_keyvault"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "vault"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "var.data_factory.ud_resource_group",
                      "var.data_factory",
                      "azurerm_resource_group.ud_rgs",
                      "var.data_factory.ud_resource_group",
                      "var.data_factory",
                      "azurerm_resource_group.adf_rg[0].name",
                      "azurerm_resource_group.adf_rg[0]",
                      "azurerm_resource_group.adf_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "azurerm_subnet.subnets",
                      "local.adf_subnet_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.adf_subnet_name",
                    "var.public_keyvaults",
                    "var.data_factory.legacy_adf",
                    "var.data_factory"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.adf_st_peps",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "adf_st_peps",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.private_service_connection[0].subresource_names[0]",
                          "self.private_service_connection[0].subresource_names",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].subresource_names[0]",
                          "self.private_service_connection[0].subresource_names",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].subresource_names[0]",
                          "self.private_service_connection[0].subresource_names",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.key"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "constant_value": "adfst-privateserviceconnection"
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_storage_account.adf_st[0].id",
                          "azurerm_storage_account.adf_st[0]",
                          "azurerm_storage_account.adf_st"
                        ]
                      },
                      "subresource_names": {
                        "references": [
                          "each.key"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "var.data_factory.ud_resource_group",
                      "var.data_factory",
                      "azurerm_resource_group.ud_rgs",
                      "var.data_factory.ud_resource_group",
                      "var.data_factory",
                      "azurerm_resource_group.adf_rg[0].name",
                      "azurerm_resource_group.adf_rg[0]",
                      "azurerm_resource_group.adf_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "var.data_factory.external_subnet_id",
                      "var.data_factory",
                      "var.data_factory.external_subnet_id",
                      "var.data_factory",
                      "azurerm_subnet.subnets",
                      "var.data_factory.subnet_name",
                      "var.data_factory"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.adf_subnet_name",
                    "var.data_factory.legacy_adf",
                    "var.data_factory"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.ai_kv_peps",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "ai_kv_peps",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.ai_location",
                      "each.value"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "each.value.ai_location",
                          "each.value"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_key_vault.ai_kv",
                          "each.value.ai_location",
                          "each.value"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "vault"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.secr_rg[0].name",
                      "azurerm_resource_group.secr_rg[0]",
                      "azurerm_resource_group.secr_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "each.value.subnet_id",
                      "each.value",
                      "each.value.subnet_id",
                      "each.value",
                      "each.value.subnet_name",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.subnet_name",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "local.pe_subnet_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.ai_kvs_needing_peps_static"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.ai_peps",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "ai_peps",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "each.key"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_ai_services.ai_account",
                          "each.key"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "account"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ai_rg[0].name",
                      "azurerm_resource_group.ai_rg[0]",
                      "azurerm_resource_group.ai_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "each.value.subnet_name",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.subnet_name",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "local.pe_subnet_name"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.ai_services",
                    "local.create_ai_resources"
                  ]
                },
                "depends_on": [
                  "azurerm_ai_services.ai_account"
                ]
              },
              {
                "address": "azurerm_private_endpoint.aks_de_keyvault_pep",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "aks_de_keyvault_pep",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "local.env_region",
                      "local.micro_suffix"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "constant_value": "aks-de-kv-privateserviceconnection"
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_key_vault.aks_de_keyvault[0].id",
                          "azurerm_key_vault.aks_de_keyvault[0]",
                          "azurerm_key_vault.aks_de_keyvault"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "vault"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "local.aks_rg[0].name",
                      "local.aks_rg[0]",
                      "local.aks_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "var.aks_cluster.subnet_name",
                      "var.aks_cluster",
                      "azurerm_subnet.subnets",
                      "var.aks_cluster.subnet_name",
                      "var.aks_cluster",
                      "local.aks_subnet_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.public_keyvaults"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.aks_int_keyvault_pep",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "aks_int_keyvault_pep",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "local.env_region",
                      "local.micro_suffix"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "constant_value": "aks-int-kv-privateserviceconnection"
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_key_vault.aks_int_keyvault[0].id",
                          "azurerm_key_vault.aks_int_keyvault[0]",
                          "azurerm_key_vault.aks_int_keyvault"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "vault"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "local.aks_rg[0].name",
                      "local.aks_rg[0]",
                      "local.aks_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "var.aks_cluster.subnet_name",
                      "var.aks_cluster",
                      "azurerm_subnet.subnets",
                      "var.aks_cluster.subnet_name",
                      "var.aks_cluster",
                      "local.aks_subnet_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.public_keyvaults",
                    "var.aks_cluster.key_vault_secrets_provider",
                    "var.aks_cluster"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.apim_key_vaults_pes",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "apim_key_vaults_pes",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_key_vault.apim_key_vaults",
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "vault"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "each.value.kv_external_subnet_id",
                      "each.value",
                      "each.value.kv_external_subnet_id",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.kv_subnet_name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.api_management"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.apim_peps",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "apim_peps",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_api_management.apim",
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "Gateway"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.cog_rg[0].name",
                      "azurerm_resource_group.cog_rg[0]",
                      "azurerm_resource_group.cog_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "each.value.external_subnet_id",
                      "each.value",
                      "each.value.external_subnet_id",
                      "each.value",
                      "each.value.subnet_name",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.subnet_name",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "local.pe_subnet_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.api_management"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.app_conf_pe",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "app_conf_pe",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "azurerm_app_configuration.appconfs",
                      "each.key"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "azurerm_app_configuration.appconfs",
                          "each.key"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_app_configuration.appconfs",
                          "each.key"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "configurationStores"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.app_services_rg[0].name",
                      "azurerm_resource_group.app_services_rg[0]",
                      "azurerm_resource_group.app_services_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "each.value.external_subnet_id",
                      "each.value",
                      "each.value.external_subnet_id",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.subnet_name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.app_configurations"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.base_custom_kv_pes",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "base_custom_kv_pes",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "azurerm_resource_group.secr_rg[0].location",
                      "azurerm_resource_group.secr_rg[0]",
                      "azurerm_resource_group.secr_rg"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "constant_value": "base-kv-privateserviceconnection"
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "local.custom_base_key_vault_id"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "vault"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.secr_rg[0].name",
                      "azurerm_resource_group.secr_rg[0]",
                      "azurerm_resource_group.secr_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "azurerm_subnet.subnets",
                      "local.pe_subnet_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.public_keyvaults",
                    "local.use_custom_key_vault",
                    "local.is_client"
                  ]
                },
                "depends_on": [
                  "azurerm_key_vault.base_custom_kv"
                ]
              },
              {
                "address": "azurerm_private_endpoint.base_kv_pep",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "base_kv_pep",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "azurerm_resource_group.secr_rg[0].location",
                      "azurerm_resource_group.secr_rg[0]",
                      "azurerm_resource_group.secr_rg"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "constant_value": "base-kv-privateserviceconnection"
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "local.base_kv_id"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "vault"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.secr_rg[0].name",
                      "azurerm_resource_group.secr_rg[0]",
                      "azurerm_resource_group.secr_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "azurerm_subnet.subnets",
                      "local.pe_subnet_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.public_keyvaults",
                    "local.is_spoke",
                    "local.is_client"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.cog_kv_peps",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "cog_kv_peps",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "each.value.subnet_location",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.cog_location",
                      "each.value"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "each.value.cog_location",
                          "each.value"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_key_vault.cog_kv",
                          "each.value.cog_location",
                          "each.value"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "vault"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.cog_rg[0].name",
                      "azurerm_resource_group.cog_rg[0]",
                      "azurerm_resource_group.cog_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "each.value.subnet_id",
                      "each.value",
                      "each.value.subnet_id",
                      "each.value",
                      "each.value.subnet_name",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.subnet_name",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "local.pe_subnet_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.cog_kvs_needing_peps",
                    "var.public_keyvaults"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.cog_peps",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "cog_peps",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "each.value.kind",
                          "each.value",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_cognitive_account.cogs",
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "account"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.cog_rg[0].name",
                      "azurerm_resource_group.cog_rg[0]",
                      "azurerm_resource_group.cog_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "each.value.external_subnet_id",
                      "each.value",
                      "each.value.external_subnet_id",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.subnet_name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.cognitive_services"
                  ]
                },
                "depends_on": [
                  "time_sleep.openai_dlp_propagation"
                ]
              },
              {
                "address": "azurerm_private_endpoint.cosmosdb_nosql_pes",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "cosmosdb_nosql_pes",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_cosmosdb_account.cosmosdb_nosql_account",
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "Sql"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.db_rgs[\"cdbnosql\"].name",
                      "azurerm_resource_group.db_rgs[\"cdbnosql\"]",
                      "azurerm_resource_group.db_rgs"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "azurerm_subnet.subnets",
                      "each.value.subnet_name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.cdb_nosql"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.dbk_pes",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "dbk_pes",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.subresource",
                      "each.value",
                      "azurerm_databricks_workspace.dbk",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_databricks_workspace.dbk",
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "subresource_names": {
                        "references": [
                          "each.value.subresource",
                          "each.value"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "each.value.external_subnet_id",
                      "each.value",
                      "each.value.external_subnet_id",
                      "each.value",
                      "each.value.pe_subnet_name",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.pe_subnet_name",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "local.pe_subnet_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.dbk_private_endpoints"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.diag_storage_account_pes",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "diag_storage_account_pes",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].subresource_names[0]",
                          "self.private_service_connection[0].subresource_names",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "azurerm_storage_account.diag_storage_account[0].name",
                      "azurerm_storage_account.diag_storage_account[0]",
                      "azurerm_storage_account.diag_storage_account"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "azurerm_storage_account.diag_storage_account[0].name",
                          "azurerm_storage_account.diag_storage_account[0]",
                          "azurerm_storage_account.diag_storage_account"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_storage_account.diag_storage_account[0].id",
                          "azurerm_storage_account.diag_storage_account[0]",
                          "azurerm_storage_account.diag_storage_account"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "blob"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.diag_rg[0].name",
                      "azurerm_resource_group.diag_rg[0]",
                      "azurerm_resource_group.diag_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "azurerm_subnet.subnets",
                      "local.pe_subnet_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.deploy_diag_storage"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.ehub_peps",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "ehub_peps",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "constant_value": "ehub-privateserviceconnection"
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "each.value.id",
                          "each.value"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "namespace"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.ehub_rg[0].name",
                      "azurerm_resource_group.ehub_rg[0]",
                      "azurerm_resource_group.ehub_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "azurerm_subnet.subnets",
                      "local.ehub_subnet_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "azurerm_eventhub_namespace.eventhub_namespace"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.external_pes",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "external_pes",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "data.azurerm_resources.external_pe_resources",
                          "each.key"
                        ]
                      },
                      "subresource_names": {
                        "references": [
                          "each.value.subresource_names",
                          "each.value"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "each.value.resource_group_name",
                      "each.value"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "local.micro_call",
                      "local.spoke_data.subnets",
                      "local.spoke_data",
                      "each.value.subnet_name",
                      "each.value",
                      "each.value.subnet_id",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.external_pe_list_subresources",
                    "local.is_spoke",
                    "local.is_peered"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.linux_funapps_pe",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "linux_funapps_pe",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  },
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "azurerm_linux_function_app.linux_funapps",
                      "each.key"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "azurerm_linux_function_app.linux_funapps",
                          "each.key"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_linux_function_app.linux_funapps",
                          "each.key"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "sites"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.app_services_rg[0].name",
                      "azurerm_resource_group.app_services_rg[0]",
                      "azurerm_resource_group.app_services_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "each.value.external_pe_subnet_id",
                      "each.value",
                      "each.value.external_pe_subnet_id",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.pe_subnet_name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.linux_funapps"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.linux_webapps_pe",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "linux_webapps_pe",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  },
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "azurerm_linux_web_app.linux_webapps",
                      "each.key"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "azurerm_linux_web_app.linux_webapps",
                          "each.key"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_linux_web_app.linux_webapps",
                          "each.key"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "sites"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.app_services_rg[0].name",
                      "azurerm_resource_group.app_services_rg[0]",
                      "azurerm_resource_group.app_services_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "each.value.external_subnet_id",
                      "each.value",
                      "each.value.external_subnet_id",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.subnet_name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.linux_webapps"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.logicapps_pe",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "logicapps_pe",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  },
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.azapi_deploy_mode",
                      "each.value",
                      "azurerm_logic_app_standard.logicapps",
                      "each.key",
                      "azapi_resource.azapi_logicapps",
                      "each.key"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "each.value.azapi_deploy_mode",
                          "each.value",
                          "azurerm_logic_app_standard.logicapps",
                          "each.key",
                          "azapi_resource.azapi_logicapps",
                          "each.key"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "each.value.azapi_deploy_mode",
                          "each.value",
                          "azurerm_logic_app_standard.logicapps",
                          "each.key",
                          "azapi_resource.azapi_logicapps",
                          "each.key"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "sites"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.app_services_rg[0].name",
                      "azurerm_resource_group.app_services_rg[0]",
                      "azurerm_resource_group.app_services_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "each.value.external_pe_subnet_id",
                      "each.value",
                      "each.value.external_pe_subnet_id",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.pe_subnet_name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.logic_apps"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.pes",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "pes",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.pe_name",
                      "each.value"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "each.value.pe_name",
                          "each.value"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "data.azurerm_resources.pe_resources",
                          "each.key"
                        ]
                      },
                      "subresource_names": {
                        "references": [
                          "each.value.subresource_names",
                          "each.value"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.network_rg[0].name",
                      "azurerm_resource_group.network_rg[0]",
                      "azurerm_resource_group.network_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "local.micro_call",
                      "local.spoke_data.subnets",
                      "local.spoke_data",
                      "each.value.subnet_name",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.subnet_name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.pe_list"
                  ]
                },
                "depends_on": [
                  "azurerm_key_vault_key.base_kv_key"
                ]
              },
              {
                "address": "azurerm_private_endpoint.redis_cache_pep",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "redis_cache_pep",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_redis_cache.redis_cache",
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "redisCache"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "var.resource_groups",
                      "azurerm_resource_group.db_rgs[\"redis\"].name",
                      "azurerm_resource_group.db_rgs[\"redis\"]",
                      "azurerm_resource_group.db_rgs",
                      "azurerm_resource_group.ud_rgs[\"redis\"].name",
                      "azurerm_resource_group.ud_rgs[\"redis\"]",
                      "azurerm_resource_group.ud_rgs"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "azurerm_subnet.subnets",
                      "each.value.subnet_name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_redis_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_redis_tags"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "30m"
                    },
                    "delete": {
                      "constant_value": "30m"
                    },
                    "read": {
                      "constant_value": "15m"
                    }
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.redis_caches"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.rsv_pes_bkp",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "rsv_pes_bkp",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.custom_dns_configs[0].ip_addresses[0]",
                          "self.custom_dns_configs[0].ip_addresses",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  },
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[1].fqdn",
                          "self.custom_dns_configs[1]",
                          "self.custom_dns_configs",
                          "self",
                          "self.custom_dns_configs[1].ip_addresses[0]",
                          "self.custom_dns_configs[1].ip_addresses",
                          "self.custom_dns_configs[1]",
                          "self.custom_dns_configs",
                          "self",
                          "self.custom_dns_configs[1].fqdn",
                          "self.custom_dns_configs[1]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_recovery_services_vault.vault",
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "AzureBackup"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.backup_rg[0].name",
                      "azurerm_resource_group.backup_rg[0]",
                      "azurerm_resource_group.backup_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "azurerm_subnet.subnets",
                      "each.value.subnet_name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.recovery_services_vaults"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.srch_pes",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "srch_pes",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "each.value.deploy_mode",
                          "each.value",
                          "azapi_resource.api_srch",
                          "each.value.name",
                          "each.value",
                          "azurerm_search_service.srchs",
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "searchService"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.srch_rg[0].name",
                      "azurerm_resource_group.srch_rg[0]",
                      "azurerm_resource_group.srch_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "each.value.external_subnet_id",
                      "each.value",
                      "each.value.external_subnet_id",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.subnet_name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.search_services"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.ud_key_vaults_pes",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "ud_key_vaults_pes",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_key_vault.ud_key_vaults",
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "vault"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "each.value.resource_group_name",
                      "each.value",
                      "each.value.resource_group_name",
                      "each.value",
                      "each.value.resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.resource_group",
                      "each.value",
                      "local.secr_rg_name"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "each.value.external_subnet_id",
                      "each.value",
                      "each.value.external_subnet_id",
                      "each.value",
                      "local.full_micro",
                      "local.spoke_data.subnets",
                      "local.spoke_data",
                      "each.value.subnet_name",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.subnet_name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.key_vaults"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.ud_service_bus_pes",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "ud_service_bus_pes",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_servicebus_namespace.sb_ns",
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "namespace"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.sb_rg[0].name",
                      "azurerm_resource_group.sb_rg[0]",
                      "azurerm_resource_group.sb_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "each.value.external_subnet_id",
                      "each.value",
                      "each.value.external_subnet_id",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.subnet_name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.service_bus_namespace"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.ud_storage_accounts_pes",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "ud_storage_accounts_pes",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.private_service_connection[0].subresource_names[0]",
                          "self.private_service_connection[0].subresource_names",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].subresource_names[0]",
                          "self.private_service_connection[0].subresource_names",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].subresource_names[0]",
                          "self.private_service_connection[0].subresource_names",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.subresource",
                      "each.value",
                      "azurerm_storage_account.ud_storage_accounts",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_storage_account.ud_storage_accounts",
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "subresource_names": {
                        "references": [
                          "each.value.subresource",
                          "each.value"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "azurerm_subnet.subnets",
                      "each.value.subnet_name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.st_private_endpoints"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.vm_kv_pep",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "vm_kv_pep",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "constant_value": "$vm-kv-privateserviceconnection"
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_key_vault.vm_kv[0].id",
                          "azurerm_key_vault.vm_kv[0]",
                          "azurerm_key_vault.vm_kv"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "vault"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "var.external_vm_settings.vm_rg",
                      "var.external_vm_settings",
                      "azurerm_resource_group.ud_rgs",
                      "var.external_vm_settings.ud_resource_group",
                      "var.external_vm_settings"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "data.azurerm_subnet.ext_vm_subnet[0].id",
                      "data.azurerm_subnet.ext_vm_subnet[0]",
                      "data.azurerm_subnet.ext_vm_subnet"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "data.azurerm_subnet.ext_vm_subnet[0].id",
                    "data.azurerm_subnet.ext_vm_subnet[0]",
                    "data.azurerm_subnet.ext_vm_subnet"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.windows_funapps_pe",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "windows_funapps_pe",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  },
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "azurerm_windows_function_app.windows_funapps",
                      "each.key"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "azurerm_windows_function_app.windows_funapps",
                          "each.key"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_windows_function_app.windows_funapps",
                          "each.key"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "sites"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.app_services_rg[0].name",
                      "azurerm_resource_group.app_services_rg[0]",
                      "azurerm_resource_group.app_services_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "each.value.external_pe_subnet_id",
                      "each.value",
                      "each.value.external_pe_subnet_id",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.pe_subnet_name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.windows_funapps"
                  ]
                }
              },
              {
                "address": "azurerm_private_endpoint.windows_webapps_pe",
                "mode": "managed",
                "type": "azurerm_private_endpoint",
                "name": "windows_webapps_pe",
                "provider_config_key": "azurerm",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  },
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self",
                          "self.private_service_connection[0].private_ip_address",
                          "self.private_service_connection[0]",
                          "self.private_service_connection",
                          "self",
                          "self.custom_dns_configs[0].fqdn",
                          "self.custom_dns_configs[0]",
                          "self.custom_dns_configs",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "azurerm_windows_web_app.windows_webapps",
                      "each.key"
                    ]
                  },
                  "private_service_connection": [
                    {
                      "is_manual_connection": {
                        "constant_value": false
                      },
                      "name": {
                        "references": [
                          "azurerm_windows_web_app.windows_webapps",
                          "each.key"
                        ]
                      },
                      "private_connection_resource_id": {
                        "references": [
                          "azurerm_windows_web_app.windows_webapps",
                          "each.key"
                        ]
                      },
                      "subresource_names": {
                        "constant_value": [
                          "sites"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.app_services_rg[0].name",
                      "azurerm_resource_group.app_services_rg[0]",
                      "azurerm_resource_group.app_services_rg"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "each.value.external_subnet_id",
                      "each.value",
                      "each.value.external_subnet_id",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.subnet_name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.windows_webapps"
                  ]
                }
              },
              {
                "address": "azurerm_public_ip.additional_apim_public_ip",
                "mode": "managed",
                "type": "azurerm_public_ip",
                "name": "additional_apim_public_ip",
                "provider_config_key": "azurerm",
                "expressions": {
                  "allocation_method": {
                    "references": [
                      "each.value.pip_allocation_method",
                      "each.value"
                    ]
                  },
                  "domain_name_label": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "local.location_map",
                      "each.value.additional_location.location",
                      "each.value.additional_location",
                      "each.value",
                      "each.key"
                    ]
                  },
                  "location": {
                    "references": [
                      "each.value.additional_location.location",
                      "each.value.additional_location",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "local.location_map",
                      "each.value.additional_location.location",
                      "each.value.additional_location",
                      "each.value",
                      "each.key"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value"
                    ]
                  },
                  "sku": {
                    "references": [
                      "each.value.pip_sku",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.api_management"
                  ]
                }
              },
              {
                "address": "azurerm_public_ip.apim_public_ip",
                "mode": "managed",
                "type": "azurerm_public_ip",
                "name": "apim_public_ip",
                "provider_config_key": "azurerm",
                "expressions": {
                  "allocation_method": {
                    "references": [
                      "each.value.pip_allocation_method",
                      "each.value"
                    ]
                  },
                  "domain_name_label": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "local.env_region",
                      "each.key"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "local.env_region",
                      "each.key"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value"
                    ]
                  },
                  "sku": {
                    "references": [
                      "each.value.pip_sku",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.api_management"
                  ]
                }
              },
              {
                "address": "azurerm_recovery_services_vault.vault",
                "mode": "managed",
                "type": "azurerm_recovery_services_vault",
                "name": "vault",
                "provider_config_key": "azurerm",
                "expressions": {
                  "cross_region_restore_enabled": {
                    "references": [
                      "each.value.cross_region_restore_enabled",
                      "each.value"
                    ]
                  },
                  "encryption": [
                    {
                      "infrastructure_encryption_enabled": {
                        "constant_value": false
                      },
                      "key_id": {
                        "references": [
                          "local.base_key_id"
                        ]
                      },
                      "use_system_assigned_identity": {
                        "constant_value": true
                      }
                    }
                  ],
                  "identity": [
                    {
                      "identity_ids": {
                        "references": [
                          "local.base_kv_uai_id"
                        ]
                      },
                      "type": {
                        "constant_value": "SystemAssigned, UserAssigned"
                      }
                    }
                  ],
                  "immutability": {
                    "references": [
                      "each.value.immutability",
                      "each.value"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "public_network_access_enabled": {
                    "constant_value": false
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.backup_rg[0].name",
                      "azurerm_resource_group.backup_rg[0]",
                      "azurerm_resource_group.backup_rg"
                    ]
                  },
                  "sku": {
                    "constant_value": "Standard"
                  },
                  "soft_delete_enabled": {
                    "constant_value": false
                  },
                  "storage_mode_type": {
                    "references": [
                      "each.value.storage_mode_type",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.recovery_services_vaults"
                  ]
                },
                "depends_on": [
                  "azurerm_role_assignment.kv_access_rsv_uai"
                ]
              },
              {
                "address": "azurerm_redis_cache.redis_cache",
                "mode": "managed",
                "type": "azurerm_redis_cache",
                "name": "redis_cache",
                "provider_config_key": "azurerm",
                "expressions": {
                  "capacity": {
                    "references": [
                      "each.value.capacity",
                      "each.value"
                    ]
                  },
                  "enable_non_ssl_port": {
                    "constant_value": false
                  },
                  "family": {
                    "references": [
                      "each.value.tier",
                      "each.value"
                    ]
                  },
                  "identity": [
                    {
                      "identity_ids": {
                        "references": [
                          "azurerm_user_assigned_identity.base_kv_uai[0].id",
                          "azurerm_user_assigned_identity.base_kv_uai[0]",
                          "azurerm_user_assigned_identity.base_kv_uai"
                        ]
                      },
                      "type": {
                        "constant_value": "UserAssigned"
                      }
                    }
                  ],
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "minimum_tls_version": {
                    "constant_value": "1.2"
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "patch_schedule": [
                    {
                      "day_of_week": {
                        "references": [
                          "each.value.patch_day_of_week",
                          "each.value"
                        ]
                      },
                      "maintenance_window": {
                        "references": [
                          "each.value.patch_window_length",
                          "each.value"
                        ]
                      },
                      "start_hour_utc": {
                        "references": [
                          "each.value.patch_start_hour_utc",
                          "each.value"
                        ]
                      }
                    }
                  ],
                  "public_network_access_enabled": {
                    "constant_value": false
                  },
                  "redis_version": {
                    "constant_value": 6
                  },
                  "resource_group_name": {
                    "references": [
                      "var.resource_groups",
                      "azurerm_resource_group.db_rgs[\"redis\"].name",
                      "azurerm_resource_group.db_rgs[\"redis\"]",
                      "azurerm_resource_group.db_rgs",
                      "azurerm_resource_group.ud_rgs[\"redis\"].name",
                      "azurerm_resource_group.ud_rgs[\"redis\"]",
                      "azurerm_resource_group.ud_rgs"
                    ]
                  },
                  "sku_name": {
                    "references": [
                      "each.value.tier",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_redis_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_redis_tags"
                    ]
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "var.redis_caches"
                  ]
                }
              },
              {
                "address": "azurerm_redis_cache_access_policy.contributor_with_info",
                "mode": "managed",
                "type": "azurerm_redis_cache_access_policy",
                "name": "contributor_with_info",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "constant_value": "Data Contributor with Info"
                  },
                  "permissions": {
                    "constant_value": "+@all -@dangerous +info +cluster|info +cluster|nodes +cluster|slots allkeys"
                  },
                  "redis_cache_id": {
                    "references": [
                      "azurerm_redis_cache.redis_cache",
                      "each.value.name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.redis_caches"
                  ]
                },
                "depends_on": [
                  "azurerm_redis_cache.redis_cache"
                ]
              },
              {
                "address": "azurerm_redis_cache_access_policy_assignment.redis_cache_contributor_apa",
                "mode": "managed",
                "type": "azurerm_redis_cache_access_policy_assignment",
                "name": "redis_cache_contributor_apa",
                "provider_config_key": "azurerm",
                "expressions": {
                  "access_policy_name": {
                    "constant_value": "Data Contributor with Info"
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "object_id": {
                    "references": [
                      "azurerm_user_assigned_identity.ud_managed_identity",
                      "each.value.mi_name",
                      "each.value"
                    ]
                  },
                  "object_id_alias": {
                    "constant_value": "ContributorUserAssignedIdentity"
                  },
                  "redis_cache_id": {
                    "references": [
                      "azurerm_redis_cache.redis_cache",
                      "each.value.redis_cache_name",
                      "each.value"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "30m"
                    },
                    "delete": {
                      "constant_value": "30m"
                    },
                    "read": {
                      "constant_value": "15m"
                    }
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.data_contributor_user_defined_mis"
                  ]
                },
                "depends_on": [
                  "azurerm_redis_cache.redis_cache",
                  "azurerm_user_assigned_identity.ud_managed_identity"
                ]
              },
              {
                "address": "azurerm_redis_cache_access_policy_assignment.redis_cache_reader_apa",
                "mode": "managed",
                "type": "azurerm_redis_cache_access_policy_assignment",
                "name": "redis_cache_reader_apa",
                "provider_config_key": "azurerm",
                "expressions": {
                  "access_policy_name": {
                    "constant_value": "Data Reader"
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "object_id": {
                    "references": [
                      "azurerm_user_assigned_identity.ud_managed_identity",
                      "each.value.mi_name",
                      "each.value"
                    ]
                  },
                  "object_id_alias": {
                    "constant_value": "ReaderUserAssignedIdentity"
                  },
                  "redis_cache_id": {
                    "references": [
                      "azurerm_redis_cache.redis_cache",
                      "each.value.redis_cache_name",
                      "each.value"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "30m"
                    },
                    "delete": {
                      "constant_value": "30m"
                    },
                    "read": {
                      "constant_value": "15m"
                    }
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.data_reader_user_defined_mis"
                  ]
                },
                "depends_on": [
                  "azurerm_redis_cache.redis_cache",
                  "azurerm_user_assigned_identity.ud_managed_identity"
                ]
              },
              {
                "address": "azurerm_redis_linked_server.redis_link",
                "mode": "managed",
                "type": "azurerm_redis_linked_server",
                "name": "redis_link",
                "provider_config_key": "azurerm",
                "expressions": {
                  "linked_redis_cache_id": {
                    "references": [
                      "data.azurerm_redis_cache.secondary_cache_info",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "linked_redis_cache_location": {
                    "references": [
                      "data.azurerm_redis_cache.secondary_cache_info",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.resource_groups",
                      "azurerm_resource_group.db_rgs[\"redis\"].name",
                      "azurerm_resource_group.db_rgs[\"redis\"]",
                      "azurerm_resource_group.db_rgs",
                      "azurerm_resource_group.ud_rgs[\"redis\"].name",
                      "azurerm_resource_group.ud_rgs[\"redis\"]",
                      "azurerm_resource_group.ud_rgs"
                    ]
                  },
                  "server_role": {
                    "constant_value": "Secondary"
                  },
                  "target_redis_cache_name": {
                    "references": [
                      "azurerm_redis_cache.redis_cache",
                      "each.value.name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "var.redis_caches"
                  ]
                },
                "depends_on": [
                  "azurerm_redis_cache.redis_cache",
                  "azurerm_redis_cache_access_policy_assignment.redis_cache_reader_apa",
                  "azurerm_redis_cache_access_policy_assignment.redis_cache_contributor_apa",
                  "data.azurerm_redis_cache.secondary_cache_info"
                ]
              },
              {
                "address": "azurerm_resource_group.acr_rg",
                "mode": "managed",
                "type": "azurerm_resource_group",
                "name": "acr_rg",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.rg_name_prefix",
                      "local.rg_suffix"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.container_registry",
                    "local.use_spoke_rgs"
                  ]
                }
              },
              {
                "address": "azurerm_resource_group.adf_rg",
                "mode": "managed",
                "type": "azurerm_resource_group",
                "name": "adf_rg",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.rg_name_prefix",
                      "local.rg_suffix"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.data_factory",
                    "var.data_factory",
                    "local.use_spoke_rgs"
                  ]
                }
              },
              {
                "address": "azurerm_resource_group.ai_rg",
                "mode": "managed",
                "type": "azurerm_resource_group",
                "name": "ai_rg",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.rg_name_prefix",
                      "local.rg_suffix"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.ai_services",
                    "var.ai_services",
                    "local.use_spoke_rgs"
                  ]
                }
              },
              {
                "address": "azurerm_resource_group.aks_rg",
                "mode": "managed",
                "type": "azurerm_resource_group",
                "name": "aks_rg",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.rg_name_prefix",
                      "local.rg_suffix"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "local.use_spoke_rgs"
                  ]
                }
              },
              {
                "address": "azurerm_resource_group.app_services_rg",
                "mode": "managed",
                "type": "azurerm_resource_group",
                "name": "app_services_rg",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.rg_name_prefix",
                      "local.rg_suffix"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.subnets_with_delegation_info",
                    "var.app_service_plans",
                    "local.use_spoke_rgs"
                  ]
                }
              },
              {
                "address": "azurerm_resource_group.backup_rg",
                "mode": "managed",
                "type": "azurerm_resource_group",
                "name": "backup_rg",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.rg_name_prefix",
                      "local.rg_suffix"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.is_spoke"
                  ]
                }
              },
              {
                "address": "azurerm_resource_group.cog_rg",
                "mode": "managed",
                "type": "azurerm_resource_group",
                "name": "cog_rg",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.rg_name_prefix",
                      "local.rg_suffix"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.cognitive_services",
                    "var.cognitive_services",
                    "local.use_spoke_rgs"
                  ]
                }
              },
              {
                "address": "azurerm_resource_group.db_rgs",
                "mode": "managed",
                "type": "azurerm_resource_group",
                "name": "db_rgs",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.rg_name_prefix",
                      "each.value.resource_group.rg_suffix",
                      "each.value.resource_group",
                      "each.value",
                      "local.rg_suffix"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.db_rg_list",
                    "var.resource_groups"
                  ]
                }
              },
              {
                "address": "azurerm_resource_group.diag_rg",
                "mode": "managed",
                "type": "azurerm_resource_group",
                "name": "diag_rg",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.rg_name_prefix",
                      "local.rg_suffix"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.is_spoke",
                    "var.deploy_diag_storage"
                  ]
                }
              },
              {
                "address": "azurerm_resource_group.ehub_rg",
                "mode": "managed",
                "type": "azurerm_resource_group",
                "name": "ehub_rg",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.environment",
                      "local.short_location_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags",
                      "local.guardium_tag"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.eventhub_namespace"
                  ]
                }
              },
              {
                "address": "azurerm_resource_group.mi_rg",
                "mode": "managed",
                "type": "azurerm_resource_group",
                "name": "mi_rg",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.rg_name_prefix",
                      "local.rg_suffix"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.ud_managed_identities"
                  ]
                }
              },
              {
                "address": "azurerm_resource_group.network_rg",
                "mode": "managed",
                "type": "azurerm_resource_group",
                "name": "network_rg",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.rg_name_prefix",
                      "local.rg_suffix"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.micro_call",
                    "local.vnet_cidr",
                    "local.all_subnets",
                    "local.network_strategy",
                    "var.is_host",
                    "local.use_spoke_rgs"
                  ]
                }
              },
              {
                "address": "azurerm_resource_group.sb_rg",
                "mode": "managed",
                "type": "azurerm_resource_group",
                "name": "sb_rg",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.rg_name_prefix",
                      "local.rg_suffix"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.service_bus_namespace",
                    "local.use_spoke_rgs"
                  ]
                }
              },
              {
                "address": "azurerm_resource_group.secr_rg",
                "mode": "managed",
                "type": "azurerm_resource_group",
                "name": "secr_rg",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.rg_name_prefix",
                      "local.rg_suffix"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.is_spoke",
                    "var.log_analytics_workspace",
                    "local.micro_call"
                  ]
                }
              },
              {
                "address": "azurerm_resource_group.srch_rg",
                "mode": "managed",
                "type": "azurerm_resource_group",
                "name": "srch_rg",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.rg_name_prefix",
                      "local.rg_suffix"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.search_services",
                    "var.search_services",
                    "local.use_spoke_rgs"
                  ]
                }
              },
              {
                "address": "azurerm_resource_group.ud_rgs",
                "mode": "managed",
                "type": "azurerm_resource_group",
                "name": "ud_rgs",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.rg_name_prefix",
                      "each.value",
                      "local.rg_suffix"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.resource_group_tag_sets",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "var.resource_group_tag_sets",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.resource_groups"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.adf_kv_key_access_admin_role",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "adf_kv_key_access_admin_role",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_user_assigned_identity.base_kv_uai[0].principal_id",
                      "azurerm_user_assigned_identity.base_kv_uai[0]",
                      "azurerm_user_assigned_identity.base_kv_uai"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Administrator"
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.adf_keyvault[0].id",
                      "azurerm_key_vault.adf_keyvault[0]",
                      "azurerm_key_vault.adf_keyvault"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.adf_subnet_name",
                    "var.data_factory.legacy_adf",
                    "var.data_factory"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.adf_kv_key_access_admin_role_system_id",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "adf_kv_key_access_admin_role_system_id",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_data_factory.adf[0].identity[0].principal_id",
                      "azurerm_data_factory.adf[0].identity[0]",
                      "azurerm_data_factory.adf[0].identity",
                      "azurerm_data_factory.adf[0]",
                      "azurerm_data_factory.adf"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Administrator"
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.adf_keyvault[0].id",
                      "azurerm_key_vault.adf_keyvault[0]",
                      "azurerm_key_vault.adf_keyvault"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.adf_subnet_name",
                    "var.data_factory.legacy_adf",
                    "var.data_factory"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.ai_kv_access_ai_role",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "ai_kv_access_ai_role",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_user_assigned_identity.ai_kv_uai",
                      "each.value.location",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Cognitive Services User"
                  },
                  "scope": {
                    "references": [
                      "azurerm_ai_services.ai_account",
                      "each.value.name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.ai_services"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.ai_kv_key_access_aes_role_managed_identity",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "ai_kv_key_access_aes_role_managed_identity",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_user_assigned_identity.ai_kv_uai",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Crypto Service Encryption User"
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.ai_kv",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.ai_locations_needing_keys"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.ai_kv_key_access_cv_role_managed_identity",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "ai_kv_key_access_cv_role_managed_identity",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_ai_services.ai_account",
                      "each.key"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Crypto Service Encryption User"
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.ai_kv",
                      "each.value.location",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.ai_services"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.aks_acr_integration",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "aks_acr_integration",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].kubelet_identity[0].object_id",
                      "azurerm_kubernetes_cluster.aks_cluster[0].kubelet_identity[0]",
                      "azurerm_kubernetes_cluster.aks_cluster[0].kubelet_identity",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "AcrPull"
                  },
                  "scope": {
                    "constant_value": "/subscriptions/59b2cd00-9406-4a41-a772-e073dbe19796/resourceGroups/rg-cvsacrhub000/providers/Microsoft.ContainerRegistry/registries/acrcvshub000"
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.apim_kv_access_for_named_value",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "apim_kv_access_for_named_value",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_api_management.apim",
                      "each.key"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Secrets User"
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.apim_key_vaults",
                      "each.value.name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.api_management"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.apim_kv_cert_access_for_named_value",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "apim_kv_cert_access_for_named_value",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_api_management.apim",
                      "each.key"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Certificate User"
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.apim_key_vaults",
                      "each.value.name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.api_management"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.app_acr_integration",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "app_acr_integration",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].kubelet_identity[0].object_id",
                      "azurerm_kubernetes_cluster.aks_cluster[0].kubelet_identity[0]",
                      "azurerm_kubernetes_cluster.aks_cluster[0].kubelet_identity",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "AcrPull"
                  },
                  "scope": {
                    "references": [
                      "var.aks_cluster.acr_integration_id",
                      "var.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.aks_cluster.acr_integration_id",
                    "var.aks_cluster"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.azure_disk_encryption_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "azure_disk_encryption_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_disk_encryption_set.aks_disk_encryption_set[0].identity[0].principal_id",
                      "azurerm_disk_encryption_set.aks_disk_encryption_set[0].identity[0]",
                      "azurerm_disk_encryption_set.aks_disk_encryption_set[0].identity",
                      "azurerm_disk_encryption_set.aks_disk_encryption_set[0]",
                      "azurerm_disk_encryption_set.aks_disk_encryption_set"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Crypto Service Encryption User"
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.aks_de_keyvault[0].id",
                      "azurerm_key_vault.aks_de_keyvault[0]",
                      "azurerm_key_vault.aks_de_keyvault"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.base_custom_kv_key_access_aes_role",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "base_custom_kv_key_access_aes_role",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_disk_encryption_set.base_kv_custom_des[0].identity[0].principal_id",
                      "azurerm_disk_encryption_set.base_kv_custom_des[0].identity[0]",
                      "azurerm_disk_encryption_set.base_kv_custom_des[0].identity",
                      "azurerm_disk_encryption_set.base_kv_custom_des[0]",
                      "azurerm_disk_encryption_set.base_kv_custom_des"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Crypto Service Encryption User"
                  },
                  "scope": {
                    "references": [
                      "local.custom_base_key_vault_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.use_custom_key_vault",
                    "var.is_hub_staging"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.base_custom_kv_key_access_aes_role_managed_identity",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "base_custom_kv_key_access_aes_role_managed_identity",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_user_assigned_identity.base_kv_uai[0].principal_id",
                      "azurerm_user_assigned_identity.base_kv_uai[0]",
                      "azurerm_user_assigned_identity.base_kv_uai"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Crypto Service Encryption User"
                  },
                  "scope": {
                    "references": [
                      "local.custom_base_key_vault_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.use_custom_key_vault",
                    "var.is_hub_staging"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.base_kv_access_cog_role",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "base_kv_access_cog_role",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_user_assigned_identity.base_kv_uai[0].principal_id",
                      "azurerm_user_assigned_identity.base_kv_uai[0]",
                      "azurerm_user_assigned_identity.base_kv_uai"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Cognitive Services User"
                  },
                  "scope": {
                    "references": [
                      "azurerm_cognitive_account.cogs",
                      "each.value.name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.cognitive_services"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.base_kv_key_access_admin_role",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "base_kv_key_access_admin_role",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.key"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Administrator"
                  },
                  "scope": {
                    "references": [
                      "local.base_kv_id"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.kv_admin"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.base_kv_key_access_admin_role_dbk",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "base_kv_key_access_admin_role_dbk",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "constant_value": "7b8a316d-376e-4fef-8a36-ff56c2076a98"
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Administrator"
                  },
                  "scope": {
                    "references": [
                      "local.base_kv_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.databricks"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.base_kv_key_access_aes_role",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "base_kv_key_access_aes_role",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_disk_encryption_set.base_kv_des[0].identity[0].principal_id",
                      "azurerm_disk_encryption_set.base_kv_des[0].identity[0]",
                      "azurerm_disk_encryption_set.base_kv_des[0].identity",
                      "azurerm_disk_encryption_set.base_kv_des[0]",
                      "azurerm_disk_encryption_set.base_kv_des"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Crypto Service Encryption User"
                  },
                  "scope": {
                    "references": [
                      "local.base_kv_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.is_spoke",
                    "var.is_hub_staging"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.base_kv_key_access_aes_role_managed_identity",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "base_kv_key_access_aes_role_managed_identity",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_user_assigned_identity.base_kv_uai[0].principal_id",
                      "azurerm_user_assigned_identity.base_kv_uai[0]",
                      "azurerm_user_assigned_identity.base_kv_uai"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Crypto Service Encryption User"
                  },
                  "scope": {
                    "references": [
                      "local.base_kv_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.is_spoke",
                    "var.is_hub_staging"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.base_kv_key_access_dbw_managed_id",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "base_kv_key_access_dbw_managed_id",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_databricks_workspace.dbk",
                      "each.key"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Crypto Service Encryption User"
                  },
                  "scope": {
                    "references": [
                      "local.base_kv_id"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.databricks"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.base_kv_key_access_reader_role",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "base_kv_key_access_reader_role",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.key"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Reader"
                  },
                  "scope": {
                    "references": [
                      "local.base_kv_id"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.kv_reader"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.base_kv_key_access_user_role",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "base_kv_key_access_user_role",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.key"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Crypto Service Encryption User"
                  },
                  "scope": {
                    "references": [
                      "local.base_kv_id"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.kv_user"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.cluster_admin_group_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "cluster_admin_group_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "var.aks_cluster.cluster_admin_group_object_ids",
                      "var.aks_cluster",
                      "count.index"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Azure Kubernetes Service RBAC Cluster Admin"
                  },
                  "scope": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].id",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.aks_cluster.cluster_admin_group_object_ids",
                    "var.aks_cluster"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.cluster_admin_group_user_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "cluster_admin_group_user_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "var.aks_cluster.cluster_admin_group_object_ids",
                      "var.aks_cluster",
                      "count.index"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Azure Kubernetes Service Cluster User Role"
                  },
                  "scope": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].id",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.aks_cluster.cluster_admin_group_object_ids",
                    "var.aks_cluster"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.cluster_external_managed_identity_cluster_admin_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "cluster_external_managed_identity_cluster_admin_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_user_assigned_identity.ud_managed_identity",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Azure Kubernetes Service RBAC Cluster Admin"
                  },
                  "scope": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].id",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.external_federated_credentials"
                  ]
                },
                "depends_on": [
                  "azurerm_user_assigned_identity.ud_managed_identity",
                  "azurerm_kubernetes_cluster.aks_cluster"
                ]
              },
              {
                "address": "azurerm_role_assignment.cluster_external_managed_identity_namespace_deploy_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "cluster_external_managed_identity_namespace_deploy_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_user_assigned_identity.ud_managed_identity",
                      "each.value.identity_name",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Azure Kubernetes Service RBAC Admin"
                  },
                  "scope": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].id",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster",
                      "each.value.namespace",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.external_aks_deploy_rbac"
                  ]
                },
                "depends_on": [
                  "azurerm_user_assigned_identity.ud_managed_identity",
                  "azurerm_kubernetes_cluster.aks_cluster"
                ]
              },
              {
                "address": "azurerm_role_assignment.cluster_external_managed_identity_user_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "cluster_external_managed_identity_user_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_user_assigned_identity.ud_managed_identity",
                      "each.key"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Azure Kubernetes Service Cluster User Role"
                  },
                  "scope": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].id",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.external_aks_deploy_rbac"
                  ]
                },
                "depends_on": [
                  "azurerm_user_assigned_identity.ud_managed_identity",
                  "azurerm_kubernetes_cluster.aks_cluster"
                ]
              },
              {
                "address": "azurerm_role_assignment.cluster_gha_managed_identity_cluster_admin_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "cluster_gha_managed_identity_cluster_admin_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_user_assigned_identity.ud_managed_identity",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Azure Kubernetes Service RBAC Cluster Admin"
                  },
                  "scope": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].id",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.gha_federated_credentials"
                  ]
                },
                "depends_on": [
                  "azurerm_user_assigned_identity.ud_managed_identity",
                  "azurerm_kubernetes_cluster.aks_cluster"
                ]
              },
              {
                "address": "azurerm_role_assignment.cluster_gha_managed_identity_namespace_deploy_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "cluster_gha_managed_identity_namespace_deploy_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_user_assigned_identity.ud_managed_identity",
                      "each.value.identity_name",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Azure Kubernetes Service RBAC Admin"
                  },
                  "scope": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].id",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster",
                      "each.value.namespace",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.gha_aks_deploy_rbac_map"
                  ]
                },
                "depends_on": [
                  "azurerm_user_assigned_identity.ud_managed_identity",
                  "azurerm_kubernetes_cluster.aks_cluster"
                ]
              },
              {
                "address": "azurerm_role_assignment.cluster_gha_managed_identity_user_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "cluster_gha_managed_identity_user_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_user_assigned_identity.ud_managed_identity",
                      "each.key"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Azure Kubernetes Service Cluster User Role"
                  },
                  "scope": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].id",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.gha_aks_deploy_rbac"
                  ]
                },
                "depends_on": [
                  "azurerm_user_assigned_identity.ud_managed_identity",
                  "azurerm_kubernetes_cluster.aks_cluster"
                ]
              },
              {
                "address": "azurerm_role_assignment.cluster_reader_group_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "cluster_reader_group_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "var.aks_cluster.cluster_reader_group_object_ids",
                      "var.aks_cluster",
                      "count.index"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Azure Kubernetes Service RBAC Reader"
                  },
                  "scope": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].id",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.aks_cluster.cluster_reader_group_object_ids",
                    "var.aks_cluster"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.cluster_reader_group_user_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "cluster_reader_group_user_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "var.aks_cluster.cluster_reader_group_object_ids",
                      "var.aks_cluster",
                      "count.index"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Azure Kubernetes Service Cluster User Role"
                  },
                  "scope": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].id",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.aks_cluster.cluster_reader_group_object_ids",
                    "var.aks_cluster"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.cluster_writer_group_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "cluster_writer_group_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "var.aks_cluster.cluster_writer_group_object_ids",
                      "var.aks_cluster",
                      "count.index"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Azure Kubernetes Service RBAC Writer"
                  },
                  "scope": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].id",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.aks_cluster.cluster_writer_group_object_ids",
                    "var.aks_cluster"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.cluster_writer_group_user_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "cluster_writer_group_user_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "var.aks_cluster.cluster_writer_group_object_ids",
                      "var.aks_cluster",
                      "count.index"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Azure Kubernetes Service Cluster User Role"
                  },
                  "scope": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].id",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.aks_cluster.cluster_writer_group_object_ids",
                    "var.aks_cluster"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.cog_kv_access_cog_role",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "cog_kv_access_cog_role",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_user_assigned_identity.cog_kv_uai",
                      "each.value.location",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Cognitive Services User"
                  },
                  "scope": {
                    "references": [
                      "azurerm_cognitive_account.cogs",
                      "each.value.name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.cognitive_services"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.cog_kv_key_access_aes_role_managed_identity",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "cog_kv_key_access_aes_role_managed_identity",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_user_assigned_identity.cog_kv_uai",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Crypto Service Encryption User"
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.cog_kv",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.locations_needing_keys"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.cog_kv_key_access_cv_role_managed_identity",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "cog_kv_key_access_cv_role_managed_identity",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_cognitive_account.cogs",
                      "each.key"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Crypto Service Encryption User"
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.cog_kv",
                      "each.value.location",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.cognitive_services"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.container_registry_ud_mi_container_registry_admin_acr_delete_rbac",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "container_registry_ud_mi_container_registry_admin_acr_delete_rbac",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "AcrDelete"
                  },
                  "scope": {
                    "references": [
                      "each.value.scope",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.container_registry_ud_mi_container_registry_admin_permissions"
                  ]
                },
                "depends_on": [
                  "azurerm_user_assigned_identity.ud_managed_identity",
                  "azurerm_container_registry.container_registry"
                ]
              },
              {
                "address": "azurerm_role_assignment.container_registry_ud_mi_container_registry_admin_acr_image_signer_rbac",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "container_registry_ud_mi_container_registry_admin_acr_image_signer_rbac",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "AcrImageSigner"
                  },
                  "scope": {
                    "references": [
                      "each.value.scope",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.container_registry_ud_mi_container_registry_admin_permissions"
                  ]
                },
                "depends_on": [
                  "azurerm_user_assigned_identity.ud_managed_identity",
                  "azurerm_container_registry.container_registry"
                ]
              },
              {
                "address": "azurerm_role_assignment.container_registry_ud_mi_container_registry_admin_acr_pull_rbac",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "container_registry_ud_mi_container_registry_admin_acr_pull_rbac",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "AcrPull"
                  },
                  "scope": {
                    "references": [
                      "each.value.scope",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.container_registry_ud_mi_container_registry_admin_permissions"
                  ]
                },
                "depends_on": [
                  "azurerm_user_assigned_identity.ud_managed_identity",
                  "azurerm_container_registry.container_registry"
                ]
              },
              {
                "address": "azurerm_role_assignment.container_registry_ud_mi_container_registry_admin_acr_push_rbac",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "container_registry_ud_mi_container_registry_admin_acr_push_rbac",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "AcrPush"
                  },
                  "scope": {
                    "references": [
                      "each.value.scope",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.container_registry_ud_mi_container_registry_admin_permissions"
                  ]
                },
                "depends_on": [
                  "azurerm_user_assigned_identity.ud_managed_identity",
                  "azurerm_container_registry.container_registry"
                ]
              },
              {
                "address": "azurerm_role_assignment.cosmosdb_dml_aad_users",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "cosmosdb_dml_aad_users",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.ad_group_id",
                      "each.value"
                    ]
                  },
                  "role_definition_id": {
                    "references": [
                      "data.azurerm_subscription.current.id",
                      "data.azurerm_subscription.current"
                    ]
                  },
                  "scope": {
                    "references": [
                      "azurerm_cosmosdb_account.cosmosdb_nosql_account",
                      "each.value.account_name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.cosmos_db_dml_ad_users"
                  ]
                },
                "depends_on": [
                  "azurerm_user_assigned_identity.ud_managed_identity"
                ]
              },
              {
                "address": "azurerm_role_assignment.cosmosdb_dml_users",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "cosmosdb_dml_users",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_user_assigned_identity.ud_managed_identity",
                      "each.value.ud_mi_name",
                      "each.value"
                    ]
                  },
                  "role_definition_id": {
                    "references": [
                      "data.azurerm_subscription.current.id",
                      "data.azurerm_subscription.current"
                    ]
                  },
                  "scope": {
                    "references": [
                      "azurerm_cosmosdb_account.cosmosdb_nosql_account",
                      "each.value.account_name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.cosmos_db_dml_ud_mi_users"
                  ]
                },
                "depends_on": [
                  "azurerm_user_assigned_identity.ud_managed_identity"
                ]
              },
              {
                "address": "azurerm_role_assignment.dns_zone_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "dns_zone_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_user_assigned_identity.aks_managed_identity[0].principal_id",
                      "azurerm_user_assigned_identity.aks_managed_identity[0]",
                      "azurerm_user_assigned_identity.aks_managed_identity"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Contributor"
                  },
                  "scope": {
                    "references": [
                      "local.private_dns_zone_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.ec_apply_sp_cluster_admin_assignment",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "ec_apply_sp_cluster_admin_assignment",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "constant_value": "5b73d199-58a8-43a1-8926-c03b04b9c24f"
                  },
                  "role_definition_name": {
                    "constant_value": "Azure Kubernetes Service RBAC Cluster Admin"
                  },
                  "scope": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].id",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.ehubns_kv_cmk_access",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "ehubns_kv_cmk_access",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.identity[0].principal_id",
                      "each.value.identity[0]",
                      "each.value.identity",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Crypto Service Encryption User"
                  },
                  "scope": {
                    "references": [
                      "local.base_kv_id"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "azurerm_eventhub_namespace.eventhub_namespace"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.key_vault_admin_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "key_vault_admin_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "var.aks_cluster.key_vault_admin_group_object_ids",
                      "var.aks_cluster",
                      "count.index"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Administrator"
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.aks_int_keyvault[0].id",
                      "azurerm_key_vault.aks_int_keyvault[0]",
                      "azurerm_key_vault.aks_int_keyvault"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.aks_cluster.key_vault_secrets_provider",
                    "var.aks_cluster",
                    "var.aks_cluster.key_vault_admin_group_object_ids",
                    "var.aks_cluster"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.key_vault_web_app_routing_certificates_officer",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "key_vault_web_app_routing_certificates_officer",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "data.azurerm_user_assigned_identity.webapprouting_managed_identity[0].principal_id",
                      "data.azurerm_user_assigned_identity.webapprouting_managed_identity[0]",
                      "data.azurerm_user_assigned_identity.webapprouting_managed_identity"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Certificates Officer"
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.aks_int_keyvault[0].id",
                      "azurerm_key_vault.aks_int_keyvault[0]",
                      "azurerm_key_vault.aks_int_keyvault"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.aks_cluster.web_app_routing_enabled_preview",
                    "var.aks_cluster"
                  ]
                },
                "depends_on": [
                  "azurerm_key_vault.aks_int_keyvault",
                  "data.azurerm_user_assigned_identity.webapprouting_managed_identity[0]"
                ]
              },
              {
                "address": "azurerm_role_assignment.key_vault_web_app_routing_secrets_user",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "key_vault_web_app_routing_secrets_user",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "data.azurerm_user_assigned_identity.webapprouting_managed_identity[0].principal_id",
                      "data.azurerm_user_assigned_identity.webapprouting_managed_identity[0]",
                      "data.azurerm_user_assigned_identity.webapprouting_managed_identity"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Secrets User"
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.aks_int_keyvault[0].id",
                      "azurerm_key_vault.aks_int_keyvault[0]",
                      "azurerm_key_vault.aks_int_keyvault"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.aks_cluster.web_app_routing_enabled_preview",
                    "var.aks_cluster"
                  ]
                },
                "depends_on": [
                  "azurerm_key_vault.aks_int_keyvault",
                  "data.azurerm_user_assigned_identity.webapprouting_managed_identity[0]"
                ]
              },
              {
                "address": "azurerm_role_assignment.key_vaults_secret_provider_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "key_vaults_secret_provider_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].key_vault_secrets_provider[0].secret_identity[0].object_id",
                      "azurerm_kubernetes_cluster.aks_cluster[0].key_vault_secrets_provider[0].secret_identity[0]",
                      "azurerm_kubernetes_cluster.aks_cluster[0].key_vault_secrets_provider[0].secret_identity",
                      "azurerm_kubernetes_cluster.aks_cluster[0].key_vault_secrets_provider[0]",
                      "azurerm_kubernetes_cluster.aks_cluster[0].key_vault_secrets_provider",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Administrator"
                  },
                  "scope": {
                    "references": [
                      "azurerm_key_vault.aks_int_keyvault[0].id",
                      "azurerm_key_vault.aks_int_keyvault[0]",
                      "azurerm_key_vault.aks_int_keyvault"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.aks_cluster.key_vault_secrets_provider",
                    "var.aks_cluster"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.key_vaults_secret_provider_permissions_over_central_xpkube_kv",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "key_vaults_secret_provider_permissions_over_central_xpkube_kv",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].key_vault_secrets_provider[0].secret_identity[0].object_id",
                      "azurerm_kubernetes_cluster.aks_cluster[0].key_vault_secrets_provider[0].secret_identity[0]",
                      "azurerm_kubernetes_cluster.aks_cluster[0].key_vault_secrets_provider[0].secret_identity",
                      "azurerm_kubernetes_cluster.aks_cluster[0].key_vault_secrets_provider[0]",
                      "azurerm_kubernetes_cluster.aks_cluster[0].key_vault_secrets_provider",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Secrets User"
                  },
                  "scope": {
                    "constant_value": "/subscriptions/4ee216f7-259f-45cb-9f19-c78d239e2e12/resourceGroups/rg-corp-expkube-prod-usc-aks/providers/Microsoft.KeyVault/vaults/kv-corpexpkube0702aks"
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.aks_cluster.key_vault_secrets_provider",
                    "var.aks_cluster"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.kv_access_apim",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "kv_access_apim",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_api_management.apim",
                      "each.key"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Secrets User"
                  },
                  "scope": {
                    "references": [
                      "local.base_kv_id"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.api_management"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.kv_access_linux_funapps",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "kv_access_linux_funapps",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_linux_function_app.linux_funapps",
                      "each.key"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Secrets User"
                  },
                  "scope": {
                    "references": [
                      "local.base_kv_id"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.linux_funapps"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.kv_access_rsv",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "kv_access_rsv",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_recovery_services_vault.vault",
                      "each.key"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Crypto Service Encryption User"
                  },
                  "scope": {
                    "references": [
                      "local.base_kv_id"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.recovery_services_vaults"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.kv_access_rsv_uai",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "kv_access_rsv_uai",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_user_assigned_identity.base_kv_uai[0].principal_id",
                      "azurerm_user_assigned_identity.base_kv_uai[0]",
                      "azurerm_user_assigned_identity.base_kv_uai"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Crypto Service Encryption User"
                  },
                  "scope": {
                    "references": [
                      "local.base_kv_id"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.recovery_services_vaults"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.kv_access_windows_funapps",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "kv_access_windows_funapps",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_windows_function_app.windows_funapps",
                      "each.key"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Secrets User"
                  },
                  "scope": {
                    "references": [
                      "local.base_kv_id"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.windows_funapps"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.openai_cognitive_user_access",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "openai_cognitive_user_access",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.user_group",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Cognitive Services User"
                  },
                  "scope": {
                    "references": [
                      "azurerm_cognitive_account.cogs",
                      "each.key"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.cognitive_services"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.openai_user_access",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "openai_user_access",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.user_group",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Cognitive Services OpenAI User"
                  },
                  "scope": {
                    "references": [
                      "azurerm_cognitive_account.cogs",
                      "each.key"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.cognitive_services"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.privileged_service_principal_resource_group_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "privileged_service_principal_resource_group_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "var.aks_cluster.privileged_service_principal_object_id",
                      "var.aks_cluster"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "AKS Service Principal Operator"
                  },
                  "scope": {
                    "references": [
                      "local.aks_rg[0].id",
                      "local.aks_rg[0]",
                      "local.aks_rg"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.aks_cluster.privileged_service_principal_object_id",
                    "var.aks_cluster"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.privileged_service_principal_virtual_network_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "privileged_service_principal_virtual_network_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "var.aks_cluster.privileged_service_principal_object_id",
                      "var.aks_cluster"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "AKS Service Principal Operator"
                  },
                  "scope": {
                    "references": [
                      "var.aks_cluster.external_vnet_id",
                      "var.aks_cluster",
                      "var.aks_cluster.external_vnet_id",
                      "var.aks_cluster",
                      "local.vnet_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.aks_cluster.privileged_service_principal_object_id",
                    "var.aks_cluster"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.reader_group_role_assignment",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "reader_group_role_assignment",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.read_access_group_id",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Reader"
                  },
                  "scope": {
                    "references": [
                      "azurerm_redis_cache.redis_cache",
                      "each.value.redis_cache_name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.redis_reader_ad_groups"
                  ]
                },
                "depends_on": [
                  "azurerm_redis_cache.redis_cache"
                ]
              },
              {
                "address": "azurerm_role_assignment.resource_group_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "resource_group_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_user_assigned_identity.aks_managed_identity[0].principal_id",
                      "azurerm_user_assigned_identity.aks_managed_identity[0]",
                      "azurerm_user_assigned_identity.aks_managed_identity"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Contributor"
                  },
                  "scope": {
                    "references": [
                      "local.aks_rg[0].id",
                      "local.aks_rg[0]",
                      "local.aks_rg"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.rg_reader_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "rg_reader_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.ad_group",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Reader"
                  },
                  "scope": {
                    "references": [
                      "each.value.rg_id",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.all_rg_reader_assignments"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.route_table_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "route_table_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_user_assigned_identity.aks_managed_identity[0].principal_id",
                      "azurerm_user_assigned_identity.aks_managed_identity[0]",
                      "azurerm_user_assigned_identity.aks_managed_identity"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Network Contributor"
                  },
                  "scope": {
                    "references": [
                      "var.aks_cluster.external_subnet_route_table_id",
                      "var.aks_cluster",
                      "var.aks_cluster.external_subnet_route_table_id",
                      "var.aks_cluster",
                      "azurerm_route_table.route_tables",
                      "var.aks_cluster.subnet_name",
                      "var.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.aks_cluster.network_plugin",
                    "var.aks_cluster"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.servicebus_namespace_reader_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "servicebus_namespace_reader_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Reader"
                  },
                  "scope": {
                    "references": [
                      "azurerm_servicebus_namespace.sb_ns",
                      "each.value.service_bus_namespace",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.principal_id_and_namespace_list"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.servicebus_queue_receiver_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "servicebus_queue_receiver_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Azure Service Bus Data Receiver"
                  },
                  "scope": {
                    "references": [
                      "each.value.scope",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.queue_receiver_permissions"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.servicebus_queue_sender_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "servicebus_queue_sender_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Azure Service Bus Data Sender"
                  },
                  "scope": {
                    "references": [
                      "each.value.scope",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.queue_sender_permissions"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.servicebus_subscription_receiver_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "servicebus_subscription_receiver_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Azure Service Bus Data Receiver"
                  },
                  "scope": {
                    "references": [
                      "each.value.scope",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.subscription_receiver_permissions"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.servicebus_topic_sender_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "servicebus_topic_sender_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Azure Service Bus Data Sender"
                  },
                  "scope": {
                    "references": [
                      "each.value.scope",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.topic_sender_permissions"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.ud_acr_integration",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "ud_acr_integration",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].kubelet_identity[0].object_id",
                      "azurerm_kubernetes_cluster.aks_cluster[0].kubelet_identity[0]",
                      "azurerm_kubernetes_cluster.aks_cluster[0].kubelet_identity",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "AcrPull"
                  },
                  "scope": {
                    "references": [
                      "azurerm_container_registry.container_registry",
                      "each.value.name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.container_registry"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.ud_key_vault_certificates_officer_rbac",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "ud_key_vault_certificates_officer_rbac",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Certificates Officer"
                  },
                  "scope": {
                    "references": [
                      "each.value.scope",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.ud_key_vault_admin_permissions"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.ud_key_vault_secrets_officer_rbac",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "ud_key_vault_secrets_officer_rbac",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Secrets Officer"
                  },
                  "scope": {
                    "references": [
                      "each.value.scope",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.ud_key_vault_admin_permissions"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.ud_keyvault_crypto_user_rbac",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "ud_keyvault_crypto_user_rbac",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Crypto User"
                  },
                  "scope": {
                    "references": [
                      "each.value.scope",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.ud_key_vault_crypto_user_permissions"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.ud_keyvault_secrets_user_rbac",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "ud_keyvault_secrets_user_rbac",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Secrets User"
                  },
                  "scope": {
                    "references": [
                      "each.value.scope",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.ud_key_vault_secrets_user_permissions"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.ud_keyvault_ud_mi_crypto_user_rbac",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "ud_keyvault_ud_mi_crypto_user_rbac",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Crypto User"
                  },
                  "scope": {
                    "references": [
                      "each.value.scope",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.ud_key_vault_ud_mi_crypto_user_permissions"
                  ]
                },
                "depends_on": [
                  "azurerm_user_assigned_identity.ud_managed_identity",
                  "azurerm_key_vault.ud_key_vaults"
                ]
              },
              {
                "address": "azurerm_role_assignment.ud_keyvault_ud_mi_key_vault_admin_certificates_officer_rbac",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "ud_keyvault_ud_mi_key_vault_admin_certificates_officer_rbac",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Certificates Officer"
                  },
                  "scope": {
                    "references": [
                      "each.value.scope",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.ud_key_vault_ud_mi_key_vault_admin_permissions"
                  ]
                },
                "depends_on": [
                  "azurerm_user_assigned_identity.ud_managed_identity",
                  "azurerm_key_vault.ud_key_vaults"
                ]
              },
              {
                "address": "azurerm_role_assignment.ud_keyvault_ud_mi_key_vault_admin_crypto_officer_rbac",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "ud_keyvault_ud_mi_key_vault_admin_crypto_officer_rbac",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Crypto Officer"
                  },
                  "scope": {
                    "references": [
                      "each.value.scope",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.ud_key_vault_ud_mi_key_vault_admin_permissions"
                  ]
                },
                "depends_on": [
                  "azurerm_user_assigned_identity.ud_managed_identity",
                  "azurerm_key_vault.ud_key_vaults"
                ]
              },
              {
                "address": "azurerm_role_assignment.ud_keyvault_ud_mi_key_vault_admin_secrets_officer_rbac",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "ud_keyvault_ud_mi_key_vault_admin_secrets_officer_rbac",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Secrets Officer"
                  },
                  "scope": {
                    "references": [
                      "each.value.scope",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.ud_key_vault_ud_mi_key_vault_admin_permissions"
                  ]
                },
                "depends_on": [
                  "azurerm_user_assigned_identity.ud_managed_identity",
                  "azurerm_key_vault.ud_key_vaults"
                ]
              },
              {
                "address": "azurerm_role_assignment.ud_keyvault_ud_mi_secrets_user_rbac",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "ud_keyvault_ud_mi_secrets_user_rbac",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_user_assigned_identity.ud_managed_identity",
                      "each.value.ud_mi_name",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Secrets User"
                  },
                  "scope": {
                    "references": [
                      "each.value.scope",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.ud_key_vault_ud_mi_secrets_user_permissions"
                  ]
                },
                "depends_on": [
                  "azurerm_user_assigned_identity.ud_managed_identity",
                  "azurerm_key_vault.ud_key_vaults"
                ]
              },
              {
                "address": "azurerm_role_assignment.ud_rbac_assignments",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "ud_rbac_assignments",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "each.value.principal_id",
                      "each.value"
                    ]
                  },
                  "role_definition_name": {
                    "references": [
                      "each.value.role_definition_name",
                      "each.value"
                    ]
                  },
                  "scope": {
                    "references": [
                      "each.value.scope",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.rbac_assignment_list"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.virtual_network_permissions",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "virtual_network_permissions",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_user_assigned_identity.aks_managed_identity[0].principal_id",
                      "azurerm_user_assigned_identity.aks_managed_identity[0]",
                      "azurerm_user_assigned_identity.aks_managed_identity"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Network Contributor"
                  },
                  "scope": {
                    "references": [
                      "var.aks_cluster.external_vnet_id",
                      "var.aks_cluster",
                      "var.aks_cluster.external_vnet_id",
                      "var.aks_cluster",
                      "local.vnet_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.vm_kv_key_access_aes_role",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "vm_kv_key_access_aes_role",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_disk_encryption_set.vm_disk_encryption_set[0].identity[0].principal_id",
                      "azurerm_disk_encryption_set.vm_disk_encryption_set[0].identity[0]",
                      "azurerm_disk_encryption_set.vm_disk_encryption_set[0].identity",
                      "azurerm_disk_encryption_set.vm_disk_encryption_set[0]",
                      "azurerm_disk_encryption_set.vm_disk_encryption_set"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Crypto Service Encryption User"
                  },
                  "scope": {
                    "references": [
                      "local.vm_kv_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "data.azurerm_subnet.ext_vm_subnet[0].id",
                    "data.azurerm_subnet.ext_vm_subnet[0]",
                    "data.azurerm_subnet.ext_vm_subnet"
                  ]
                }
              },
              {
                "address": "azurerm_role_assignment.vm_kv_key_access_aes_role_managed_identity",
                "mode": "managed",
                "type": "azurerm_role_assignment",
                "name": "vm_kv_key_access_aes_role_managed_identity",
                "provider_config_key": "azurerm",
                "expressions": {
                  "principal_id": {
                    "references": [
                      "azurerm_user_assigned_identity.vm_kv_uai[0].principal_id",
                      "azurerm_user_assigned_identity.vm_kv_uai[0]",
                      "azurerm_user_assigned_identity.vm_kv_uai"
                    ]
                  },
                  "role_definition_name": {
                    "constant_value": "Key Vault Crypto Service Encryption User"
                  },
                  "scope": {
                    "references": [
                      "local.vm_kv_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "data.azurerm_subnet.ext_vm_subnet[0].id",
                    "data.azurerm_subnet.ext_vm_subnet[0]",
                    "data.azurerm_subnet.ext_vm_subnet"
                  ]
                }
              },
              {
                "address": "azurerm_route.hub_gateway_route",
                "mode": "managed",
                "type": "azurerm_route",
                "name": "hub_gateway_route",
                "provider_config_key": "azurerm.hub",
                "expressions": {
                  "address_prefix": {
                    "references": [
                      "azurerm_virtual_network.vnet[0].address_space",
                      "azurerm_virtual_network.vnet[0]",
                      "azurerm_virtual_network.vnet",
                      "each.key"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.vnet_name",
                      "each.key"
                    ]
                  },
                  "next_hop_in_ip_address": {
                    "references": [
                      "local.azfw_ip_addresses",
                      "local.region_environment"
                    ]
                  },
                  "next_hop_type": {
                    "constant_value": "VirtualAppliance"
                  },
                  "resource_group_name": {
                    "references": [
                      "local.hub_vnet_rg_map",
                      "local.region_environment"
                    ]
                  },
                  "route_table_name": {
                    "references": [
                      "data.azurerm_route_table.hub_gateway_route_table[0].name",
                      "data.azurerm_route_table.hub_gateway_route_table[0]",
                      "data.azurerm_route_table.hub_gateway_route_table"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.routing_strategy",
                    "var.is_hub",
                    "local.is_client",
                    "local.all_vnet_cidrs"
                  ]
                }
              },
              {
                "address": "azurerm_route.routes",
                "mode": "managed",
                "type": "azurerm_route",
                "name": "routes",
                "provider_config_key": "azurerm",
                "expressions": {
                  "address_prefix": {
                    "references": [
                      "each.value.address_prefix",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.route_name",
                      "each.value"
                    ]
                  },
                  "next_hop_in_ip_address": {
                    "references": [
                      "each.value"
                    ]
                  },
                  "next_hop_type": {
                    "references": [
                      "each.value.next_hop_type",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.ntwk_rg_name"
                    ]
                  },
                  "route_table_name": {
                    "references": [
                      "azurerm_route_table.route_tables",
                      "each.value.route_table_key",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.all_routes"
                  ]
                }
              },
              {
                "address": "azurerm_route_table.route_tables",
                "mode": "managed",
                "type": "azurerm_route_table",
                "name": "route_tables",
                "provider_config_key": "azurerm",
                "expressions": {
                  "disable_bgp_route_propagation": {
                    "references": [
                      "each.value.egress_type",
                      "each.value",
                      "local.uses_legacy_hub",
                      "each.value.type",
                      "each.value",
                      "var.allow_bgp",
                      "each.value.disable_bgp_route_propagation",
                      "each.value"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.ntwk_rg_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.all_subnets"
                  ]
                }
              },
              {
                "address": "azurerm_search_service.srchs",
                "mode": "managed",
                "type": "azurerm_search_service",
                "name": "srchs",
                "provider_config_key": "azurerm",
                "expressions": {
                  "customer_managed_key_enforcement_enabled": {
                    "constant_value": true
                  },
                  "identity": [
                    {
                      "type": {
                        "constant_value": "SystemAssigned"
                      }
                    }
                  ],
                  "local_authentication_enabled": {
                    "constant_value": false
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "partition_count": {
                    "references": [
                      "each.value.partition_count",
                      "each.value"
                    ]
                  },
                  "public_network_access_enabled": {
                    "constant_value": false
                  },
                  "replica_count": {
                    "references": [
                      "each.value.replica_count",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.srch_rg[0].name",
                      "azurerm_resource_group.srch_rg[0]",
                      "azurerm_resource_group.srch_rg"
                    ]
                  },
                  "sku": {
                    "references": [
                      "each.value.sku_name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.search_services"
                  ]
                }
              },
              {
                "address": "azurerm_service_plan.asps",
                "mode": "managed",
                "type": "azurerm_service_plan",
                "name": "asps",
                "provider_config_key": "azurerm",
                "expressions": {
                  "app_service_environment_id": {
                    "references": [
                      "each.value.subnet_name",
                      "each.value",
                      "azurerm_app_service_environment_v3.ases",
                      "each.value.subnet_name",
                      "each.value",
                      "each.value.ase_name",
                      "each.value",
                      "data.azurerm_resources.ases",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.key"
                    ]
                  },
                  "os_type": {
                    "references": [
                      "each.value.os_type",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.app_services_rg[0].name",
                      "azurerm_resource_group.app_services_rg[0]",
                      "azurerm_resource_group.app_services_rg"
                    ]
                  },
                  "sku_name": {
                    "references": [
                      "each.value.sku_name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "var.app_service_plans"
                  ]
                }
              },
              {
                "address": "azurerm_servicebus_namespace.sb_ns",
                "mode": "managed",
                "type": "azurerm_servicebus_namespace",
                "name": "sb_ns",
                "provider_config_key": "azurerm",
                "expressions": {
                  "capacity": {
                    "references": [
                      "each.value.capacity",
                      "each.value"
                    ]
                  },
                  "identity": [
                    {
                      "identity_ids": {
                        "references": [
                          "local.base_kv_uai_id"
                        ]
                      },
                      "type": {
                        "constant_value": "UserAssigned"
                      }
                    }
                  ],
                  "local_auth_enabled": {
                    "references": [
                      "each.value.local_auth_enabled",
                      "each.value"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "minimum_tls_version": {
                    "constant_value": "1.2"
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "network_rule_set": [
                    {
                      "public_network_access_enabled": {
                        "constant_value": false
                      },
                      "trusted_services_allowed": {
                        "references": [
                          "each.value.trusted_services_allowed",
                          "each.value"
                        ]
                      }
                    }
                  ],
                  "premium_messaging_partitions": {
                    "references": [
                      "each.value.premium_messaging_partitions",
                      "each.value"
                    ]
                  },
                  "public_network_access_enabled": {
                    "constant_value": false
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.sb_rg[0].name",
                      "azurerm_resource_group.sb_rg[0]",
                      "azurerm_resource_group.sb_rg"
                    ]
                  },
                  "sku": {
                    "constant_value": "Premium"
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  },
                  "zone_redundant": {
                    "references": [
                      "each.value.is_zone_redundant",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "var.service_bus_namespace"
                  ]
                }
              },
              {
                "address": "azurerm_servicebus_namespace_network_rule_set.sb_ns_nr",
                "mode": "managed",
                "type": "azurerm_servicebus_namespace_network_rule_set",
                "name": "sb_ns_nr",
                "provider_config_key": "azurerm",
                "expressions": {
                  "namespace_id": {
                    "references": [
                      "azurerm_servicebus_namespace.sb_ns",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "public_network_access_enabled": {
                    "constant_value": false
                  },
                  "trusted_services_allowed": {
                    "references": [
                      "each.value.trusted_services_allowed",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "var.service_bus_namespace"
                  ]
                }
              },
              {
                "address": "azurerm_servicebus_queue.queues",
                "mode": "managed",
                "type": "azurerm_servicebus_queue",
                "name": "queues",
                "provider_config_key": "azurerm",
                "expressions": {
                  "auto_delete_on_idle": {
                    "references": [
                      "each.value.auto_delete_on_idle",
                      "each.value"
                    ]
                  },
                  "dead_lettering_on_message_expiration": {
                    "references": [
                      "each.value.dead_lettering_on_message_expiration",
                      "each.value"
                    ]
                  },
                  "default_message_ttl": {
                    "references": [
                      "each.value.default_message_ttl",
                      "each.value"
                    ]
                  },
                  "duplicate_detection_history_time_window": {
                    "references": [
                      "each.value.duplicate_detection_history_time_window",
                      "each.value"
                    ]
                  },
                  "enable_batched_operations": {
                    "references": [
                      "each.value.enable_batched_operations",
                      "each.value"
                    ]
                  },
                  "enable_express": {
                    "references": [
                      "each.value.enable_express",
                      "each.value"
                    ]
                  },
                  "enable_partitioning": {
                    "references": [
                      "each.value.enable_partitioning",
                      "each.value"
                    ]
                  },
                  "forward_dead_lettered_messages_to": {
                    "references": [
                      "each.value.forward_dead_lettered_messages_to",
                      "each.value"
                    ]
                  },
                  "forward_to": {
                    "references": [
                      "each.value.forward_to",
                      "each.value"
                    ]
                  },
                  "lock_duration": {
                    "references": [
                      "each.value.lock_duration",
                      "each.value"
                    ]
                  },
                  "max_delivery_count": {
                    "references": [
                      "each.value.max_delivery_count",
                      "each.value"
                    ]
                  },
                  "max_message_size_in_kilobytes": {
                    "references": [
                      "each.value.max_message_size_in_kilobytes",
                      "each.value"
                    ]
                  },
                  "max_size_in_megabytes": {
                    "references": [
                      "each.value.max_size_in_megabytes",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "namespace_id": {
                    "references": [
                      "azurerm_servicebus_namespace.sb_ns",
                      "each.value.namespace_name",
                      "each.value"
                    ]
                  },
                  "requires_duplicate_detection": {
                    "references": [
                      "each.value.requires_duplicate_detection",
                      "each.value"
                    ]
                  },
                  "requires_session": {
                    "references": [
                      "each.value.requires_session",
                      "each.value"
                    ]
                  },
                  "status": {
                    "references": [
                      "each.value.status",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.service_bus_entities"
                  ]
                }
              },
              {
                "address": "azurerm_servicebus_subscription.subs",
                "mode": "managed",
                "type": "azurerm_servicebus_subscription",
                "name": "subs",
                "provider_config_key": "azurerm",
                "expressions": {
                  "auto_delete_on_idle": {
                    "references": [
                      "each.value.auto_delete_on_idle",
                      "each.value"
                    ]
                  },
                  "client_scoped_subscription_enabled": {
                    "references": [
                      "each.value.client_scoped_subscription_enabled",
                      "each.value"
                    ]
                  },
                  "dead_lettering_on_filter_evaluation_error": {
                    "references": [
                      "each.value.dead_lettering_on_filter_evaluation_error",
                      "each.value"
                    ]
                  },
                  "dead_lettering_on_message_expiration": {
                    "references": [
                      "each.value.dead_lettering_on_message_expiration",
                      "each.value"
                    ]
                  },
                  "default_message_ttl": {
                    "references": [
                      "each.value.default_message_ttl",
                      "each.value"
                    ]
                  },
                  "enable_batched_operations": {
                    "references": [
                      "each.value.enable_batched_operations",
                      "each.value"
                    ]
                  },
                  "forward_dead_lettered_messages_to": {
                    "references": [
                      "each.value.forward_dead_lettered_messages_to",
                      "each.value"
                    ]
                  },
                  "forward_to": {
                    "references": [
                      "each.value.forward_to",
                      "each.value"
                    ]
                  },
                  "lock_duration": {
                    "references": [
                      "each.value.lock_duration",
                      "each.value"
                    ]
                  },
                  "max_delivery_count": {
                    "references": [
                      "each.value.max_delivery_count",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "requires_session": {
                    "references": [
                      "each.value.requires_session",
                      "each.value"
                    ]
                  },
                  "status": {
                    "references": [
                      "each.value.status",
                      "each.value"
                    ]
                  },
                  "topic_id": {
                    "references": [
                      "azurerm_servicebus_topic.topics",
                      "each.value.topic_name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "var.service_bus_subscriptions"
                  ]
                }
              },
              {
                "address": "azurerm_servicebus_subscription_rule.sub_rules",
                "mode": "managed",
                "type": "azurerm_servicebus_subscription_rule",
                "name": "sub_rules",
                "provider_config_key": "azurerm",
                "expressions": {
                  "action": {
                    "references": [
                      "each.value.action",
                      "each.value"
                    ]
                  },
                  "filter_type": {
                    "references": [
                      "each.value.filter_type",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "sql_filter": {
                    "references": [
                      "each.value.sql_filter",
                      "each.value"
                    ]
                  },
                  "subscription_id": {
                    "references": [
                      "azurerm_servicebus_subscription.subs",
                      "each.value.subscription_name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.service_bus_subscription_rules"
                  ]
                }
              },
              {
                "address": "azurerm_servicebus_topic.topics",
                "mode": "managed",
                "type": "azurerm_servicebus_topic",
                "name": "topics",
                "provider_config_key": "azurerm",
                "expressions": {
                  "auto_delete_on_idle": {
                    "references": [
                      "each.value.auto_delete_on_idle",
                      "each.value"
                    ]
                  },
                  "default_message_ttl": {
                    "references": [
                      "each.value.default_message_ttl",
                      "each.value"
                    ]
                  },
                  "duplicate_detection_history_time_window": {
                    "references": [
                      "each.value.duplicate_detection_history_time_window",
                      "each.value"
                    ]
                  },
                  "enable_batched_operations": {
                    "references": [
                      "each.value.enable_batched_operations",
                      "each.value"
                    ]
                  },
                  "enable_express": {
                    "references": [
                      "each.value.enable_express",
                      "each.value"
                    ]
                  },
                  "enable_partitioning": {
                    "references": [
                      "each.value.enable_partitioning",
                      "each.value"
                    ]
                  },
                  "max_message_size_in_kilobytes": {
                    "references": [
                      "each.value.max_message_size_in_kilobytes",
                      "each.value"
                    ]
                  },
                  "max_size_in_megabytes": {
                    "references": [
                      "each.value.max_size_in_megabytes",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "namespace_id": {
                    "references": [
                      "azurerm_servicebus_namespace.sb_ns",
                      "each.value.namespace_name",
                      "each.value"
                    ]
                  },
                  "requires_duplicate_detection": {
                    "references": [
                      "each.value.requires_duplicate_detection",
                      "each.value"
                    ]
                  },
                  "status": {
                    "references": [
                      "each.value.status",
                      "each.value"
                    ]
                  },
                  "support_ordering": {
                    "references": [
                      "each.value.support_ordering",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.service_bus_entities"
                  ]
                }
              },
              {
                "address": "azurerm_storage_account.adf_st",
                "mode": "managed",
                "type": "azurerm_storage_account",
                "name": "adf_st",
                "provider_config_key": "azurerm",
                "expressions": {
                  "account_replication_type": {
                    "constant_value": "GRS"
                  },
                  "account_tier": {
                    "constant_value": "Standard"
                  },
                  "allow_nested_items_to_be_public": {
                    "constant_value": false
                  },
                  "cross_tenant_replication_enabled": {
                    "constant_value": false
                  },
                  "customer_managed_key": [
                    {
                      "key_vault_key_id": {
                        "references": [
                          "local.base_key_id"
                        ]
                      },
                      "user_assigned_identity_id": {
                        "references": [
                          "local.base_kv_uai_id"
                        ]
                      }
                    }
                  ],
                  "identity": [
                    {
                      "identity_ids": {
                        "references": [
                          "local.base_kv_uai_id"
                        ]
                      },
                      "type": {
                        "constant_value": "UserAssigned"
                      }
                    }
                  ],
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "min_tls_version": {
                    "constant_value": "TLS1_2"
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name"
                    ]
                  },
                  "public_network_access_enabled": {
                    "constant_value": false
                  },
                  "resource_group_name": {
                    "references": [
                      "var.data_factory.ud_resource_group",
                      "var.data_factory",
                      "azurerm_resource_group.ud_rgs",
                      "var.data_factory.ud_resource_group",
                      "var.data_factory",
                      "azurerm_resource_group.adf_rg[0].name",
                      "azurerm_resource_group.adf_rg[0]",
                      "azurerm_resource_group.adf_rg"
                    ]
                  },
                  "sas_policy": [
                    {
                      "expiration_period": {
                        "constant_value": "06.23:00:00"
                      }
                    }
                  ],
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 4,
                "count_expression": {
                  "references": [
                    "local.adf_subnet_name"
                  ]
                }
              },
              {
                "address": "azurerm_storage_account.diag_storage_account",
                "mode": "managed",
                "type": "azurerm_storage_account",
                "name": "diag_storage_account",
                "provider_config_key": "azurerm",
                "expressions": {
                  "account_replication_type": {
                    "constant_value": "GRS"
                  },
                  "account_tier": {
                    "constant_value": "Standard"
                  },
                  "allow_nested_items_to_be_public": {
                    "constant_value": false
                  },
                  "cross_tenant_replication_enabled": {
                    "constant_value": false
                  },
                  "customer_managed_key": [
                    {
                      "key_vault_key_id": {
                        "references": [
                          "local.base_key_id"
                        ]
                      },
                      "user_assigned_identity_id": {
                        "references": [
                          "local.base_kv_uai_id"
                        ]
                      }
                    }
                  ],
                  "identity": [
                    {
                      "identity_ids": {
                        "references": [
                          "local.base_kv_uai_id"
                        ]
                      },
                      "type": {
                        "constant_value": "UserAssigned"
                      }
                    }
                  ],
                  "location": {
                    "references": [
                      "azurerm_resource_group.diag_rg[0].location",
                      "azurerm_resource_group.diag_rg[0]",
                      "azurerm_resource_group.diag_rg"
                    ]
                  },
                  "min_tls_version": {
                    "constant_value": "TLS1_2"
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "local.st_env_region"
                    ]
                  },
                  "public_network_access_enabled": {
                    "constant_value": false
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.diag_rg[0].name",
                      "azurerm_resource_group.diag_rg[0]",
                      "azurerm_resource_group.diag_rg"
                    ]
                  },
                  "sas_policy": [
                    {
                      "expiration_period": {
                        "constant_value": "06.23:00:00"
                      }
                    }
                  ],
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 4,
                "count_expression": {
                  "references": [
                    "var.deploy_diag_storage"
                  ]
                }
              },
              {
                "address": "azurerm_storage_account.ud_storage_accounts",
                "mode": "managed",
                "type": "azurerm_storage_account",
                "name": "ud_storage_accounts",
                "provider_config_key": "azurerm",
                "expressions": {
                  "account_kind": {
                    "references": [
                      "each.value.account_kind",
                      "each.value"
                    ]
                  },
                  "account_replication_type": {
                    "references": [
                      "each.value.account_replication_type",
                      "each.value"
                    ]
                  },
                  "account_tier": {
                    "references": [
                      "each.value.account_tier",
                      "each.value"
                    ]
                  },
                  "allow_nested_items_to_be_public": {
                    "constant_value": false
                  },
                  "cross_tenant_replication_enabled": {
                    "constant_value": false
                  },
                  "customer_managed_key": [
                    {
                      "key_vault_key_id": {
                        "references": [
                          "local.base_key_id"
                        ]
                      },
                      "user_assigned_identity_id": {
                        "references": [
                          "local.base_kv_uai_id"
                        ]
                      }
                    }
                  ],
                  "identity": [
                    {
                      "identity_ids": {
                        "references": [
                          "local.base_kv_uai_id"
                        ]
                      },
                      "type": {
                        "constant_value": "UserAssigned"
                      }
                    }
                  ],
                  "is_hns_enabled": {
                    "references": [
                      "each.value.hns_enabled",
                      "each.value"
                    ]
                  },
                  "location": {
                    "references": [
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value"
                    ]
                  },
                  "min_tls_version": {
                    "constant_value": "TLS1_2"
                  },
                  "name": {
                    "references": [
                      "each.value.custom_name",
                      "each.value",
                      "each.value.custom_name",
                      "each.value",
                      "var.line_of_business",
                      "var.application_id",
                      "local.st_env_region",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "public_network_access_enabled": {
                    "references": [
                      "each.value.public_network_access_enabled",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value"
                    ]
                  },
                  "sas_policy": [
                    {
                      "expiration_period": {
                        "references": [
                          "each.value.sas_expiration_period",
                          "each.value"
                        ]
                      }
                    }
                  ],
                  "sftp_enabled": {
                    "references": [
                      "each.value.sftp_enabled",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 4,
                "for_each_expression": {
                  "references": [
                    "var.storage_accounts"
                  ]
                },
                "depends_on": [
                  "time_sleep.base_kv_role_propagation"
                ]
              },
              {
                "address": "azurerm_storage_account_network_rules.st_ntwk_rules",
                "mode": "managed",
                "type": "azurerm_storage_account_network_rules",
                "name": "st_ntwk_rules",
                "provider_config_key": "azurerm",
                "expressions": {
                  "default_action": {
                    "constant_value": "Deny"
                  },
                  "storage_account_id": {
                    "references": [
                      "azurerm_storage_account.ud_storage_accounts",
                      "each.key"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.storage_accounts"
                  ]
                }
              },
              {
                "address": "azurerm_subnet.subnets",
                "mode": "managed",
                "type": "azurerm_subnet",
                "name": "subnets",
                "provider_config_key": "azurerm",
                "expressions": {
                  "address_prefixes": {
                    "references": [
                      "each.value.cidr",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.type",
                      "each.value",
                      "each.value.type",
                      "each.value",
                      "local.name_prefix",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "private_endpoint_network_policies_enabled": {
                    "references": [
                      "local.uses_legacy_hub"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.vnet_rg_name"
                    ]
                  },
                  "service_endpoints": {
                    "references": [
                      "each.value.service_endpoints",
                      "each.value",
                      "each.value.type",
                      "each.value"
                    ]
                  },
                  "virtual_network_name": {
                    "references": [
                      "local.vnet_name"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.subnet_with_infoblox"
                  ]
                },
                "depends_on": [
                  "local.peering_resources"
                ]
              },
              {
                "address": "azurerm_subnet_network_security_group_association.subnets_nsgs_associations",
                "mode": "managed",
                "type": "azurerm_subnet_network_security_group_association",
                "name": "subnets_nsgs_associations",
                "provider_config_key": "azurerm",
                "expressions": {
                  "network_security_group_id": {
                    "references": [
                      "local.micro_call",
                      "data.azurerm_network_security_group.ext_nsg[0].id",
                      "data.azurerm_network_security_group.ext_nsg[0]",
                      "data.azurerm_network_security_group.ext_nsg",
                      "azurerm_network_security_group.network_security_group[0].id",
                      "azurerm_network_security_group.network_security_group[0]",
                      "azurerm_network_security_group.network_security_group"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "azurerm_subnet.subnets",
                      "each.key"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.subnet_with_infoblox"
                  ]
                }
              },
              {
                "address": "azurerm_subnet_route_table_association.route_table_subnet_association",
                "mode": "managed",
                "type": "azurerm_subnet_route_table_association",
                "name": "route_table_subnet_association",
                "provider_config_key": "azurerm",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "azurerm_route_table.route_tables",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "azurerm_subnet.subnets",
                      "each.value.name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.all_subnets",
                    "local.prevent_gateway_route_table_association"
                  ]
                }
              },
              {
                "address": "azurerm_user_assigned_identity.ai_kv_uai",
                "mode": "managed",
                "type": "azurerm_user_assigned_identity",
                "name": "ai_kv_uai",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.application_id",
                      "var.environment",
                      "local.ai_location_name_code_map",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.secr_rg[0].name",
                      "azurerm_resource_group.secr_rg[0]",
                      "azurerm_resource_group.secr_rg"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "local.ai_locations_needing_keys"
                  ]
                }
              },
              {
                "address": "azurerm_user_assigned_identity.aks_managed_identity",
                "mode": "managed",
                "type": "azurerm_user_assigned_identity",
                "name": "aks_managed_identity",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "local.micro_suffix"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.aks_rg[0].name",
                      "local.aks_rg[0]",
                      "local.aks_rg"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name"
                  ]
                }
              },
              {
                "address": "azurerm_user_assigned_identity.base_kv_uai",
                "mode": "managed",
                "type": "azurerm_user_assigned_identity",
                "name": "base_kv_uai",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "local.secr_rg_location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.application_id",
                      "var.environment"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.secr_rg_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "local.is_spoke"
                  ]
                }
              },
              {
                "address": "azurerm_user_assigned_identity.cog_kv_uai",
                "mode": "managed",
                "type": "azurerm_user_assigned_identity",
                "name": "cog_kv_uai",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.application_id",
                      "var.environment",
                      "local.location_name_code_map",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.secr_rg[0].name",
                      "azurerm_resource_group.secr_rg[0]",
                      "azurerm_resource_group.secr_rg"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "local.locations_needing_keys"
                  ]
                }
              },
              {
                "address": "azurerm_user_assigned_identity.ud_managed_identity",
                "mode": "managed",
                "type": "azurerm_user_assigned_identity",
                "name": "ud_managed_identity",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "each.value.env",
                      "each.value",
                      "local.short_location_name",
                      "each.key"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.resource_group",
                      "each.value",
                      "each.value.resource_group_name",
                      "each.value",
                      "azurerm_resource_group.mi_rg[0].name",
                      "azurerm_resource_group.mi_rg[0]",
                      "azurerm_resource_group.mi_rg",
                      "each.value.resource_group_name",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "local.mi_with_env_info"
                  ]
                }
              },
              {
                "address": "azurerm_user_assigned_identity.vm_kv_uai",
                "mode": "managed",
                "type": "azurerm_user_assigned_identity",
                "name": "vm_kv_uai",
                "provider_config_key": "azurerm",
                "expressions": {
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.application_id",
                      "var.environment"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.external_vm_settings.vm_rg",
                      "var.external_vm_settings"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "data.azurerm_subnet.ext_vm_subnet[0].id",
                    "data.azurerm_subnet.ext_vm_subnet[0]",
                    "data.azurerm_subnet.ext_vm_subnet"
                  ]
                }
              },
              {
                "address": "azurerm_virtual_machine_data_disk_attachment.vm_base_disk_association",
                "mode": "managed",
                "type": "azurerm_virtual_machine_data_disk_attachment",
                "name": "vm_base_disk_association",
                "provider_config_key": "azurerm",
                "expressions": {
                  "caching": {
                    "references": [
                      "each.value.caching",
                      "each.value"
                    ]
                  },
                  "lun": {
                    "references": [
                      "each.value.lun",
                      "each.value"
                    ]
                  },
                  "managed_disk_id": {
                    "references": [
                      "azurerm_managed_disk.base_managed_disks",
                      "each.key"
                    ]
                  },
                  "virtual_machine_id": {
                    "references": [
                      "each.value.os_type",
                      "each.value",
                      "azurerm_linux_virtual_machine.vms",
                      "each.value.vm_name",
                      "each.value",
                      "azurerm_windows_virtual_machine.vms",
                      "each.value.vm_name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.disks_list"
                  ]
                },
                "depends_on": [
                  "azurerm_role_assignment.base_kv_key_access_aes_role_managed_identity"
                ]
              },
              {
                "address": "azurerm_virtual_machine_extension.winrm_https",
                "mode": "managed",
                "type": "azurerm_virtual_machine_extension",
                "name": "winrm_https",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "each.key"
                    ]
                  },
                  "publisher": {
                    "constant_value": "Microsoft.Compute"
                  },
                  "settings": {
                    "references": [
                      "each.value.fqdn",
                      "each.value"
                    ]
                  },
                  "type": {
                    "constant_value": "CustomScriptExtension"
                  },
                  "type_handler_version": {
                    "constant_value": "1.10"
                  },
                  "virtual_machine_id": {
                    "references": [
                      "azurerm_windows_virtual_machine.vms",
                      "each.key"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.vm_list"
                  ]
                },
                "depends_on": [
                  "terraform_data.join_ad"
                ]
              },
              {
                "address": "azurerm_virtual_network.vnet",
                "mode": "managed",
                "type": "azurerm_virtual_network",
                "name": "vnet",
                "provider_config_key": "azurerm",
                "expressions": {
                  "address_space": {
                    "references": [
                      "local.vnet_cidr"
                    ]
                  },
                  "bgp_community": {
                    "references": [
                      "local.uses_legacy_hub",
                      "local.bgp_community",
                      "var.location"
                    ]
                  },
                  "dns_servers": {
                    "references": [
                      "local.all_dns_servers"
                    ]
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.vnet_name"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.network_rg[0].name",
                      "azurerm_resource_group.network_rg[0]",
                      "azurerm_resource_group.network_rg"
                    ]
                  },
                  "tags": {
                    "references": [
                      "local.all_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.vnet_cidr",
                    "local.network_strategy",
                    "local.micro_call",
                    "var.is_host"
                  ]
                }
              },
              {
                "address": "azurerm_virtual_network_peering.external_to_spoke",
                "mode": "managed",
                "type": "azurerm_virtual_network_peering",
                "name": "external_to_spoke",
                "provider_config_key": "azurerm",
                "expressions": {
                  "allow_forwarded_traffic": {
                    "constant_value": true
                  },
                  "allow_gateway_transit": {
                    "constant_value": false
                  },
                  "allow_virtual_network_access": {
                    "constant_value": true
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name"
                    ]
                  },
                  "remote_virtual_network_id": {
                    "references": [
                      "azurerm_virtual_network.vnet[0].id",
                      "azurerm_virtual_network.vnet[0]",
                      "azurerm_virtual_network.vnet"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.peer_external_vnet.resource_group",
                      "var.peer_external_vnet"
                    ]
                  },
                  "use_remote_gateways": {
                    "constant_value": false
                  },
                  "virtual_network_name": {
                    "references": [
                      "var.peer_external_vnet.name",
                      "var.peer_external_vnet"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.peer_external_vnet.name",
                    "var.peer_external_vnet",
                    "local.is_client"
                  ]
                }
              },
              {
                "address": "azurerm_virtual_network_peering.hub_centralus_to_spoke",
                "mode": "managed",
                "type": "azurerm_virtual_network_peering",
                "name": "hub_centralus_to_spoke",
                "provider_config_key": "azurerm.hub",
                "expressions": {
                  "allow_forwarded_traffic": {
                    "constant_value": true
                  },
                  "allow_gateway_transit": {
                    "constant_value": true
                  },
                  "allow_virtual_network_access": {
                    "constant_value": true
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "random_string.peering.result",
                      "random_string.peering"
                    ]
                  },
                  "remote_virtual_network_id": {
                    "references": [
                      "azurerm_virtual_network.vnet[0].id",
                      "azurerm_virtual_network.vnet[0]",
                      "azurerm_virtual_network.vnet"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.hub_vnet_rg"
                    ]
                  },
                  "triggers": {
                    "references": [
                      "azurerm_virtual_network.vnet[0].address_space",
                      "azurerm_virtual_network.vnet[0]",
                      "azurerm_virtual_network.vnet"
                    ]
                  },
                  "use_remote_gateways": {
                    "constant_value": false
                  },
                  "virtual_network_name": {
                    "references": [
                      "local.hub_vnet_name"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.is_peered",
                    "local.region_environment",
                    "local.is_client"
                  ]
                }
              },
              {
                "address": "azurerm_virtual_network_peering.hub_eastus2_to_spoke",
                "mode": "managed",
                "type": "azurerm_virtual_network_peering",
                "name": "hub_eastus2_to_spoke",
                "provider_config_key": "azurerm.hub",
                "expressions": {
                  "allow_forwarded_traffic": {
                    "constant_value": true
                  },
                  "allow_gateway_transit": {
                    "constant_value": true
                  },
                  "allow_virtual_network_access": {
                    "constant_value": true
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "random_string.peering.result",
                      "random_string.peering"
                    ]
                  },
                  "remote_virtual_network_id": {
                    "references": [
                      "azurerm_virtual_network.vnet[0].id",
                      "azurerm_virtual_network.vnet[0]",
                      "azurerm_virtual_network.vnet"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.hub_vnet_rg"
                    ]
                  },
                  "triggers": {
                    "references": [
                      "azurerm_virtual_network.vnet[0].address_space",
                      "azurerm_virtual_network.vnet[0]",
                      "azurerm_virtual_network.vnet"
                    ]
                  },
                  "use_remote_gateways": {
                    "constant_value": false
                  },
                  "virtual_network_name": {
                    "references": [
                      "local.hub_vnet_name"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.is_peered",
                    "local.region_environment",
                    "local.is_client"
                  ]
                }
              },
              {
                "address": "azurerm_virtual_network_peering.hub_to_spoke",
                "mode": "managed",
                "type": "azurerm_virtual_network_peering",
                "name": "hub_to_spoke",
                "provider_config_key": "azurerm.hub",
                "expressions": {
                  "allow_forwarded_traffic": {
                    "constant_value": true
                  },
                  "allow_gateway_transit": {
                    "constant_value": true
                  },
                  "allow_virtual_network_access": {
                    "constant_value": true
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "random_string.peering.result",
                      "random_string.peering"
                    ]
                  },
                  "remote_virtual_network_id": {
                    "references": [
                      "azurerm_virtual_network.vnet[0].id",
                      "azurerm_virtual_network.vnet[0]",
                      "azurerm_virtual_network.vnet"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.hub_vnet_rg"
                    ]
                  },
                  "triggers": {
                    "references": [
                      "azurerm_virtual_network.vnet[0].address_space",
                      "azurerm_virtual_network.vnet[0]",
                      "azurerm_virtual_network.vnet"
                    ]
                  },
                  "use_remote_gateways": {
                    "constant_value": false
                  },
                  "virtual_network_name": {
                    "references": [
                      "local.hub_vnet_name"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.is_peered",
                    "local.is_client",
                    "local.region_environment"
                  ]
                }
              },
              {
                "address": "azurerm_virtual_network_peering.spoke_to_external",
                "mode": "managed",
                "type": "azurerm_virtual_network_peering",
                "name": "spoke_to_external",
                "provider_config_key": "azurerm",
                "expressions": {
                  "allow_forwarded_traffic": {
                    "constant_value": true
                  },
                  "allow_gateway_transit": {
                    "constant_value": false
                  },
                  "allow_virtual_network_access": {
                    "constant_value": true
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name"
                    ]
                  },
                  "remote_virtual_network_id": {
                    "references": [
                      "data.azurerm_resources.external_vnet[0].resources[0].id",
                      "data.azurerm_resources.external_vnet[0].resources[0]",
                      "data.azurerm_resources.external_vnet[0].resources",
                      "data.azurerm_resources.external_vnet[0]",
                      "data.azurerm_resources.external_vnet"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.network_rg[0].name",
                      "azurerm_resource_group.network_rg[0]",
                      "azurerm_resource_group.network_rg"
                    ]
                  },
                  "use_remote_gateways": {
                    "constant_value": false
                  },
                  "virtual_network_name": {
                    "references": [
                      "azurerm_virtual_network.vnet[0].name",
                      "azurerm_virtual_network.vnet[0]",
                      "azurerm_virtual_network.vnet"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.peer_external_vnet.name",
                    "var.peer_external_vnet",
                    "local.is_client"
                  ]
                }
              },
              {
                "address": "azurerm_virtual_network_peering.spoke_to_hub",
                "mode": "managed",
                "type": "azurerm_virtual_network_peering",
                "name": "spoke_to_hub",
                "provider_config_key": "azurerm",
                "expressions": {
                  "allow_forwarded_traffic": {
                    "constant_value": true
                  },
                  "allow_gateway_transit": {
                    "constant_value": false
                  },
                  "allow_virtual_network_access": {
                    "constant_value": true
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name"
                    ]
                  },
                  "remote_virtual_network_id": {
                    "references": [
                      "local.hub_vnet_id"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_resource_group.network_rg[0].name",
                      "azurerm_resource_group.network_rg[0]",
                      "azurerm_resource_group.network_rg"
                    ]
                  },
                  "triggers": {
                    "references": [
                      "data.azurerm_virtual_network.hub_vnet[0].address_space",
                      "data.azurerm_virtual_network.hub_vnet[0]",
                      "data.azurerm_virtual_network.hub_vnet"
                    ]
                  },
                  "use_remote_gateways": {
                    "constant_value": true
                  },
                  "virtual_network_name": {
                    "references": [
                      "azurerm_virtual_network.vnet[0].name",
                      "azurerm_virtual_network.vnet[0]",
                      "azurerm_virtual_network.vnet"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.is_peered",
                    "local.is_client"
                  ]
                }
              },
              {
                "address": "azurerm_windows_function_app.windows_funapps",
                "mode": "managed",
                "type": "azurerm_windows_function_app",
                "name": "windows_funapps",
                "provider_config_key": "azurerm",
                "expressions": {
                  "https_only": {
                    "constant_value": true
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.key"
                    ]
                  },
                  "public_network_access_enabled": {
                    "references": [
                      "each.value.public_network_access_enabled",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.app_services_rg[0].name",
                      "azurerm_resource_group.app_services_rg[0]",
                      "azurerm_resource_group.app_services_rg"
                    ]
                  },
                  "service_plan_id": {
                    "references": [
                      "azurerm_service_plan.asps",
                      "each.value.ud_app_service_plan",
                      "each.value"
                    ]
                  },
                  "storage_account_access_key": {
                    "references": [
                      "azurerm_storage_account.ud_storage_accounts",
                      "each.value.ud_storage_account",
                      "each.value"
                    ]
                  },
                  "storage_account_name": {
                    "references": [
                      "azurerm_storage_account.ud_storage_accounts",
                      "each.value.ud_storage_account",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  },
                  "virtual_network_subnet_id": {
                    "references": [
                      "each.value.integrated_subnet_name",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.integrated_subnet_name",
                      "each.value",
                      "each.value.external_integrated_subnet_id",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "local.windows_funapps"
                  ]
                }
              },
              {
                "address": "azurerm_windows_virtual_machine.vms",
                "mode": "managed",
                "type": "azurerm_windows_virtual_machine",
                "name": "vms",
                "provider_config_key": "azurerm",
                "expressions": {
                  "admin_password": {
                    "references": [
                      "random_password.win_default_admin_pass[0].result",
                      "random_password.win_default_admin_pass[0]",
                      "random_password.win_default_admin_pass"
                    ]
                  },
                  "admin_username": {
                    "constant_value": "azureuser"
                  },
                  "computer_name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "encryption_at_host_enabled": {
                    "constant_value": true
                  },
                  "identity": [
                    {
                      "identity_ids": {
                        "references": [
                          "var.external_vm_settings.subnet_name",
                          "var.external_vm_settings",
                          "azurerm_user_assigned_identity.vm_kv_uai[0].id",
                          "azurerm_user_assigned_identity.vm_kv_uai[0]",
                          "azurerm_user_assigned_identity.vm_kv_uai",
                          "local.base_kv_uai_id"
                        ]
                      },
                      "type": {
                        "constant_value": "SystemAssigned, UserAssigned"
                      }
                    }
                  ],
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "network_interface_ids": {
                    "references": [
                      "azurerm_network_interface.nics",
                      "each.key"
                    ]
                  },
                  "os_disk": [
                    {
                      "caching": {
                        "references": [
                          "each.value.os_disk_caching",
                          "each.value"
                        ]
                      },
                      "disk_encryption_set_id": {
                        "references": [
                          "azurerm_disk_encryption_set.vm_disk_encryption_set[0].id",
                          "azurerm_disk_encryption_set.vm_disk_encryption_set[0]",
                          "azurerm_disk_encryption_set.vm_disk_encryption_set"
                        ]
                      },
                      "disk_size_gb": {
                        "references": [
                          "each.value.os_disk_size",
                          "each.value"
                        ]
                      },
                      "name": {
                        "references": [
                          "each.value.name",
                          "each.value"
                        ]
                      },
                      "storage_account_type": {
                        "references": [
                          "each.value.os_disk_storage_account_type",
                          "each.value"
                        ]
                      }
                    }
                  ],
                  "resource_group_name": {
                    "references": [
                      "each.value.resource_group_name",
                      "each.value"
                    ]
                  },
                  "size": {
                    "references": [
                      "each.value.vm_size",
                      "each.value"
                    ]
                  },
                  "source_image_id": {
                    "references": [
                      "data.azurerm_shared_image_version.os_image",
                      "each.key"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "each.value.short_name",
                      "each.value",
                      "local.all_tags",
                      "each.value.short_name",
                      "each.value"
                    ]
                  },
                  "zone": {
                    "references": [
                      "each.value.zone",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.vm_list"
                  ]
                }
              },
              {
                "address": "azurerm_windows_web_app.windows_webapps",
                "mode": "managed",
                "type": "azurerm_windows_web_app",
                "name": "windows_webapps",
                "provider_config_key": "azurerm",
                "expressions": {
                  "app_settings": {
                    "references": [
                      "azurerm_application_insights.windows_webapps_app_insights",
                      "each.key",
                      "azurerm_application_insights.windows_webapps_app_insights",
                      "each.key",
                      "each.value.app_settings",
                      "each.value"
                    ]
                  },
                  "https_only": {
                    "constant_value": true
                  },
                  "location": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.key"
                    ]
                  },
                  "public_network_access_enabled": {
                    "references": [
                      "each.value.public_network_access_enabled",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.ud_rgs",
                      "each.value.ud_resource_group",
                      "each.value",
                      "azurerm_resource_group.app_services_rg[0].name",
                      "azurerm_resource_group.app_services_rg[0]",
                      "azurerm_resource_group.app_services_rg"
                    ]
                  },
                  "service_plan_id": {
                    "references": [
                      "azurerm_service_plan.asps",
                      "each.value.ud_app_service_plan",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags",
                      "var.tag_sets",
                      "each.value.tag_set",
                      "each.value",
                      "local.all_tags"
                    ]
                  },
                  "virtual_network_subnet_id": {
                    "references": [
                      "each.value.disable_vnet_integration",
                      "each.value",
                      "each.value.integrated_subnet_name",
                      "each.value",
                      "azurerm_subnet.subnets",
                      "each.value.integrated_subnet_name",
                      "each.value",
                      "each.value.external_integrated_subnet_id",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 1,
                "for_each_expression": {
                  "references": [
                    "local.windows_webapps"
                  ]
                }
              },
              {
                "address": "infoblox_ipv4_network.subnet_cidr_list",
                "mode": "managed",
                "type": "infoblox_ipv4_network",
                "name": "subnet_cidr_list",
                "provider_config_key": "module.spoke_asgwy_qa:infoblox",
                "expressions": {
                  "allocate_prefix_len": {
                    "references": [
                      "each.value.subnet_suffix",
                      "each.value"
                    ]
                  },
                  "comment": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "ext_attrs": {
                    "references": [
                      "data.azurerm_subscription.current.display_name",
                      "data.azurerm_subscription.current",
                      "var.location"
                    ]
                  },
                  "network_view": {
                    "references": [
                      "local.network_view"
                    ]
                  },
                  "parent_cidr": {
                    "references": [
                      "local.is_client",
                      "data.infoblox_ipv4_network_container.host_vnet_container",
                      "each.value.vnet_cidr_index",
                      "each.value",
                      "infoblox_ipv4_network_container.vnet_container",
                      "each.value.vnet_cidr_index",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.subnet_requests",
                    "local.ipam_version"
                  ]
                }
              },
              {
                "address": "infoblox_ipv4_network.vnet_cidr_list",
                "mode": "managed",
                "type": "infoblox_ipv4_network",
                "name": "vnet_cidr_list",
                "provider_config_key": "module.spoke_asgwy_qa:infoblox",
                "expressions": {
                  "allocate_prefix_len": {
                    "references": [
                      "each.value.subnet_suffix",
                      "each.value"
                    ]
                  },
                  "comment": {
                    "references": [
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name"
                    ]
                  },
                  "ext_attrs": {
                    "references": [
                      "data.azurerm_subscription.current.display_name",
                      "data.azurerm_subscription.current",
                      "var.location"
                    ]
                  },
                  "network_view": {
                    "references": [
                      "local.network_view"
                    ]
                  },
                  "parent_cidr": {
                    "references": [
                      "each.value.parent_cidr",
                      "each.value",
                      "data.infoblox_ipv4_network_container.container[0].cidr",
                      "data.infoblox_ipv4_network_container.container[0]",
                      "data.infoblox_ipv4_network_container.container",
                      "data.infoblox_ipv4_network_container.supernet_requests",
                      "each.value.name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.subnet_requests",
                    "local.ipam_version"
                  ]
                }
              },
              {
                "address": "infoblox_ipv4_network_container.vnet_container",
                "mode": "managed",
                "type": "infoblox_ipv4_network_container",
                "name": "vnet_container",
                "provider_config_key": "module.spoke_asgwy_qa:infoblox",
                "expressions": {
                  "allocate_prefix_len": {
                    "references": [
                      "each.value.cidr_suffix",
                      "each.value"
                    ]
                  },
                  "comment": {
                    "references": [
                      "local.vnet_name"
                    ]
                  },
                  "ext_attrs": {
                    "references": [
                      "data.azurerm_subscription.current.display_name",
                      "data.azurerm_subscription.current",
                      "var.location"
                    ]
                  },
                  "network_view": {
                    "references": [
                      "local.network_view"
                    ]
                  },
                  "parent_cidr": {
                    "references": [
                      "data.infoblox_ipv4_network_container.container[0].cidr",
                      "data.infoblox_ipv4_network_container.container[0]",
                      "data.infoblox_ipv4_network_container.container"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.vnet_cidrs",
                    "local.ipam_version",
                    "local.network_strategy",
                    "local.micro_call",
                    "var.is_host"
                  ]
                }
              },
              {
                "address": "null_resource.adf_credentials",
                "mode": "managed",
                "type": "null_resource",
                "name": "adf_credentials",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "azurerm_data_factory.adf[0].name",
                          "azurerm_data_factory.adf[0]",
                          "azurerm_data_factory.adf",
                          "azurerm_data_factory.adf[0].resource_group_name",
                          "azurerm_data_factory.adf[0]",
                          "azurerm_data_factory.adf",
                          "local.base_kv_uai_id"
                        ]
                      },
                      "environment": {
                        "references": [
                          "data.azurerm_subscription.current.id",
                          "data.azurerm_subscription.current"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.adf_subnet_name",
                    "var.data_factory.legacy_adf",
                    "var.data_factory"
                  ]
                }
              },
              {
                "address": "null_resource.adf_linked_service_blob",
                "mode": "managed",
                "type": "null_resource",
                "name": "adf_linked_service_blob",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "azurerm_data_factory.adf[0].name",
                          "azurerm_data_factory.adf[0]",
                          "azurerm_data_factory.adf",
                          "azurerm_data_factory.adf[0].resource_group_name",
                          "azurerm_data_factory.adf[0]",
                          "azurerm_data_factory.adf",
                          "local.base_kv_uai_id"
                        ]
                      },
                      "environment": {
                        "references": [
                          "data.azurerm_subscription.current.id",
                          "data.azurerm_subscription.current",
                          "azurerm_storage_account.adf_st[0].primary_blob_endpoint",
                          "azurerm_storage_account.adf_st[0]",
                          "azurerm_storage_account.adf_st"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.adf_subnet_name",
                    "var.data_factory.legacy_adf",
                    "var.data_factory"
                  ]
                },
                "depends_on": [
                  "null_resource.adf_credentials"
                ]
              },
              {
                "address": "null_resource.aks_loadBalancerIp",
                "mode": "managed",
                "type": "null_resource",
                "name": "aks_loadBalancerIp",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x azlogin_oidc.sh; ./azlogin_oidc.sh; chmod +x loadBalancerIp_cluster_yaml_input.sh; ./loadBalancerIp_cluster_yaml_input.sh add $CLUSTER_NAME \"$LOAD_BALANCER_IP\" \"$AUTO_LOAD_BALANCER_IP\" \"$RESOURCE_GROUP\" \"$VNET_NAME\" \"$SUBNET_NAME\" \"$SERVICE_MESH\" \"$SUBSCRIPTION_ID\""
                      },
                      "environment": {
                        "references": [
                          "self.triggers.cluster_name",
                          "self.triggers",
                          "self",
                          "self.triggers.loadBalancerIp",
                          "self.triggers",
                          "self",
                          "self.triggers.auto_loadBalancerIp",
                          "self.triggers",
                          "self",
                          "self.triggers.resource_group_name",
                          "self.triggers",
                          "self",
                          "self.triggers.vnet_name",
                          "self.triggers",
                          "self",
                          "self.triggers.subnet_name",
                          "self.triggers",
                          "self",
                          "self.triggers.service_mesh",
                          "self.triggers",
                          "self",
                          "self.triggers.subscription_id",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  },
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x azlogin_oidc.sh; ./azlogin_oidc.sh; chmod +x loadBalancerIp_cluster_yaml_input.sh; ./loadBalancerIp_cluster_yaml_input.sh rm $CLUSTER_NAME  \"$LOAD_BALANCER_IP\" \"$AUTO_LOAD_BALANCER_IP\" \"$RESOURCE_GROUP\" \"$VNET_NAME\" \"$SUBNET_NAME\" \"$SERVICE_MESH\" \"$SUBSCRIPTION_ID\""
                      },
                      "environment": {
                        "references": [
                          "self.triggers.cluster_name",
                          "self.triggers",
                          "self",
                          "self.triggers.loadBalancerIp",
                          "self.triggers",
                          "self",
                          "self.triggers.auto_loadBalancerIp",
                          "self.triggers",
                          "self",
                          "self.triggers.resource_group_name",
                          "self.triggers",
                          "self",
                          "self.triggers.vnet_name",
                          "self.triggers",
                          "self",
                          "self.triggers.subnet_name",
                          "self.triggers",
                          "self",
                          "self.triggers.service_mesh",
                          "self.triggers",
                          "self",
                          "self.triggers.subscription_id",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].name",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster",
                      "azurerm_subnet.subnets",
                      "local.aks_subnet_name",
                      "azurerm_subnet.subnets",
                      "local.aks_subnet_name",
                      "azurerm_subnet.subnets",
                      "local.aks_subnet_name",
                      "var.aks_cluster.loadBalancerIp",
                      "var.aks_cluster",
                      "var.aks_cluster.service_mesh",
                      "var.aks_cluster",
                      "var.aks_cluster.loadBalancerIp",
                      "var.aks_cluster",
                      "var.aks_cluster.auto_loadBalancerIp",
                      "var.aks_cluster",
                      "data.azurerm_subscription.current.id",
                      "data.azurerm_subscription.current"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.is_spoke",
                    "local.aks_subnet_name",
                    "azurerm_kubernetes_cluster.aks_cluster[0].open_service_mesh_enabled",
                    "azurerm_kubernetes_cluster.aks_cluster[0]",
                    "azurerm_kubernetes_cluster.aks_cluster",
                    "azurerm_kubernetes_cluster.aks_cluster[0].open_service_mesh_enabled",
                    "azurerm_kubernetes_cluster.aks_cluster[0]",
                    "azurerm_kubernetes_cluster.aks_cluster",
                    "var.aks_cluster.loadBalancerIp",
                    "var.aks_cluster",
                    "var.aks_cluster.auto_loadBalancerIp",
                    "var.aks_cluster",
                    "var.aks_cluster.service_mesh",
                    "var.aks_cluster"
                  ]
                },
                "depends_on": [
                  "null_resource.bootstrap_cluster_yaml_file",
                  "null_resource.argocd_setup",
                  "null_resource.nginx_opt_out_flag_cluster_yaml_input",
                  "null_resource.delete_remaining_workload_identity_cluster_yaml_input_when_destroyed",
                  "null_resource.delete_remaining_namespaces_when_destroyed",
                  "null_resource.aks_namespaces",
                  "null_resource.workload_identity_cluster_yaml_input"
                ]
              },
              {
                "address": "null_resource.aks_namespaces",
                "mode": "managed",
                "type": "null_resource",
                "name": "aks_namespaces",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x namespaces_cluster_yaml_input.sh; ./namespaces_cluster_yaml_input.sh add $CLUSTER_NAME \"$NAMESPACES\""
                      },
                      "environment": {
                        "references": [
                          "self.triggers.cluster_name",
                          "self.triggers",
                          "self",
                          "self.triggers.namespaces",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].name",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster",
                      "var.aks_cluster.namespaces",
                      "var.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.aks_cluster.namespaces",
                    "var.aks_cluster"
                  ]
                },
                "depends_on": [
                  "null_resource.bootstrap_cluster_yaml_file",
                  "null_resource.argocd_setup",
                  "null_resource.nginx_opt_out_flag_cluster_yaml_input",
                  "null_resource.delete_remaining_workload_identity_cluster_yaml_input_when_destroyed",
                  "null_resource.delete_remaining_namespaces_when_destroyed"
                ]
              },
              {
                "address": "null_resource.aks_webapprouting_ilb",
                "mode": "managed",
                "type": "null_resource",
                "name": "aks_webapprouting_ilb",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x azlogin_oidc.sh; ./azlogin_oidc.sh; chmod +x aks_web_app_routing_ilb.sh; ./aks_web_app_routing_ilb.sh $SUBSCRIPTION_ID $CLUSTER_RG $CLUSTER_NAME"
                      },
                      "environment": {
                        "references": [
                          "self.triggers.subscription_id",
                          "self.triggers",
                          "self",
                          "self.triggers.cluster_rg",
                          "self.triggers",
                          "self",
                          "self.triggers.cluster_name",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "data.azurerm_subscription.current.id",
                      "data.azurerm_subscription.current",
                      "local.aks_rg[0].name",
                      "local.aks_rg[0]",
                      "local.aks_rg",
                      "azurerm_kubernetes_cluster.aks_cluster[0].name",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.aks_cluster.web_app_routing_enabled_preview",
                    "var.aks_cluster"
                  ]
                },
                "depends_on": [
                  "azurerm_kubernetes_cluster.aks_cluster"
                ]
              },
              {
                "address": "null_resource.argocd_setup",
                "mode": "managed",
                "type": "null_resource",
                "name": "argocd_setup",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x azlogin_oidc.sh; ./azlogin_oidc.sh; chmod +x argocd.sh; ./argocd.sh add $SUBSCRIPTION_ID $CLUSTER_RG $CLUSTER_NAME $PRIVATE_FQDN $ARGO_URL $ARGO_AUTH_TOKEN $GH_TOKEN"
                      },
                      "environment": {
                        "references": [
                          "data.azurerm_subscription.current.id",
                          "data.azurerm_subscription.current",
                          "local.aks_rg[0].name",
                          "local.aks_rg[0]",
                          "local.aks_rg",
                          "azurerm_kubernetes_cluster.aks_cluster[0].name",
                          "azurerm_kubernetes_cluster.aks_cluster[0]",
                          "azurerm_kubernetes_cluster.aks_cluster",
                          "azurerm_kubernetes_cluster.aks_cluster[0].private_fqdn",
                          "azurerm_kubernetes_cluster.aks_cluster[0]",
                          "azurerm_kubernetes_cluster.aks_cluster"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  },
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x azlogin_oidc.sh; ./azlogin_oidc.sh; chmod +x argocd.sh; ./argocd.sh rm $SUBSCRIPTION_ID $CLUSTER_RG $CLUSTER_NAME $PRIVATE_FQDN $ARGO_URL $ARGO_AUTH_TOKEN $GH_TOKEN"
                      },
                      "environment": {
                        "references": [
                          "self.triggers.subscription_id",
                          "self.triggers",
                          "self",
                          "self.triggers.cluster_rg",
                          "self.triggers",
                          "self",
                          "self.triggers.cluster_name",
                          "self.triggers",
                          "self",
                          "self.triggers.private_fqdn",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "data.azurerm_subscription.current.id",
                      "data.azurerm_subscription.current",
                      "local.aks_rg[0].name",
                      "local.aks_rg[0]",
                      "local.aks_rg",
                      "azurerm_kubernetes_cluster.aks_cluster[0].name",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster",
                      "azurerm_kubernetes_cluster.aks_cluster[0].private_fqdn",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.aks_cluster.legacy_argo",
                    "var.aks_cluster",
                    "var.aks_cluster.decentralized_argo",
                    "var.aks_cluster"
                  ]
                },
                "depends_on": [
                  "azurerm_kubernetes_cluster.aks_cluster[0]",
                  "azurerm_kubernetes_cluster_node_pool.extra_nodepools",
                  "azurerm_role_assignment.ec_apply_sp_cluster_admin_assignment"
                ]
              },
              {
                "address": "null_resource.bootstrap_cluster_yaml_file",
                "mode": "managed",
                "type": "null_resource",
                "name": "bootstrap_cluster_yaml_file",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x create_cluster_yaml_file.sh; ./create_cluster_yaml_file.sh $CLUSTER_NAME $GH_TOKEN"
                      },
                      "environment": {
                        "references": [
                          "self.triggers.cluster_name",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].name",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.aks_cluster.decentralized_argo",
                    "var.aks_cluster",
                    "var.aks_cluster.service_mesh",
                    "var.aks_cluster",
                    "local.aks_subnet_name",
                    "var.aks_cluster.legacy_argo",
                    "var.aks_cluster"
                  ]
                },
                "depends_on": [
                  "azurerm_kubernetes_cluster.aks_cluster[0]",
                  "azurerm_kubernetes_cluster_node_pool.extra_nodepools"
                ]
              },
              {
                "address": "null_resource.decentralized_argocd_setup",
                "mode": "managed",
                "type": "null_resource",
                "name": "decentralized_argocd_setup",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "go mod init test; go mod tidy; go run trigger_gh_workflow.go -url=$DEC_XPKUBE_ENDPOINT -inputs=$JSON_PAYLOAD"
                      },
                      "environment": {
                        "references": [
                          "self.triggers.dec_xpkube_endpoint",
                          "self.triggers",
                          "self",
                          "self.triggers.json_payload",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].private_fqdn",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster",
                      "azurerm_kubernetes_cluster.aks_cluster[0].id",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster",
                      "local.dec_xpkube_json_payload",
                      "local.dec_xpkube_endpoint"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.aks_cluster.decentralized_argo",
                    "var.aks_cluster",
                    "var.aks_cluster.service_mesh",
                    "var.aks_cluster",
                    "local.aks_subnet_name",
                    "var.aks_cluster.legacy_argo",
                    "var.aks_cluster"
                  ]
                },
                "depends_on": [
                  "azurerm_kubernetes_cluster.aks_cluster[0]",
                  "azurerm_kubernetes_cluster_node_pool.extra_nodepools",
                  "azurerm_role_assignment.ec_apply_sp_cluster_admin_assignment",
                  "null_resource.bootstrap_cluster_yaml_file",
                  "null_resource.nginx_opt_out_flag_cluster_yaml_input",
                  "null_resource.delete_remaining_workload_identity_cluster_yaml_input_when_destroyed",
                  "null_resource.delete_remaining_namespaces_when_destroyed",
                  "null_resource.aks_namespaces",
                  "null_resource.workload_identity_cluster_yaml_input",
                  "null_resource.aks_loadBalancerIp",
                  "null_resource.istio_service_mesh",
                  "null_resource.secret_provider_identity",
                  "null_resource.delete_remaining_exposed_fqdns_when_destroyed",
                  "null_resource.exposed_fqdns",
                  "null_resource.exposed_fqdn_dns_records_pre_requisite",
                  "null_resource.exposed_fqdn_dns_records"
                ]
              },
              {
                "address": "null_resource.delete_remaining_exposed_fqdns_when_destroyed",
                "mode": "managed",
                "type": "null_resource",
                "name": "delete_remaining_exposed_fqdns_when_destroyed",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x exposed_fqdns_cluster_yaml_input.sh; ./exposed_fqdns_cluster_yaml_input.sh rm $CLUSTER_NAME \"\""
                      },
                      "environment": {
                        "references": [
                          "self.triggers.cluster_name",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].name",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.aks_cluster.exposed_fqdns",
                    "var.aks_cluster",
                    "local.internally_added_fqdns"
                  ]
                },
                "depends_on": [
                  "null_resource.bootstrap_cluster_yaml_file",
                  "null_resource.argocd_setup",
                  "null_resource.nginx_opt_out_flag_cluster_yaml_input",
                  "null_resource.delete_remaining_workload_identity_cluster_yaml_input_when_destroyed",
                  "null_resource.delete_remaining_namespaces_when_destroyed",
                  "null_resource.aks_namespaces",
                  "null_resource.workload_identity_cluster_yaml_input",
                  "null_resource.aks_loadBalancerIp",
                  "null_resource.istio_service_mesh",
                  "null_resource.secret_provider_identity"
                ]
              },
              {
                "address": "null_resource.delete_remaining_namespaces_when_destroyed",
                "mode": "managed",
                "type": "null_resource",
                "name": "delete_remaining_namespaces_when_destroyed",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x namespaces_cluster_yaml_input.sh; ./namespaces_cluster_yaml_input.sh rm $CLUSTER_NAME \"\""
                      },
                      "environment": {
                        "references": [
                          "self.triggers.cluster_name",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].name",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.aks_cluster.namespaces",
                    "var.aks_cluster"
                  ]
                },
                "depends_on": [
                  "null_resource.bootstrap_cluster_yaml_file",
                  "null_resource.argocd_setup",
                  "null_resource.nginx_opt_out_flag_cluster_yaml_input",
                  "null_resource.delete_remaining_workload_identity_cluster_yaml_input_when_destroyed"
                ]
              },
              {
                "address": "null_resource.delete_remaining_workload_identity_cluster_yaml_input_when_destroyed",
                "mode": "managed",
                "type": "null_resource",
                "name": "delete_remaining_workload_identity_cluster_yaml_input_when_destroyed",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x workload_identity_cluster_yaml_input.sh; ./workload_identity_cluster_yaml_input.sh rm $CLUSTER_NAME \"\" \"\""
                      },
                      "environment": {
                        "references": [
                          "self.triggers.cluster_name",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].name",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.aks_federated_credentials"
                  ]
                },
                "depends_on": [
                  "null_resource.bootstrap_cluster_yaml_file",
                  "null_resource.argocd_setup",
                  "null_resource.nginx_opt_out_flag_cluster_yaml_input"
                ]
              },
              {
                "address": "null_resource.exposed_fqdn_dns_records",
                "mode": "managed",
                "type": "null_resource",
                "name": "exposed_fqdn_dns_records",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x exposed_fqdn_dns_records.sh; ./exposed_fqdn_dns_records.sh $CLUSTER_NAME $DNS_LABEL $DNS_HOSTNAME $DNS_SCRIPT_PATH"
                      },
                      "environment": {
                        "references": [
                          "self.triggers.cluster_name",
                          "self.triggers",
                          "self",
                          "each.value",
                          "each.value",
                          "path.module"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].name",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.aks_cluster.exposed_fqdns",
                    "var.aks_cluster",
                    "local.internally_added_fqdns"
                  ]
                },
                "depends_on": [
                  "null_resource.bootstrap_cluster_yaml_file",
                  "null_resource.argocd_setup",
                  "null_resource.nginx_opt_out_flag_cluster_yaml_input",
                  "null_resource.delete_remaining_workload_identity_cluster_yaml_input_when_destroyed",
                  "null_resource.delete_remaining_namespaces_when_destroyed",
                  "null_resource.aks_namespaces",
                  "null_resource.workload_identity_cluster_yaml_input",
                  "null_resource.aks_loadBalancerIp",
                  "null_resource.istio_service_mesh",
                  "null_resource.secret_provider_identity",
                  "null_resource.delete_remaining_exposed_fqdns_when_destroyed",
                  "null_resource.exposed_fqdns",
                  "null_resource.exposed_fqdn_dns_records_pre_requisite"
                ]
              },
              {
                "address": "null_resource.exposed_fqdn_dns_records_pre_requisite",
                "mode": "managed",
                "type": "null_resource",
                "name": "exposed_fqdn_dns_records_pre_requisite",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "cd ../../../../; git checkout master; git pull origin master"
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].name",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster",
                      "var.aks_cluster.exposed_fqdns",
                      "var.aks_cluster",
                      "local.internally_added_fqdns",
                      "var.aks_cluster.exposed_fqdns",
                      "var.aks_cluster",
                      "local.internally_added_fqdns"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.aks_cluster.exposed_fqdns",
                    "var.aks_cluster",
                    "local.internally_added_fqdns"
                  ]
                },
                "depends_on": [
                  "null_resource.bootstrap_cluster_yaml_file",
                  "null_resource.argocd_setup",
                  "null_resource.nginx_opt_out_flag_cluster_yaml_input",
                  "null_resource.delete_remaining_workload_identity_cluster_yaml_input_when_destroyed",
                  "null_resource.delete_remaining_namespaces_when_destroyed",
                  "null_resource.aks_namespaces",
                  "null_resource.workload_identity_cluster_yaml_input",
                  "null_resource.aks_loadBalancerIp",
                  "null_resource.istio_service_mesh",
                  "null_resource.secret_provider_identity",
                  "null_resource.delete_remaining_exposed_fqdns_when_destroyed",
                  "null_resource.exposed_fqdns"
                ]
              },
              {
                "address": "null_resource.exposed_fqdns",
                "mode": "managed",
                "type": "null_resource",
                "name": "exposed_fqdns",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x exposed_fqdns_cluster_yaml_input.sh; ./exposed_fqdns_cluster_yaml_input.sh add $CLUSTER_NAME \"$EXPOSED_FQDNS\""
                      },
                      "environment": {
                        "references": [
                          "self.triggers.cluster_name",
                          "self.triggers",
                          "self",
                          "self.triggers.exposed_fqdns",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].name",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster",
                      "var.aks_cluster.exposed_fqdns",
                      "var.aks_cluster",
                      "local.internally_added_fqdns"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.aks_cluster.exposed_fqdns",
                    "var.aks_cluster",
                    "local.internally_added_fqdns"
                  ]
                },
                "depends_on": [
                  "null_resource.bootstrap_cluster_yaml_file",
                  "null_resource.argocd_setup",
                  "null_resource.nginx_opt_out_flag_cluster_yaml_input",
                  "null_resource.delete_remaining_workload_identity_cluster_yaml_input_when_destroyed",
                  "null_resource.delete_remaining_namespaces_when_destroyed",
                  "null_resource.aks_namespaces",
                  "null_resource.workload_identity_cluster_yaml_input",
                  "null_resource.aks_loadBalancerIp",
                  "null_resource.istio_service_mesh",
                  "null_resource.secret_provider_identity",
                  "null_resource.delete_remaining_exposed_fqdns_when_destroyed"
                ]
              },
              {
                "address": "null_resource.istio_service_mesh",
                "mode": "managed",
                "type": "null_resource",
                "name": "istio_service_mesh",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x istio_service_mesh_cluster_yaml_input.sh; ./istio_service_mesh_cluster_yaml_input.sh add $CLUSTER_NAME"
                      },
                      "environment": {
                        "references": [
                          "self.triggers.cluster_name",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  },
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x istio_service_mesh_cluster_yaml_input.sh; ./istio_service_mesh_cluster_yaml_input.sh rm $CLUSTER_NAME"
                      },
                      "environment": {
                        "references": [
                          "self.triggers.cluster_name",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].name",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster",
                      "var.aks_cluster.service_mesh",
                      "var.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.is_spoke",
                    "local.aks_subnet_name",
                    "var.aks_cluster.service_mesh",
                    "var.aks_cluster",
                    "azurerm_kubernetes_cluster.aks_cluster[0].open_service_mesh_enabled",
                    "azurerm_kubernetes_cluster.aks_cluster[0]",
                    "azurerm_kubernetes_cluster.aks_cluster",
                    "azurerm_kubernetes_cluster.aks_cluster[0].open_service_mesh_enabled",
                    "azurerm_kubernetes_cluster.aks_cluster[0]",
                    "azurerm_kubernetes_cluster.aks_cluster"
                  ]
                },
                "depends_on": [
                  "null_resource.bootstrap_cluster_yaml_file",
                  "null_resource.argocd_setup",
                  "null_resource.nginx_opt_out_flag_cluster_yaml_input",
                  "null_resource.delete_remaining_workload_identity_cluster_yaml_input_when_destroyed",
                  "null_resource.delete_remaining_namespaces_when_destroyed",
                  "null_resource.aks_namespaces",
                  "null_resource.workload_identity_cluster_yaml_input",
                  "null_resource.aks_loadBalancerIp"
                ]
              },
              {
                "address": "null_resource.mysql_ddl_users",
                "mode": "managed",
                "type": "null_resource",
                "name": "mysql_ddl_users",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x azlogin_oidc.sh; ./azlogin_oidc.sh; chmod +x mysql_create_ddl_user.sh; ./mysql_create_ddl_user.sh \"$MYS_AAD_ADMIN\" \"$MYSQL_FLEX_SERVER_NAME\" \"$MYSQL_DATABASE_NAME\" \"$MYS_MI_USERNAME\" \"$MYS_MI_ID\" \"$MYSQL_SHORT_DATABASE_NAME\""
                      },
                      "environment": {
                        "references": [
                          "self.triggers.mys_aad_admin",
                          "self.triggers",
                          "self",
                          "self.triggers.mysql_flex",
                          "self.triggers",
                          "self",
                          "self.triggers.mysql_db_name",
                          "self.triggers",
                          "self",
                          "self.triggers.mysql_short_db_name",
                          "self.triggers",
                          "self",
                          "self.triggers.ud_mi_name",
                          "self.triggers",
                          "self",
                          "self.triggers.ud_mi_oid",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "data.azurerm_subscription.current.id",
                      "data.azurerm_subscription.current",
                      "azurerm_mysql_flexible_server.mysql",
                      "each.value.mysql_flex_server_name",
                      "each.value",
                      "local.mysql_entra_admin_group.display_name",
                      "local.mysql_entra_admin_group",
                      "azurerm_mysql_flexible_server.mysql",
                      "each.value.mysql_flex_server_name",
                      "each.value",
                      "azurerm_mysql_flexible_database.flex_db",
                      "each.value.mysql_flex_database_name",
                      "each.value",
                      "each.value.mysql_flex_database_env",
                      "each.value",
                      "each.value.mysql_flex_database_name",
                      "each.value",
                      "each.value.ud_mi_name",
                      "each.value",
                      "azurerm_user_assigned_identity.ud_managed_identity",
                      "each.value.ud_mi_name",
                      "each.value",
                      "path.module",
                      "azurerm_mysql_flexible_server.mysql",
                      "each.value.mysql_flex_server_name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.mysql_flex_db_ddl_ud_mi_users"
                  ]
                },
                "depends_on": [
                  "azurerm_mysql_flexible_database.flex_db",
                  "azurerm_user_assigned_identity.ud_managed_identity",
                  "null_resource.mysql_roles",
                  "azurerm_mysql_flexible_server_active_directory_administrator.mysql_aad_admin_automation_spn"
                ]
              },
              {
                "address": "null_resource.mysql_dml_users",
                "mode": "managed",
                "type": "null_resource",
                "name": "mysql_dml_users",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x azlogin_oidc.sh; ./azlogin_oidc.sh; chmod +x mysql_create_dml_user.sh; ./mysql_create_dml_user.sh \"$MYS_AAD_ADMIN\" \"$MYSQL_FLEX_SERVER_NAME\" \"$MYSQL_DATABASE_NAME\" \"$MYS_MI_USERNAME\" \"$MYS_MI_ID\" \"$MYSQL_SHORT_DATABASE_NAME\""
                      },
                      "environment": {
                        "references": [
                          "self.triggers.mys_aad_admin",
                          "self.triggers",
                          "self",
                          "self.triggers.mysql_flex",
                          "self.triggers",
                          "self",
                          "self.triggers.mysql_db_name",
                          "self.triggers",
                          "self",
                          "self.triggers.mysql_short_db_name",
                          "self.triggers",
                          "self",
                          "self.triggers.ud_mi_name",
                          "self.triggers",
                          "self",
                          "self.triggers.ud_mi_oid",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "data.azurerm_subscription.current.id",
                      "data.azurerm_subscription.current",
                      "azurerm_mysql_flexible_server.mysql",
                      "each.value.mysql_flex_server_name",
                      "each.value",
                      "local.mysql_entra_admin_group.display_name",
                      "local.mysql_entra_admin_group",
                      "azurerm_mysql_flexible_server.mysql",
                      "each.value.mysql_flex_server_name",
                      "each.value",
                      "azurerm_mysql_flexible_database.flex_db",
                      "each.value.mysql_flex_database_name",
                      "each.value",
                      "each.value.mysql_flex_database_env",
                      "each.value",
                      "each.value.mysql_flex_database_name",
                      "each.value",
                      "each.value.ud_mi_name",
                      "each.value",
                      "azurerm_user_assigned_identity.ud_managed_identity",
                      "each.value.ud_mi_name",
                      "each.value",
                      "path.module",
                      "azurerm_mysql_flexible_server.mysql",
                      "each.value.mysql_flex_server_name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.mysql_flex_db_dml_ud_mi_users"
                  ]
                },
                "depends_on": [
                  "azurerm_mysql_flexible_database.flex_db",
                  "azurerm_user_assigned_identity.ud_managed_identity",
                  "null_resource.mysql_roles",
                  "azurerm_mysql_flexible_server_active_directory_administrator.mysql_aad_admin_automation_spn"
                ]
              },
              {
                "address": "null_resource.mysql_read_only_groups",
                "mode": "managed",
                "type": "null_resource",
                "name": "mysql_read_only_groups",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x azlogin_oidc.sh; ./azlogin_oidc.sh; chmod +x mysql_create_select_user.sh; ./mysql_create_select_user.sh \"$MYS_AAD_ADMIN\" \"$MYSQL_FLEX_SERVER_NAME\" \"$AD_GROUP_NAME\" \"$MYSQL_SHORT_DATABASE_NAME\""
                      },
                      "environment": {
                        "references": [
                          "self.triggers.mys_aad_admin",
                          "self.triggers",
                          "self",
                          "self.triggers.mysql_flex",
                          "self.triggers",
                          "self",
                          "self.triggers.mysql_short_db_name",
                          "self.triggers",
                          "self",
                          "self.triggers.ad_group_name",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "data.azurerm_subscription.current.id",
                      "data.azurerm_subscription.current",
                      "azurerm_mysql_flexible_server.mysql",
                      "each.value.mysql_flex_server_name",
                      "each.value",
                      "local.mysql_entra_admin_group.display_name",
                      "local.mysql_entra_admin_group",
                      "azurerm_mysql_flexible_server.mysql",
                      "each.value.mysql_flex_server_name",
                      "each.value",
                      "azurerm_mysql_flexible_database.flex_db",
                      "each.value.mysql_flex_database_name",
                      "each.value",
                      "each.value.mysql_flex_database_env",
                      "each.value",
                      "each.value.mysql_flex_database_name",
                      "each.value",
                      "each.value.ad_group_name",
                      "each.value",
                      "path.module",
                      "azurerm_mysql_flexible_server.mysql",
                      "each.value.mysql_flex_server_name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.mysql_flex_db_read_only_groups"
                  ]
                },
                "depends_on": [
                  "azurerm_mysql_flexible_database.flex_db",
                  "null_resource.mysql_roles",
                  "azurerm_mysql_flexible_server_active_directory_administrator.mysql_aad_admin_automation_spn"
                ]
              },
              {
                "address": "null_resource.mysql_roles",
                "mode": "managed",
                "type": "null_resource",
                "name": "mysql_roles",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x azlogin_oidc.sh; ./azlogin_oidc.sh; chmod +x mysql_create_roles.sh; ./mysql_create_roles.sh \"$MYS_ADMIN_PASSWORD\" \"$MYSQL_FLEX_SERVER_NAME\" \"$MYSQL_DATABASE_NAME\" \"$MYSQL_SHORT_DATABASE_NAME\""
                      },
                      "environment": {
                        "references": [
                          "azurerm_mysql_flexible_server.mysql",
                          "each.value.mysql_name",
                          "each.value",
                          "self.triggers.mysql_flex",
                          "self.triggers",
                          "self",
                          "self.triggers.mysql_db_name",
                          "self.triggers",
                          "self",
                          "self.triggers.mysql_short_db_name",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "data.azurerm_subscription.current.id",
                      "data.azurerm_subscription.current",
                      "azurerm_mysql_flexible_server.mysql",
                      "each.value.mysql_name",
                      "each.value",
                      "azurerm_mysql_flexible_server.mysql",
                      "each.value.mysql_name",
                      "each.value",
                      "azurerm_mysql_flexible_database.flex_db",
                      "each.value.db_name",
                      "each.value",
                      "each.value.db_env",
                      "each.value",
                      "each.value.db_name",
                      "each.value",
                      "azurerm_mysql_flexible_server.mysql",
                      "each.value.mysql_name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.mysqls_databases"
                  ]
                },
                "depends_on": [
                  "azurerm_mysql_flexible_database.flex_db"
                ]
              },
              {
                "address": "null_resource.mysql_user",
                "mode": "managed",
                "type": "null_resource",
                "name": "mysql_user",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x azlogin_oidc.sh; ./azlogin_oidc.sh; chmod +x mysql_create_mysql_user.sh; ./mysql_create_mysql_user.sh \"$MYS_ADMIN_PASSWORD\" \"$MYSQL_FLEX_SERVER_NAME\" \"$MYSQL_EC_PWD\" \"$MYSQL_TEST_PASSWORD\" \"$TEST_MODE\""
                      },
                      "environment": {
                        "references": [
                          "azurerm_mysql_flexible_server.mysql",
                          "each.value.name",
                          "each.value",
                          "self.triggers.mysql_flex",
                          "self.triggers",
                          "self",
                          "self.triggers.test_mode",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "data.azurerm_subscription.current.id",
                      "data.azurerm_subscription.current",
                      "azurerm_mysql_flexible_server.mysql",
                      "each.value.name",
                      "each.value",
                      "azurerm_mysql_flexible_server.mysql",
                      "each.value.name",
                      "each.value",
                      "path.module",
                      "each.value.test_mode",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.mysqls"
                  ]
                },
                "depends_on": [
                  "azurerm_mysql_flexible_server.mysql"
                ]
              },
              {
                "address": "null_resource.nginx_opt_out_flag_cluster_yaml_input",
                "mode": "managed",
                "type": "null_resource",
                "name": "nginx_opt_out_flag_cluster_yaml_input",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x nginx_opt_out_cluster_yaml_input.sh; ./nginx_opt_out_cluster_yaml_input.sh add $CLUSTER_NAME"
                      },
                      "environment": {
                        "references": [
                          "self.triggers.cluster_name",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  },
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x nginx_opt_out_cluster_yaml_input.sh; ./nginx_opt_out_cluster_yaml_input.sh rm $CLUSTER_NAME"
                      },
                      "environment": {
                        "references": [
                          "self.triggers.cluster_name",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].name",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.aks_cluster.web_app_routing_enabled_preview",
                    "var.aks_cluster",
                    "data.azurerm_user_assigned_identity.webapprouting_managed_identity",
                    "var.aks_cluster.service_mesh",
                    "var.aks_cluster",
                    "azurerm_kubernetes_cluster.aks_cluster[0].open_service_mesh_enabled",
                    "azurerm_kubernetes_cluster.aks_cluster[0]",
                    "azurerm_kubernetes_cluster.aks_cluster",
                    "azurerm_kubernetes_cluster.aks_cluster[0].open_service_mesh_enabled",
                    "azurerm_kubernetes_cluster.aks_cluster[0]",
                    "azurerm_kubernetes_cluster.aks_cluster"
                  ]
                },
                "depends_on": [
                  "null_resource.bootstrap_cluster_yaml_file",
                  "null_resource.argocd_setup"
                ]
              },
              {
                "address": "null_resource.psql_ddl_users",
                "mode": "managed",
                "type": "null_resource",
                "name": "psql_ddl_users",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x azlogin_oidc.sh; ./azlogin_oidc.sh; chmod +x psql_create_ddl_user.sh; ./psql_create_ddl_user.sh \"$PG_AAD_ADMIN\" \"$PSQL_FLEX_SERVER_NAME\" \"$PSQL_DATABASE_NAME\" \"$PG_MI_USERNAME\" \"$MANAGED_IDENTITY_OBJECT_ID\""
                      },
                      "environment": {
                        "references": [
                          "self.triggers.pg_aad_admin",
                          "self.triggers",
                          "self",
                          "self.triggers.psql_flex",
                          "self.triggers",
                          "self",
                          "self.triggers.psql_db_name",
                          "self.triggers",
                          "self",
                          "self.triggers.ud_mi_name",
                          "self.triggers",
                          "self",
                          "self.triggers.psql_db_name",
                          "self.triggers",
                          "self",
                          "self.triggers.ud_mi_oid",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  },
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "self.triggers.destroy_command",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.triggers.pg_aad_admin",
                          "self.triggers",
                          "self",
                          "self.triggers.psql_flex",
                          "self.triggers",
                          "self",
                          "self.triggers.psql_db_name",
                          "self.triggers",
                          "self",
                          "self.triggers.ud_mi_name",
                          "self.triggers",
                          "self",
                          "self.triggers.psql_db_name",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "self.triggers.working_dir",
                          "self.triggers",
                          "self"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "data.azurerm_subscription.current.id",
                      "data.azurerm_subscription.current",
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.psql_flex_server_name",
                      "each.value",
                      "local.automation_spn.display_name",
                      "local.automation_spn",
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.psql_flex_server_name",
                      "each.value",
                      "azurerm_postgresql_flexible_server_database.flex_db",
                      "each.value.psql_flex_database_name",
                      "each.value",
                      "each.value.psql_flex_database_env",
                      "each.value",
                      "each.value.ud_mi_name",
                      "each.value",
                      "azurerm_user_assigned_identity.ud_managed_identity",
                      "each.value.ud_mi_name",
                      "each.value",
                      "path.module",
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.psql_flex_server_name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.psql_flex_db_ddl_ud_mi_users"
                  ]
                },
                "depends_on": [
                  "azurerm_postgresql_flexible_server_database.flex_db",
                  "azurerm_user_assigned_identity.ud_managed_identity",
                  "null_resource.psql_schema",
                  "azurerm_postgresql_flexible_server_active_directory_administrator.psql_aad_admin_automation_spn"
                ]
              },
              {
                "address": "null_resource.psql_dml_users",
                "mode": "managed",
                "type": "null_resource",
                "name": "psql_dml_users",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x azlogin_oidc.sh; ./azlogin_oidc.sh; chmod +x psql_create_dml_user.sh; ./psql_create_dml_user.sh \"$PG_AAD_ADMIN\" \"$PSQL_FLEX_SERVER_NAME\" \"$PSQL_DATABASE_NAME\" \"$PG_MI_USERNAME\" \"$MANAGED_IDENTITY_OBJECT_ID\""
                      },
                      "environment": {
                        "references": [
                          "self.triggers.pg_aad_admin",
                          "self.triggers",
                          "self",
                          "self.triggers.psql_flex",
                          "self.triggers",
                          "self",
                          "self.triggers.psql_db_name",
                          "self.triggers",
                          "self",
                          "self.triggers.ud_mi_name",
                          "self.triggers",
                          "self",
                          "self.triggers.psql_db_name",
                          "self.triggers",
                          "self",
                          "self.triggers.ud_mi_oid",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  },
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "self.triggers.destroy_command",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.triggers.pg_aad_admin",
                          "self.triggers",
                          "self",
                          "self.triggers.psql_flex",
                          "self.triggers",
                          "self",
                          "self.triggers.psql_db_name",
                          "self.triggers",
                          "self",
                          "self.triggers.ud_mi_name",
                          "self.triggers",
                          "self",
                          "self.triggers.psql_db_name",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "self.triggers.working_dir",
                          "self.triggers",
                          "self"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "data.azurerm_subscription.current.id",
                      "data.azurerm_subscription.current",
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.psql_flex_server_name",
                      "each.value",
                      "local.automation_spn.display_name",
                      "local.automation_spn",
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.psql_flex_server_name",
                      "each.value",
                      "azurerm_postgresql_flexible_server_database.flex_db",
                      "each.value.psql_flex_database_name",
                      "each.value",
                      "each.value.psql_flex_database_env",
                      "each.value",
                      "each.value.ud_mi_name",
                      "each.value",
                      "azurerm_user_assigned_identity.ud_managed_identity",
                      "each.value.ud_mi_name",
                      "each.value",
                      "path.module",
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.psql_flex_server_name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.psql_flex_db_dml_ud_mi_users"
                  ]
                },
                "depends_on": [
                  "azurerm_postgresql_flexible_server_database.flex_db",
                  "azurerm_user_assigned_identity.ud_managed_identity",
                  "null_resource.psql_schema",
                  "azurerm_postgresql_flexible_server_active_directory_administrator.psql_aad_admin_automation_spn"
                ]
              },
              {
                "address": "null_resource.psql_extension",
                "mode": "managed",
                "type": "null_resource",
                "name": "psql_extension",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x psql_create_extension.sh; ./psql_create_extension.sh \"$PG_ADMIN_PASSWORD\" \"$PSQL_FLEX_SERVER_NAME\" \"$PSQL_DATABASE_NAME\" \"$PSQL_DATABASE_EXTENSION\""
                      },
                      "environment": {
                        "references": [
                          "azurerm_postgresql_flexible_server.psql",
                          "each.value.psql_flex_server_name",
                          "each.value",
                          "self.triggers.psql_flex",
                          "self.triggers",
                          "self",
                          "self.triggers.psql_db_name",
                          "self.triggers",
                          "self",
                          "self.triggers.psql_db_extension",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "data.azurerm_subscription.current.id",
                      "data.azurerm_subscription.current",
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.psql_flex_server_name",
                      "each.value",
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.psql_flex_server_name",
                      "each.value",
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.psql_flex_server_name",
                      "each.value",
                      "azurerm_postgresql_flexible_server_database.flex_db",
                      "each.value.psql_flex_database_name",
                      "each.value",
                      "each.value.psql_flex_database_env",
                      "each.value",
                      "each.value.name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.psqls_databases_extensions"
                  ]
                },
                "depends_on": [
                  "azurerm_postgresql_flexible_server_database.flex_db",
                  "azurerm_postgresql_flexible_server_configuration.psql_extensions",
                  "azurerm_postgresql_flexible_server_configuration.psql_shared_library"
                ]
              },
              {
                "address": "null_resource.psql_postgres_user",
                "mode": "managed",
                "type": "null_resource",
                "name": "psql_postgres_user",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x psql_create_postgres_user.sh; ./psql_create_postgres_user.sh \"$PG_ADMIN_PASSWORD\" \"$PSQL_FLEX_SERVER_NAME\" \"$POSTGRES_EC_PWD\""
                      },
                      "environment": {
                        "references": [
                          "azurerm_postgresql_flexible_server.psql",
                          "each.value.name",
                          "each.value",
                          "self.triggers.psql_flex",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "data.azurerm_subscription.current.id",
                      "data.azurerm_subscription.current",
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.name",
                      "each.value",
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.name",
                      "each.value",
                      "path.module"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.psqls"
                  ]
                },
                "depends_on": [
                  "azurerm_postgresql_flexible_server.psql"
                ]
              },
              {
                "address": "null_resource.psql_read_only_groups",
                "mode": "managed",
                "type": "null_resource",
                "name": "psql_read_only_groups",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x psql_create_select_user.sh; ./psql_create_select_user.sh \"$PG_AAD_ADMIN\" \"$PSQL_FLEX_SERVER_NAME\" \"$PSQL_DATABASE_NAME\" \"$AD_GROUP_ID\""
                      },
                      "environment": {
                        "references": [
                          "self.triggers.pg_aad_admin",
                          "self.triggers",
                          "self",
                          "self.triggers.psql_flex",
                          "self.triggers",
                          "self",
                          "self.triggers.psql_db_name",
                          "self.triggers",
                          "self",
                          "self.triggers.ad_group_id",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  },
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "self.triggers.destroy_command",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.triggers.pg_aad_admin",
                          "self.triggers",
                          "self",
                          "self.triggers.psql_flex",
                          "self.triggers",
                          "self",
                          "self.triggers.psql_db_name",
                          "self.triggers",
                          "self",
                          "self.triggers.ad_group_id",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "self.triggers.working_dir",
                          "self.triggers",
                          "self"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "data.azurerm_subscription.current.id",
                      "data.azurerm_subscription.current",
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.psql_flex_server_name",
                      "each.value",
                      "local.automation_spn.display_name",
                      "local.automation_spn",
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.psql_flex_server_name",
                      "each.value",
                      "azurerm_postgresql_flexible_server_database.flex_db",
                      "each.value.psql_flex_database_name",
                      "each.value",
                      "each.value.psql_flex_database_env",
                      "each.value",
                      "each.value.ad_group_id",
                      "each.value",
                      "path.module",
                      "each.value.ad_group_id",
                      "each.value",
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.psql_flex_server_name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.psql_flex_db_read_only_groups"
                  ]
                },
                "depends_on": [
                  "azurerm_postgresql_flexible_server_database.flex_db",
                  "null_resource.psql_schema",
                  "azurerm_postgresql_flexible_server_active_directory_administrator.psql_aad_admin_automation_spn"
                ]
              },
              {
                "address": "null_resource.psql_schema",
                "mode": "managed",
                "type": "null_resource",
                "name": "psql_schema",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x psql_create_schema_and_roles.sh; ./psql_create_schema_and_roles.sh \"$PG_ADMIN_PASSWORD\" \"$PSQL_FLEX_SERVER_NAME\" \"$PSQL_DATABASE_NAME\" \"$PSQL_SCHEMA_NAME\""
                      },
                      "environment": {
                        "references": [
                          "azurerm_postgresql_flexible_server.psql",
                          "each.value.psql_name",
                          "each.value",
                          "self.triggers.psql_flex",
                          "self.triggers",
                          "self",
                          "self.triggers.psql_db_name",
                          "self.triggers",
                          "self",
                          "var.application_id"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "data.azurerm_subscription.current.id",
                      "data.azurerm_subscription.current",
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.psql_name",
                      "each.value",
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.psql_name",
                      "each.value",
                      "azurerm_postgresql_flexible_server_database.flex_db",
                      "each.value.db_name",
                      "each.value",
                      "each.value.db_env",
                      "each.value",
                      "azurerm_postgresql_flexible_server.psql",
                      "each.value.psql_name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.psqls_databases"
                  ]
                },
                "depends_on": [
                  "azurerm_postgresql_flexible_server_database.flex_db"
                ]
              },
              {
                "address": "null_resource.secret_provider_identity",
                "mode": "managed",
                "type": "null_resource",
                "name": "secret_provider_identity",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x secret_provider_identity.sh; ./secret_provider_identity.sh add $CLUSTER_NAME $CLIENT_ID"
                      },
                      "environment": {
                        "references": [
                          "self.triggers.cluster_name",
                          "self.triggers",
                          "self",
                          "self.triggers.client_id",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  },
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x secret_provider_identity.sh; ./secret_provider_identity.sh rm $CLUSTER_NAME $CLIENT_ID"
                      },
                      "environment": {
                        "references": [
                          "self.triggers.cluster_name",
                          "self.triggers",
                          "self",
                          "self.triggers.client_id",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].name",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster",
                      "var.aks_cluster.key_vault_secrets_provider",
                      "var.aks_cluster",
                      "azurerm_kubernetes_cluster.aks_cluster[0].key_vault_secrets_provider[0].secret_identity[0].client_id",
                      "azurerm_kubernetes_cluster.aks_cluster[0].key_vault_secrets_provider[0].secret_identity[0]",
                      "azurerm_kubernetes_cluster.aks_cluster[0].key_vault_secrets_provider[0].secret_identity",
                      "azurerm_kubernetes_cluster.aks_cluster[0].key_vault_secrets_provider[0]",
                      "azurerm_kubernetes_cluster.aks_cluster[0].key_vault_secrets_provider",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.aks_cluster.key_vault_secrets_provider",
                    "var.aks_cluster"
                  ]
                },
                "depends_on": [
                  "null_resource.bootstrap_cluster_yaml_file",
                  "null_resource.argocd_setup",
                  "null_resource.nginx_opt_out_flag_cluster_yaml_input",
                  "null_resource.delete_remaining_workload_identity_cluster_yaml_input_when_destroyed",
                  "null_resource.delete_remaining_namespaces_when_destroyed",
                  "null_resource.aks_namespaces",
                  "null_resource.workload_identity_cluster_yaml_input",
                  "null_resource.aks_loadBalancerIp",
                  "null_resource.istio_service_mesh"
                ]
              },
              {
                "address": "null_resource.winvm_jobs",
                "mode": "managed",
                "type": "null_resource",
                "name": "winvm_jobs",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x windows_vm_post_build_with_go.sh; ./windows_vm_post_build_with_go.sh $FQDN $WIN_POSTBUILD_ENDPOINT $JSON_PAYLOAD"
                      },
                      "environment": {
                        "references": [
                          "self.triggers.fqdn",
                          "self.triggers",
                          "self",
                          "self.triggers.win_postbuild_endpoint",
                          "self.triggers",
                          "self",
                          "self.triggers.fqdn",
                          "self.triggers",
                          "self",
                          "self.triggers.ip",
                          "self.triggers",
                          "self",
                          "self.triggers.e_size",
                          "self.triggers",
                          "self",
                          "data.external.lookup_origin_pr_env_var.result.pr_number",
                          "data.external.lookup_origin_pr_env_var.result",
                          "data.external.lookup_origin_pr_env_var"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "var.organization",
                      "path.cwd",
                      "path.cwd",
                      "azurerm_windows_virtual_machine.vms",
                      "each.key",
                      "each.value.line_of_business",
                      "each.value",
                      "azurerm_windows_virtual_machine.vms",
                      "each.key",
                      "each.value.e_disk_size",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.vm_list",
                    "var.skip_vm_postbuild"
                  ]
                },
                "depends_on": [
                  "azurerm_virtual_machine_extension.winrm_https"
                ]
              },
              {
                "address": "null_resource.workload_identity_cluster_yaml_input",
                "mode": "managed",
                "type": "null_resource",
                "name": "workload_identity_cluster_yaml_input",
                "provider_config_key": "module.spoke_asgwy_qa:null",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x workload_identity_cluster_yaml_input.sh; ./workload_identity_cluster_yaml_input.sh add $CLUSTER_NAME \"$NAMESPACES\" \"$MANAGED_IDENTITY_CLIENT_IDS\""
                      },
                      "environment": {
                        "references": [
                          "self.triggers.cluster_name",
                          "self.triggers",
                          "self",
                          "self.triggers.namespaces",
                          "self.triggers",
                          "self",
                          "self.triggers.managed_identity_client_ids",
                          "self.triggers",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "path.module"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "triggers": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].name",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster",
                      "local.namespaces_for_workload_identity_yaml_input",
                      "local.workload_identity_client_ids_cluster_yaml_input"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.aks_federated_credentials"
                  ]
                },
                "depends_on": [
                  "null_resource.bootstrap_cluster_yaml_file",
                  "null_resource.argocd_setup",
                  "null_resource.nginx_opt_out_flag_cluster_yaml_input",
                  "null_resource.delete_remaining_workload_identity_cluster_yaml_input_when_destroyed",
                  "null_resource.delete_remaining_namespaces_when_destroyed",
                  "null_resource.aks_namespaces"
                ]
              },
              {
                "address": "random_id.random_id",
                "mode": "managed",
                "type": "random_id",
                "name": "random_id",
                "provider_config_key": "module.spoke_asgwy_qa:random",
                "expressions": {
                  "byte_length": {
                    "constant_value": 8
                  },
                  "keepers": {
                    "references": [
                      "azurerm_resource_group.network_rg[0].name",
                      "azurerm_resource_group.network_rg[0]",
                      "azurerm_resource_group.network_rg"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.virtual_machines"
                  ]
                }
              },
              {
                "address": "random_password.aks_windows_password",
                "mode": "managed",
                "type": "random_password",
                "name": "aks_windows_password",
                "provider_config_key": "module.spoke_asgwy_qa:random",
                "expressions": {
                  "length": {
                    "constant_value": 20
                  },
                  "special": {
                    "constant_value": true
                  }
                },
                "schema_version": 3,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.aks_cluster.network_plugin",
                    "var.aks_cluster"
                  ]
                }
              },
              {
                "address": "random_password.password_mysql_flex",
                "mode": "managed",
                "type": "random_password",
                "name": "password_mysql_flex",
                "provider_config_key": "module.spoke_asgwy_qa:random",
                "expressions": {
                  "length": {
                    "constant_value": 128
                  },
                  "override_special": {
                    "constant_value": "!#$%&*()-_=+[]{}<>:?"
                  },
                  "special": {
                    "constant_value": true
                  }
                },
                "schema_version": 3,
                "count_expression": {
                  "references": [
                    "local.mysqls"
                  ]
                }
              },
              {
                "address": "random_password.password_psql_flex",
                "mode": "managed",
                "type": "random_password",
                "name": "password_psql_flex",
                "provider_config_key": "module.spoke_asgwy_qa:random",
                "expressions": {
                  "length": {
                    "constant_value": 128
                  },
                  "override_special": {
                    "constant_value": "!#$%&*()-_=+[]{}<>:?"
                  },
                  "special": {
                    "constant_value": true
                  }
                },
                "schema_version": 3,
                "count_expression": {
                  "references": [
                    "var.psqls"
                  ]
                }
              },
              {
                "address": "random_password.win_default_admin_pass",
                "mode": "managed",
                "type": "random_password",
                "name": "win_default_admin_pass",
                "provider_config_key": "module.spoke_asgwy_qa:random",
                "expressions": {
                  "length": {
                    "constant_value": 64
                  },
                  "min_numeric": {
                    "constant_value": 2
                  },
                  "min_special": {
                    "constant_value": 2
                  },
                  "min_upper": {
                    "constant_value": 2
                  },
                  "override_special": {
                    "constant_value": "!#$%&*()-_=+[]{}<>:?"
                  }
                },
                "schema_version": 3,
                "count_expression": {
                  "references": [
                    "local.vm_list"
                  ]
                }
              },
              {
                "address": "random_string.aks_suffix_name",
                "mode": "managed",
                "type": "random_string",
                "name": "aks_suffix_name",
                "provider_config_key": "module.spoke_asgwy_qa:random",
                "expressions": {
                  "length": {
                    "constant_value": 3
                  },
                  "special": {
                    "constant_value": false
                  },
                  "upper": {
                    "constant_value": false
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "var.aks_cluster.random_suffix",
                    "var.aks_cluster"
                  ]
                }
              },
              {
                "address": "random_string.kvname",
                "mode": "managed",
                "type": "random_string",
                "name": "kvname",
                "provider_config_key": "module.spoke_asgwy_qa:random",
                "expressions": {
                  "length": {
                    "constant_value": 6
                  },
                  "special": {
                    "constant_value": false
                  },
                  "upper": {
                    "constant_value": false
                  }
                },
                "schema_version": 2
              },
              {
                "address": "random_string.nsg_suffix",
                "mode": "managed",
                "type": "random_string",
                "name": "nsg_suffix",
                "provider_config_key": "module.spoke_asgwy_qa:random",
                "expressions": {
                  "length": {
                    "constant_value": 4
                  },
                  "special": {
                    "constant_value": false
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "local.subnet_with_infoblox",
                    "local.micro_call",
                    "var.random_nsg_suffix"
                  ]
                }
              },
              {
                "address": "random_string.peering",
                "mode": "managed",
                "type": "random_string",
                "name": "peering",
                "provider_config_key": "module.spoke_asgwy_qa:random",
                "expressions": {
                  "length": {
                    "constant_value": 6
                  },
                  "special": {
                    "constant_value": false
                  },
                  "upper": {
                    "constant_value": false
                  }
                },
                "schema_version": 2
              },
              {
                "address": "terraform_data.adf_kv_lock_triggers",
                "mode": "managed",
                "type": "terraform_data",
                "name": "adf_kv_lock_triggers",
                "provider_config_key": "module.spoke_asgwy_qa:terraform",
                "expressions": {
                  "input": {
                    "references": [
                      "azurerm_key_vault.adf_keyvault[0].id",
                      "azurerm_key_vault.adf_keyvault[0]",
                      "azurerm_key_vault.adf_keyvault",
                      "azurerm_private_endpoint.adf_keyvault_pep[0].id",
                      "azurerm_private_endpoint.adf_keyvault_pep[0]",
                      "azurerm_private_endpoint.adf_keyvault_pep",
                      "azurerm_monitor_diagnostic_setting.diag_adf_kv[0].id",
                      "azurerm_monitor_diagnostic_setting.diag_adf_kv[0]",
                      "azurerm_monitor_diagnostic_setting.diag_adf_kv"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.adf_subnet_name",
                    "var.data_factory.legacy_adf",
                    "var.data_factory"
                  ]
                }
              },
              {
                "address": "terraform_data.ai_kv_lock_triggers",
                "mode": "managed",
                "type": "terraform_data",
                "name": "ai_kv_lock_triggers",
                "provider_config_key": "module.spoke_asgwy_qa:terraform",
                "expressions": {
                  "input": {
                    "references": [
                      "azurerm_key_vault.ai_kv",
                      "each.value",
                      "azurerm_private_endpoint.ai_kv_peps",
                      "each.value",
                      "azurerm_monitor_diagnostic_setting.diag_ai_kv",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.ai_locations_needing_keys"
                  ]
                }
              },
              {
                "address": "terraform_data.aks_de_keyvault_lock_triggers",
                "mode": "managed",
                "type": "terraform_data",
                "name": "aks_de_keyvault_lock_triggers",
                "provider_config_key": "module.spoke_asgwy_qa:terraform",
                "expressions": {
                  "input": {
                    "references": [
                      "azurerm_key_vault.aks_de_keyvault[0].id",
                      "azurerm_key_vault.aks_de_keyvault[0]",
                      "azurerm_key_vault.aks_de_keyvault",
                      "azurerm_private_endpoint.aks_de_keyvault_pep[0].id",
                      "azurerm_private_endpoint.aks_de_keyvault_pep[0]",
                      "azurerm_private_endpoint.aks_de_keyvault_pep",
                      "azurerm_monitor_diagnostic_setting.diag_aks_de_keyvault[0].id",
                      "azurerm_monitor_diagnostic_setting.diag_aks_de_keyvault[0]",
                      "azurerm_monitor_diagnostic_setting.diag_aks_de_keyvault"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.kv_locks"
                  ]
                }
              },
              {
                "address": "terraform_data.aks_int_keyvault_lock_triggers",
                "mode": "managed",
                "type": "terraform_data",
                "name": "aks_int_keyvault_lock_triggers",
                "provider_config_key": "module.spoke_asgwy_qa:terraform",
                "expressions": {
                  "input": {
                    "references": [
                      "azurerm_key_vault.aks_int_keyvault[0].id",
                      "azurerm_key_vault.aks_int_keyvault[0]",
                      "azurerm_key_vault.aks_int_keyvault",
                      "azurerm_private_endpoint.aks_int_keyvault_pep[0].id",
                      "azurerm_private_endpoint.aks_int_keyvault_pep[0]",
                      "azurerm_private_endpoint.aks_int_keyvault_pep",
                      "azurerm_monitor_diagnostic_setting.diag_aks_int_keyvault[0].id",
                      "azurerm_monitor_diagnostic_setting.diag_aks_int_keyvault[0]",
                      "azurerm_monitor_diagnostic_setting.diag_aks_int_keyvault"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.aks_cluster.key_vault_secrets_provider",
                    "var.aks_cluster"
                  ]
                }
              },
              {
                "address": "terraform_data.apim_kv_lock_triggers",
                "mode": "managed",
                "type": "terraform_data",
                "name": "apim_kv_lock_triggers",
                "provider_config_key": "module.spoke_asgwy_qa:terraform",
                "expressions": {
                  "input": {
                    "references": [
                      "azurerm_key_vault.apim_key_vaults",
                      "each.key",
                      "azurerm_private_endpoint.apim_key_vaults_pes",
                      "each.key",
                      "azurerm_monitor_diagnostic_setting.diag_apim_keyvault",
                      "each.key"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.api_management",
                    "var.kv_locks"
                  ]
                }
              },
              {
                "address": "terraform_data.base_custom_kv_lock_triggers",
                "mode": "managed",
                "type": "terraform_data",
                "name": "base_custom_kv_lock_triggers",
                "provider_config_key": "module.spoke_asgwy_qa:terraform",
                "expressions": {
                  "input": {
                    "references": [
                      "azurerm_key_vault.base_custom_kv",
                      "count.index",
                      "azurerm_private_endpoint.base_custom_kv_pes",
                      "count.index",
                      "azurerm_monitor_diagnostic_setting.diag_base_custom_kv",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.use_custom_key_vault",
                    "local.build_base_resources"
                  ]
                }
              },
              {
                "address": "terraform_data.base_kv_lock_triggers",
                "mode": "managed",
                "type": "terraform_data",
                "name": "base_kv_lock_triggers",
                "provider_config_key": "module.spoke_asgwy_qa:terraform",
                "expressions": {
                  "input": {
                    "references": [
                      "azurerm_key_vault.base_kv[0].id",
                      "azurerm_key_vault.base_kv[0]",
                      "azurerm_key_vault.base_kv",
                      "azurerm_private_endpoint.base_kv_pep[0].id",
                      "azurerm_private_endpoint.base_kv_pep[0]",
                      "azurerm_private_endpoint.base_kv_pep",
                      "azurerm_monitor_diagnostic_setting.diag_base_kv[0].id",
                      "azurerm_monitor_diagnostic_setting.diag_base_kv[0]",
                      "azurerm_monitor_diagnostic_setting.diag_base_kv"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.is_spoke",
                    "local.build_base_resources"
                  ]
                }
              },
              {
                "address": "terraform_data.cog_kv_lock_triggers",
                "mode": "managed",
                "type": "terraform_data",
                "name": "cog_kv_lock_triggers",
                "provider_config_key": "module.spoke_asgwy_qa:terraform",
                "expressions": {
                  "input": {
                    "references": [
                      "azurerm_key_vault.cog_kv",
                      "each.value",
                      "azurerm_private_endpoint.cog_kv_peps",
                      "each.value",
                      "azurerm_monitor_diagnostic_setting.diag_cog_kv",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.locations_needing_keys"
                  ]
                }
              },
              {
                "address": "terraform_data.existing_rgs",
                "mode": "managed",
                "type": "terraform_data",
                "name": "existing_rgs",
                "provider_config_key": "module.spoke_asgwy_qa:terraform",
                "expressions": {
                  "input": {
                    "references": [
                      "local.name_prefix",
                      "path.cwd",
                      "path.cwd",
                      "path.cwd",
                      "path.cwd",
                      "path.cwd"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.all_vm_requests"
                  ]
                },
                "depends_on": [
                  "data.external.existing_rgs"
                ]
              },
              {
                "address": "terraform_data.geo_loc_dns_request",
                "mode": "managed",
                "type": "terraform_data",
                "name": "geo_loc_dns_request",
                "provider_config_key": "module.spoke_asgwy_qa:terraform",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "local.dns_command_add"
                        ]
                      },
                      "environment": {
                        "references": [
                          "azurerm_private_endpoint.cosmosdb_nosql_pes",
                          "each.value.account",
                          "each.value",
                          "each.value.priority",
                          "each.value",
                          "azurerm_private_endpoint.cosmosdb_nosql_pes",
                          "each.value.account",
                          "each.value",
                          "each.value.priority",
                          "each.value",
                          "azurerm_private_endpoint.cosmosdb_nosql_pes",
                          "each.value.account",
                          "each.value",
                          "each.value.priority",
                          "each.value"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.cdb_nosql_geo_locations"
                  ]
                },
                "depends_on": [
                  "azurerm_private_endpoint.cosmosdb_nosql_pes"
                ]
              },
              {
                "address": "terraform_data.go_live_date",
                "mode": "managed",
                "type": "terraform_data",
                "name": "go_live_date",
                "provider_config_key": "module.spoke_asgwy_qa:terraform",
                "expressions": {
                  "input": {
                    "references": [
                      "var.go_live_date"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "terraform_data.join_ad",
                "mode": "managed",
                "type": "terraform_data",
                "name": "join_ad",
                "provider_config_key": "module.spoke_asgwy_qa:terraform",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x vm_ad_join.sh; ./vm_ad_join.sh $fqdn $lob $rg $vm_name $sub_id $AETH_AD_JOIN_USERNAME $AETH_AD_JOIN_PASSWORD $CORP_AD_JOIN_USERNAME $CORP_AD_JOIN_PASSWORD $ou_year"
                      },
                      "environment": {
                        "references": [
                          "self.input.fqdn",
                          "self.input",
                          "self",
                          "each.value.line_of_business",
                          "each.value",
                          "self.input.rg",
                          "self.input",
                          "self",
                          "self.input.vm_name",
                          "self.input",
                          "self",
                          "data.azurerm_subscription.current.subscription_id",
                          "data.azurerm_subscription.current",
                          "self.input.ou_year",
                          "self.input",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "input": {
                    "references": [
                      "azurerm_windows_virtual_machine.vms",
                      "each.key",
                      "each.value.line_of_business",
                      "each.value",
                      "each.value.line_of_business",
                      "each.value",
                      "azurerm_windows_virtual_machine.vms",
                      "each.key",
                      "azurerm_windows_virtual_machine.vms",
                      "each.key",
                      "each.value.ou_year",
                      "each.value",
                      "data.azurerm_shared_image_version.os_image",
                      "each.key",
                      "each.value.ou_year",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.vm_list"
                  ]
                }
              },
              {
                "address": "terraform_data.kv_rbac_scopes",
                "mode": "managed",
                "type": "terraform_data",
                "name": "kv_rbac_scopes",
                "provider_config_key": "module.spoke_asgwy_qa:terraform",
                "expressions": {
                  "input": {
                    "references": [
                      "local.rbac_lists"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "terraform_data.linux_postbuild",
                "mode": "managed",
                "type": "terraform_data",
                "name": "linux_postbuild",
                "provider_config_key": "module.spoke_asgwy_qa:terraform",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x linux_vm_post_build_with_go.sh; ./linux_vm_post_build_with_go.sh $ipv4 $fqdn $env $CLOUDBEES_AUTH $location $lob $patch $cloudbees_env"
                      },
                      "environment": {
                        "references": [
                          "self.input.ipv4",
                          "self.input",
                          "self",
                          "self.input.fqdn",
                          "self.input",
                          "self",
                          "var.environment",
                          "var.location",
                          "each.value.line_of_business",
                          "each.value",
                          "each.value.patch",
                          "each.value",
                          "self.input.cloudbees_env",
                          "self.input",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  },
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "chmod +x vm_pre_destroy_with_go.sh; ./vm_pre_destroy_with_go.sh $FQDN $IPV4 $LOB $CLOUDBEES_AUTH $CLOUDBEES_ENV"
                      },
                      "environment": {
                        "references": [
                          "self.input.fqdn",
                          "self.input",
                          "self",
                          "self.input.ipv4",
                          "self.input",
                          "self",
                          "self.input.lob",
                          "self.input",
                          "self",
                          "self.input.git_tag",
                          "self.input",
                          "self",
                          "self.input.cloudbees_env",
                          "self.input",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "self.input.working_dir",
                          "self.input",
                          "self"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "input": {
                    "references": [
                      "each.value.line_of_business",
                      "each.value",
                      "local.script_dir",
                      "azurerm_linux_virtual_machine.vms",
                      "each.key",
                      "azurerm_linux_virtual_machine.vms",
                      "each.key",
                      "each.value.line_of_business",
                      "each.value",
                      "var.environment",
                      "var.environment",
                      "var.vm_cloudbees_env"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.vm_list",
                    "var.skip_vm_postbuild"
                  ]
                }
              },
              {
                "address": "terraform_data.nsg_micro",
                "mode": "managed",
                "type": "terraform_data",
                "name": "nsg_micro",
                "provider_config_key": "module.spoke_asgwy_qa:terraform",
                "expressions": {
                  "input": {
                    "references": [
                      "var.micro_type"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.micro_type"
                  ]
                }
              },
              {
                "address": "terraform_data.ud_key_vaults_lock_triggers",
                "mode": "managed",
                "type": "terraform_data",
                "name": "ud_key_vaults_lock_triggers",
                "provider_config_key": "module.spoke_asgwy_qa:terraform",
                "expressions": {
                  "input": {
                    "references": [
                      "azurerm_key_vault.ud_key_vaults",
                      "each.key",
                      "azurerm_private_endpoint.ud_key_vaults_pes",
                      "each.key",
                      "azurerm_monitor_diagnostic_setting.diag_ud_key_vaults",
                      "each.key"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.key_vaults",
                    "var.kv_locks"
                  ]
                }
              },
              {
                "address": "terraform_data.vm_dns_record",
                "mode": "managed",
                "type": "terraform_data",
                "name": "vm_dns_record",
                "provider_config_key": "module.spoke_asgwy_qa:terraform",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "self.input.add_command",
                          "self.input",
                          "self"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.input.hostname",
                          "self.input",
                          "self",
                          "self.input.ip_address",
                          "self.input",
                          "self",
                          "self.input.hostname",
                          "self.input",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "self.input.working_dir",
                          "self.input",
                          "self"
                        ]
                      }
                    }
                  },
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "references": [
                          "self.input.delete_command",
                          "self.input",
                          "self"
                        ]
                      },
                      "environment": {
                        "references": [
                          "self.input.hostname",
                          "self.input",
                          "self",
                          "self.input.ip_address",
                          "self.input",
                          "self",
                          "self.input.hostname",
                          "self.input",
                          "self"
                        ]
                      },
                      "working_dir": {
                        "references": [
                          "self.input.working_dir",
                          "self.input",
                          "self"
                        ]
                      }
                    }
                  }
                ],
                "expressions": {
                  "input": {
                    "references": [
                      "local.script_dir",
                      "local.dns_command_delete",
                      "local.dns_command_add",
                      "local.vm_list_map",
                      "each.key",
                      "each.value.private_ip_address",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "azurerm_network_interface.nics"
                  ]
                }
              },
              {
                "address": "terraform_data.vm_kv_lock_triggers",
                "mode": "managed",
                "type": "terraform_data",
                "name": "vm_kv_lock_triggers",
                "provider_config_key": "module.spoke_asgwy_qa:terraform",
                "expressions": {
                  "input": {
                    "references": [
                      "azurerm_key_vault.vm_kv",
                      "count.index",
                      "azurerm_private_endpoint.vm_kv_pep",
                      "count.index",
                      "azurerm_monitor_diagnostic_setting.vm_kv_diagnostic_setting",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "data.azurerm_subnet.ext_vm_subnet[0].id",
                    "data.azurerm_subnet.ext_vm_subnet[0]",
                    "data.azurerm_subnet.ext_vm_subnet"
                  ]
                }
              },
              {
                "address": "terraform_data.vm_micro",
                "mode": "managed",
                "type": "terraform_data",
                "name": "vm_micro",
                "provider_config_key": "module.spoke_asgwy_qa:terraform",
                "expressions": {
                  "input": {
                    "references": [
                      "var.micro_type"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.micro_type"
                  ]
                }
              },
              {
                "address": "terraform_data.vm_postbuild_statuses_results",
                "mode": "managed",
                "type": "terraform_data",
                "name": "vm_postbuild_statuses_results",
                "provider_config_key": "module.spoke_asgwy_qa:terraform",
                "provisioners": [
                  {
                    "type": "local-exec",
                    "expressions": {
                      "command": {
                        "constant_value": "echo 'Read results summary'; if [ -d ../../../../vm_postbuild_status ]; then ls ../../../../vm_postbuild_status; for i in $(ls ../../../../vm_postbuild_status); do ls ../../../../vm_postbuild_status/$i; cat ../../../../vm_postbuild_status/$i; done; fi"
                      },
                      "working_dir": {
                        "references": [
                          "local.script_dir"
                        ]
                      }
                    }
                  }
                ],
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "terraform_data.linux_postbuild",
                    "null_resource.winvm_jobs"
                  ]
                },
                "depends_on": [
                  "terraform_data.linux_postbuild",
                  "null_resource.winvm_jobs"
                ]
              },
              {
                "address": "time_sleep.ai_kv_role_propagation",
                "mode": "managed",
                "type": "time_sleep",
                "name": "ai_kv_role_propagation",
                "provider_config_key": "module.spoke_asgwy_qa:time",
                "expressions": {
                  "create_duration": {
                    "constant_value": "30s"
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.ai_locations_needing_keys"
                  ]
                },
                "depends_on": [
                  "azurerm_role_assignment.ai_kv_key_access_aes_role_managed_identity"
                ]
              },
              {
                "address": "time_sleep.base_kv_role_propagation",
                "mode": "managed",
                "type": "time_sleep",
                "name": "base_kv_role_propagation",
                "provider_config_key": "module.spoke_asgwy_qa:time",
                "expressions": {
                  "create_duration": {
                    "constant_value": "30s"
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.is_spoke",
                    "var.is_hub_staging"
                  ]
                },
                "depends_on": [
                  "azurerm_role_assignment.base_kv_key_access_aes_role_managed_identity"
                ]
              },
              {
                "address": "time_sleep.cog_kv_role_propagation",
                "mode": "managed",
                "type": "time_sleep",
                "name": "cog_kv_role_propagation",
                "provider_config_key": "module.spoke_asgwy_qa:time",
                "expressions": {
                  "create_duration": {
                    "constant_value": "30s"
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.locations_needing_keys"
                  ]
                },
                "depends_on": [
                  "azurerm_role_assignment.cog_kv_key_access_aes_role_managed_identity"
                ]
              },
              {
                "address": "time_sleep.openai_dlp_propagation",
                "mode": "managed",
                "type": "time_sleep",
                "name": "openai_dlp_propagation",
                "provider_config_key": "module.spoke_asgwy_qa:time",
                "expressions": {
                  "create_duration": {
                    "constant_value": "2m"
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.cognitive_services"
                  ]
                },
                "depends_on": [
                  "azurerm_cognitive_account.cogs"
                ]
              },
              {
                "address": "time_sleep.sleep_time",
                "mode": "managed",
                "type": "time_sleep",
                "name": "sleep_time",
                "provider_config_key": "module.spoke_asgwy_qa:time",
                "expressions": {
                  "create_duration": {
                    "references": [
                      "var.sleep_time"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.sleep_time"
                  ]
                },
                "depends_on": [
                  "azurerm_virtual_machine_data_disk_attachment.vm_base_disk_association"
                ]
              },
              {
                "address": "tls_private_key.ssh_key",
                "mode": "managed",
                "type": "tls_private_key",
                "name": "ssh_key",
                "provider_config_key": "module.spoke_asgwy_qa:tls",
                "expressions": {
                  "algorithm": {
                    "constant_value": "RSA"
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "local.vm_list"
                  ]
                }
              },
              {
                "address": "data.azurerm_client_config.current",
                "mode": "data",
                "type": "azurerm_client_config",
                "name": "current",
                "provider_config_key": "azurerm",
                "schema_version": 0
              },
              {
                "address": "data.azurerm_eventhub_namespace.ehub_namespace",
                "mode": "data",
                "type": "azurerm_eventhub_namespace",
                "name": "ehub_namespace",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "local.eventhub_ns_prefix",
                      "each.value.namespace_name",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.line_of_business",
                      "var.environment",
                      "local.short_location_name"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.eventhub"
                  ]
                },
                "depends_on": [
                  "azurerm_eventhub_namespace.eventhub_namespace"
                ]
              },
              {
                "address": "data.azurerm_key_vault.cross_region_base_kv",
                "mode": "data",
                "type": "azurerm_key_vault",
                "name": "cross_region_base_kv",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "data.azurerm_resources.cross_region_base_key_vault[0].resources[0].name",
                      "data.azurerm_resources.cross_region_base_key_vault[0].resources[0]",
                      "data.azurerm_resources.cross_region_base_key_vault[0].resources",
                      "data.azurerm_resources.cross_region_base_key_vault[0]",
                      "data.azurerm_resources.cross_region_base_key_vault"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "data.azurerm_resources.cross_region_base_key_vault[0].resources[0].resource_group_name",
                      "data.azurerm_resources.cross_region_base_key_vault[0].resources[0]",
                      "data.azurerm_resources.cross_region_base_key_vault[0].resources",
                      "data.azurerm_resources.cross_region_base_key_vault[0]",
                      "data.azurerm_resources.cross_region_base_key_vault"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "data.azurerm_resources.cross_region_base_key_vault"
                  ]
                }
              },
              {
                "address": "data.azurerm_key_vault.host_base_kv",
                "mode": "data",
                "type": "azurerm_key_vault",
                "name": "host_base_kv",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "data.azurerm_resources.host_base_key_vault[0].resources",
                      "data.azurerm_resources.host_base_key_vault[0]",
                      "data.azurerm_resources.host_base_key_vault"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "data.azurerm_resources.host_base_key_vault[0].resources[0].resource_group_name",
                      "data.azurerm_resources.host_base_key_vault[0].resources[0]",
                      "data.azurerm_resources.host_base_key_vault[0].resources",
                      "data.azurerm_resources.host_base_key_vault[0]",
                      "data.azurerm_resources.host_base_key_vault"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.is_client"
                  ]
                }
              },
              {
                "address": "data.azurerm_key_vault_key.base_kv_key",
                "mode": "data",
                "type": "azurerm_key_vault_key",
                "name": "base_kv_key",
                "provider_config_key": "azurerm",
                "expressions": {
                  "key_vault_id": {
                    "references": [
                      "local.base_kv_id"
                    ]
                  },
                  "name": {
                    "references": [
                      "data.external.find_base_key[0].result.key",
                      "data.external.find_base_key[0].result",
                      "data.external.find_base_key[0]",
                      "data.external.find_base_key"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.full_micro"
                  ]
                }
              },
              {
                "address": "data.azurerm_key_vault_key.cross_region_base_key",
                "mode": "data",
                "type": "azurerm_key_vault_key",
                "name": "cross_region_base_key",
                "provider_config_key": "azurerm",
                "expressions": {
                  "key_vault_id": {
                    "references": [
                      "local.cross_region_base_key_vault_id"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.cross_region_key_name"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.cross_region_base_key_vault_id"
                  ]
                }
              },
              {
                "address": "data.azurerm_key_vault_key.cross_region_cutom_base_key",
                "mode": "data",
                "type": "azurerm_key_vault_key",
                "name": "cross_region_cutom_base_key",
                "provider_config_key": "azurerm",
                "expressions": {
                  "key_vault_id": {
                    "references": [
                      "data.azurerm_resources.cross_region_base_custom_key_vault[0].resources[0].id",
                      "data.azurerm_resources.cross_region_base_custom_key_vault[0].resources[0]",
                      "data.azurerm_resources.cross_region_base_custom_key_vault[0].resources",
                      "data.azurerm_resources.cross_region_base_custom_key_vault[0]",
                      "data.azurerm_resources.cross_region_base_custom_key_vault"
                    ]
                  },
                  "name": {
                    "references": [
                      "local.cross_region_custom_kv_suffix"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.use_custom_cross_region_key_vault"
                  ]
                }
              },
              {
                "address": "data.azurerm_mysql_flexible_server.mysql_primary_servers",
                "mode": "data",
                "type": "azurerm_mysql_flexible_server",
                "name": "mysql_primary_servers",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "each.value.source_server_id",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.source_server_id",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.mysqls_replicas"
                  ]
                }
              },
              {
                "address": "data.azurerm_network_security_group.ext_nsg",
                "mode": "data",
                "type": "azurerm_network_security_group",
                "name": "ext_nsg",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "local.ext_nsg.name",
                      "local.ext_nsg"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.ext_nsg.resource_group",
                      "local.ext_nsg"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.micro_call"
                  ]
                }
              },
              {
                "address": "data.azurerm_network_watcher.network_watcher",
                "mode": "data",
                "type": "azurerm_network_watcher",
                "name": "network_watcher",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "var.location"
                    ]
                  },
                  "resource_group_name": {
                    "constant_value": "NetworkWatcherRG"
                  }
                },
                "schema_version": 0,
                "depends_on": [
                  "azurerm_virtual_network.vnet[0]"
                ]
              },
              {
                "address": "data.azurerm_redis_cache.secondary_cache_info",
                "mode": "data",
                "type": "azurerm_redis_cache",
                "name": "secondary_cache_info",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "each.value.secondary_cache_name",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.secondary_cache_rg",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.redis_caches"
                  ]
                },
                "depends_on": [
                  "azurerm_redis_cache.redis_cache",
                  "azurerm_redis_cache_access_policy_assignment.redis_cache_reader_apa",
                  "azurerm_redis_cache_access_policy_assignment.redis_cache_contributor_apa"
                ]
              },
              {
                "address": "data.azurerm_resource_group.all_context_rgs",
                "mode": "data",
                "type": "azurerm_resource_group",
                "name": "all_context_rgs",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.existing_rgs"
                  ]
                }
              },
              {
                "address": "data.azurerm_resource_group.vm_rg",
                "mode": "data",
                "type": "azurerm_resource_group",
                "name": "vm_rg",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "var.external_vm_settings.vm_rg",
                      "var.external_vm_settings"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.external_vm_settings.vm_rg",
                    "var.external_vm_settings"
                  ]
                }
              },
              {
                "address": "data.azurerm_resources.all_existing_vms",
                "mode": "data",
                "type": "azurerm_resources",
                "name": "all_existing_vms",
                "provider_config_key": "azurerm",
                "expressions": {
                  "resource_group_name": {
                    "references": [
                      "each.value"
                    ]
                  },
                  "type": {
                    "constant_value": "Microsoft.Compute/virtualMachines"
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.existing_rgs"
                  ]
                }
              },
              {
                "address": "data.azurerm_resources.ases",
                "mode": "data",
                "type": "azurerm_resources",
                "name": "ases",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "each.value.ase_name",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.ase_rg",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.app_service_plans"
                  ]
                }
              },
              {
                "address": "data.azurerm_resources.cross_region_base_custom_key_vault",
                "mode": "data",
                "type": "azurerm_resources",
                "name": "cross_region_base_custom_key_vault",
                "provider_config_key": "azurerm",
                "expressions": {
                  "required_tags": {
                    "constant_value": {
                      "custom": "true",
                      "soft-delete": "90"
                    }
                  },
                  "resource_group_name": {
                    "references": [
                      "local.cross_region_base_kv_rg_id"
                    ]
                  },
                  "type": {
                    "constant_value": "Microsoft.KeyVault/vaults"
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.use_custom_cross_region_key_vault"
                  ]
                }
              },
              {
                "address": "data.azurerm_resources.cross_region_base_key_vault",
                "mode": "data",
                "type": "azurerm_resources",
                "name": "cross_region_base_key_vault",
                "provider_config_key": "azurerm",
                "expressions": {
                  "required_tags": {
                    "constant_value": {
                      "base": "true",
                      "custom": null
                    }
                  },
                  "resource_group_name": {
                    "references": [
                      "local.cross_region_base_kv_rg_id"
                    ]
                  },
                  "type": {
                    "constant_value": "Microsoft.KeyVault/vaults"
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.is_client",
                    "local.is_spoke",
                    "local.db_grb_list"
                  ]
                }
              },
              {
                "address": "data.azurerm_resources.cross_region_base_kv_uai",
                "mode": "data",
                "type": "azurerm_resources",
                "name": "cross_region_base_kv_uai",
                "provider_config_key": "azurerm",
                "expressions": {
                  "resource_group_name": {
                    "references": [
                      "local.cross_region_base_kv_rg_id"
                    ]
                  },
                  "type": {
                    "constant_value": "Microsoft.ManagedIdentity/userAssignedIdentities"
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.is_client",
                    "local.is_spoke",
                    "local.db_grb_list"
                  ]
                }
              },
              {
                "address": "data.azurerm_resources.external_pe_resources",
                "mode": "data",
                "type": "azurerm_resources",
                "name": "external_pe_resources",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "each.value.resource_name",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.resource_group_name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.external_pes"
                  ]
                }
              },
              {
                "address": "data.azurerm_resources.external_vnet",
                "mode": "data",
                "type": "azurerm_resources",
                "name": "external_vnet",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "var.peer_external_vnet.name",
                      "var.peer_external_vnet"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.peer_external_vnet.resource_group",
                      "var.peer_external_vnet"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.peer_external_vnet.name",
                    "var.peer_external_vnet",
                    "local.is_client"
                  ]
                }
              },
              {
                "address": "data.azurerm_resources.federated_credential_managed_identities",
                "mode": "data",
                "type": "azurerm_resources",
                "name": "federated_credential_managed_identities",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "each.value.external_managed_identity_name",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.external_managed_identity_resource_group",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.external_mi_federated_credentials"
                  ]
                }
              },
              {
                "address": "data.azurerm_resources.host_base_key_vault",
                "mode": "data",
                "type": "azurerm_resources",
                "name": "host_base_key_vault",
                "provider_config_key": "azurerm",
                "expressions": {
                  "required_tags": {
                    "constant_value": {
                      "host": "true"
                    }
                  },
                  "resource_group_name": {
                    "references": [
                      "local.host_name_prefix",
                      "local.host_rg_suffix"
                    ]
                  },
                  "type": {
                    "constant_value": "Microsoft.KeyVault/vaults"
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.is_client"
                  ]
                }
              },
              {
                "address": "data.azurerm_resources.host_custom_key_vault",
                "mode": "data",
                "type": "azurerm_resources",
                "name": "host_custom_key_vault",
                "provider_config_key": "azurerm",
                "expressions": {
                  "required_tags": {
                    "constant_value": {
                      "custom": "true",
                      "host": "true"
                    }
                  },
                  "resource_group_name": {
                    "references": [
                      "local.host_name_prefix",
                      "local.host_rg_suffix"
                    ]
                  },
                  "type": {
                    "constant_value": "Microsoft.KeyVault/vaults"
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.db_use_custom_key_vault",
                    "local.need_custom_key_vault",
                    "local.is_client"
                  ]
                }
              },
              {
                "address": "data.azurerm_resources.pe_resources",
                "mode": "data",
                "type": "azurerm_resources",
                "name": "pe_resources",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "each.value.resource_name",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.resource_group_name",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.pes"
                  ]
                }
              },
              {
                "address": "data.azurerm_route_table.hub_gateway_route_table",
                "mode": "data",
                "type": "azurerm_route_table",
                "name": "hub_gateway_route_table",
                "provider_config_key": "azurerm.hub",
                "expressions": {
                  "name": {
                    "references": [
                      "local.gateway_route_tables",
                      "local.region_environment"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.hub_vnet_rg_map",
                      "local.region_environment"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.routing_strategy",
                    "local.is_client",
                    "var.is_hub",
                    "local.uses_legacy_hub"
                  ]
                }
              },
              {
                "address": "data.azurerm_shared_image_version.latest_linux_rhel8",
                "mode": "data",
                "type": "azurerm_shared_image_version",
                "name": "latest_linux_rhel8",
                "provider_config_key": "module.spoke_asgwy_qa:azurerm.autoeng",
                "expressions": {
                  "gallery_name": {
                    "constant_value": "SIG_CVS_GEN1"
                  },
                  "image_name": {
                    "constant_value": "rhel8"
                  },
                  "name": {
                    "constant_value": "1.0.2"
                  },
                  "resource_group_name": {
                    "constant_value": "rg-corp-autoeng-dev-usc-vm_automation"
                  }
                },
                "schema_version": 0
              },
              {
                "address": "data.azurerm_shared_image_version.latest_linux_rhel9",
                "mode": "data",
                "type": "azurerm_shared_image_version",
                "name": "latest_linux_rhel9",
                "provider_config_key": "module.spoke_asgwy_qa:azurerm.autoeng",
                "expressions": {
                  "gallery_name": {
                    "constant_value": "SIG_CVS_GEN1"
                  },
                  "image_name": {
                    "constant_value": "rhel9"
                  },
                  "name": {
                    "constant_value": "1.0.4"
                  },
                  "resource_group_name": {
                    "constant_value": "rg-corp-autoeng-dev-usc-vm_automation"
                  }
                },
                "schema_version": 0
              },
              {
                "address": "data.azurerm_shared_image_version.latest_windows",
                "mode": "data",
                "type": "azurerm_shared_image_version",
                "name": "latest_windows",
                "provider_config_key": "module.spoke_asgwy_qa:azurerm.autoeng",
                "expressions": {
                  "gallery_name": {
                    "constant_value": "SIG_CVS_GEN2"
                  },
                  "image_name": {
                    "constant_value": "Windows2022"
                  },
                  "name": {
                    "constant_value": "latest"
                  },
                  "resource_group_name": {
                    "constant_value": "rg-corp-autoeng-dev-usc-vm_automation"
                  }
                },
                "schema_version": 0
              },
              {
                "address": "data.azurerm_shared_image_version.os_image",
                "mode": "data",
                "type": "azurerm_shared_image_version",
                "name": "os_image",
                "provider_config_key": "module.spoke_asgwy_qa:azurerm.autoeng",
                "expressions": {
                  "gallery_name": {
                    "references": [
                      "each.value.image_gallery",
                      "each.value"
                    ]
                  },
                  "image_name": {
                    "references": [
                      "each.value.image_name",
                      "each.value"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.image_version",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "constant_value": "rg-corp-autoeng-dev-usc-vm_automation"
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.vm_list"
                  ]
                }
              },
              {
                "address": "data.azurerm_subnet.ext_vm_subnet",
                "mode": "data",
                "type": "azurerm_subnet",
                "name": "ext_vm_subnet",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "var.external_vm_settings.subnet_name",
                      "var.external_vm_settings"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.external_vm_settings.ntwk_rg",
                      "var.external_vm_settings"
                    ]
                  },
                  "virtual_network_name": {
                    "references": [
                      "data.azurerm_virtual_network.ext_vm_vnet[0].name",
                      "data.azurerm_virtual_network.ext_vm_vnet[0]",
                      "data.azurerm_virtual_network.ext_vm_vnet"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.external_vm_settings.subnet_name",
                    "var.external_vm_settings"
                  ]
                }
              },
              {
                "address": "data.azurerm_subnet.mysql_primary_subnets",
                "mode": "data",
                "type": "azurerm_subnet",
                "name": "mysql_primary_subnets",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value"
                    ]
                  },
                  "virtual_network_name": {
                    "references": [
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "data.azurerm_mysql_flexible_server.mysql_primary_servers"
                  ]
                }
              },
              {
                "address": "data.azurerm_subnet.subnets",
                "mode": "data",
                "type": "azurerm_subnet",
                "name": "subnets",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "each.value.full_subnet_name",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.vnet_rg_name"
                    ]
                  },
                  "virtual_network_name": {
                    "references": [
                      "local.vnet_name"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.parent_context_subnet_objects"
                  ]
                }
              },
              {
                "address": "data.azurerm_subscription.current",
                "mode": "data",
                "type": "azurerm_subscription",
                "name": "current",
                "provider_config_key": "azurerm",
                "schema_version": 0
              },
              {
                "address": "data.azurerm_subscription.hub",
                "mode": "data",
                "type": "azurerm_subscription",
                "name": "hub",
                "provider_config_key": "azurerm.hub",
                "schema_version": 0
              },
              {
                "address": "data.azurerm_user_assigned_identity.base_kv_uai",
                "mode": "data",
                "type": "azurerm_user_assigned_identity",
                "name": "base_kv_uai",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "var.application_id",
                      "var.environment"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.secr_rg_name"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.full_micro"
                  ]
                }
              },
              {
                "address": "data.azurerm_user_assigned_identity.function_uais",
                "mode": "data",
                "type": "azurerm_user_assigned_identity",
                "name": "function_uais",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "each.value.user_identity_name",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.user_identity_resource_group",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.function_apps"
                  ]
                }
              },
              {
                "address": "data.azurerm_user_assigned_identity.web_uais",
                "mode": "data",
                "type": "azurerm_user_assigned_identity",
                "name": "web_uais",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "each.value.user_identity_name",
                      "each.value"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "each.value.user_identity_resource_group",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.web_apps"
                  ]
                }
              },
              {
                "address": "data.azurerm_user_assigned_identity.webapprouting_managed_identity",
                "mode": "data",
                "type": "azurerm_user_assigned_identity",
                "name": "webapprouting_managed_identity",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].name",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "azurerm_kubernetes_cluster.aks_cluster[0].node_resource_group",
                      "azurerm_kubernetes_cluster.aks_cluster[0]",
                      "azurerm_kubernetes_cluster.aks_cluster"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.aks_subnet_name",
                    "var.aks_cluster.web_app_routing_enabled_preview",
                    "var.aks_cluster"
                  ]
                },
                "depends_on": [
                  "azurerm_kubernetes_cluster.aks_cluster"
                ]
              },
              {
                "address": "data.azurerm_virtual_network.ext_vm_vnet",
                "mode": "data",
                "type": "azurerm_virtual_network",
                "name": "ext_vm_vnet",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "var.external_vm_settings.vnet_name",
                      "var.external_vm_settings"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "var.external_vm_settings.ntwk_rg",
                      "var.external_vm_settings"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.external_vm_settings.vnet_name",
                    "var.external_vm_settings"
                  ]
                }
              },
              {
                "address": "data.azurerm_virtual_network.host_vnet",
                "mode": "data",
                "type": "azurerm_virtual_network",
                "name": "host_vnet",
                "provider_config_key": "azurerm",
                "expressions": {
                  "name": {
                    "references": [
                      "local.host_vnet_name"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.host_vnet_rg_name"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.is_client",
                    "local.micro_call",
                    "var.micro_type"
                  ]
                }
              },
              {
                "address": "data.azurerm_virtual_network.hub_vnet",
                "mode": "data",
                "type": "azurerm_virtual_network",
                "name": "hub_vnet",
                "provider_config_key": "azurerm.hub",
                "expressions": {
                  "name": {
                    "references": [
                      "local.hub_vnet_name"
                    ]
                  },
                  "resource_group_name": {
                    "references": [
                      "local.hub_vnet_rg"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.is_peered",
                    "local.is_client"
                  ]
                }
              },
              {
                "address": "data.external.azlogin",
                "mode": "data",
                "type": "external",
                "name": "azlogin",
                "provider_config_key": "module.spoke_asgwy_qa:external",
                "expressions": {
                  "program": {
                    "constant_value": [
                      "bash",
                      "./azlogin_oidc.sh"
                    ]
                  },
                  "working_dir": {
                    "references": [
                      "local.script_dir"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.template_vm_list",
                    "local.full_micro"
                  ]
                }
              },
              {
                "address": "data.external.existing_rgs",
                "mode": "data",
                "type": "external",
                "name": "existing_rgs",
                "provider_config_key": "module.spoke_asgwy_qa:external",
                "expressions": {
                  "program": {
                    "constant_value": [
                      "bash",
                      "./all_resource_groups.sh"
                    ]
                  },
                  "query": {
                    "references": [
                      "local.name_prefix",
                      "path.cwd",
                      "data.azurerm_subscription.current.id",
                      "data.azurerm_subscription.current"
                    ]
                  },
                  "working_dir": {
                    "references": [
                      "local.script_dir"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.all_vm_requests"
                  ]
                },
                "depends_on": [
                  "data.external.vm_azlogin"
                ]
              },
              {
                "address": "data.external.find_base_key",
                "mode": "data",
                "type": "external",
                "name": "find_base_key",
                "provider_config_key": "module.spoke_asgwy_qa:external",
                "expressions": {
                  "program": {
                    "constant_value": [
                      "bash",
                      "./list_keys.sh"
                    ]
                  },
                  "query": {
                    "references": [
                      "local.base_kv.name",
                      "local.base_kv",
                      "var.application_id",
                      "var.location",
                      "var.environment"
                    ]
                  },
                  "working_dir": {
                    "references": [
                      "local.script_dir"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.full_micro"
                  ]
                },
                "depends_on": [
                  "data.external.azlogin"
                ]
              },
              {
                "address": "data.external.lookup_origin_pr_env_var",
                "mode": "data",
                "type": "external",
                "name": "lookup_origin_pr_env_var",
                "provider_config_key": "module.spoke_asgwy_qa:external",
                "expressions": {
                  "program": {
                    "references": [
                      "path.module"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "data.external.vm_azlogin",
                "mode": "data",
                "type": "external",
                "name": "vm_azlogin",
                "provider_config_key": "module.spoke_asgwy_qa:external",
                "expressions": {
                  "program": {
                    "constant_value": [
                      "bash",
                      "./azlogin_oidc.sh"
                    ]
                  },
                  "working_dir": {
                    "references": [
                      "local.script_dir"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.all_vm_requests"
                  ]
                }
              },
              {
                "address": "data.external.vm_name_generation",
                "mode": "data",
                "type": "external",
                "name": "vm_name_generation",
                "provider_config_key": "module.spoke_asgwy_qa:external",
                "expressions": {
                  "program": {
                    "constant_value": [
                      "bash",
                      "./vm_name_generation.sh"
                    ]
                  },
                  "query": {
                    "references": [
                      "each.value.os_type",
                      "each.value",
                      "each.value.name",
                      "each.value",
                      "each.value.name",
                      "each.value",
                      "var.line_of_business",
                      "var.application_id",
                      "var.environment",
                      "local.short_location_name",
                      "each.value.ud_resource_group",
                      "each.value",
                      "data.azurerm_subscription.current.subscription_id",
                      "data.azurerm_subscription.current",
                      "path.cwd",
                      "path.cwd"
                    ]
                  },
                  "working_dir": {
                    "references": [
                      "local.script_dir"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.template_vm_list",
                    "local.vm_needs_name_generation"
                  ]
                },
                "depends_on": [
                  "data.external.vm_azlogin",
                  "data.external.existing_rgs"
                ]
              },
              {
                "address": "data.infoblox_ipv4_network_container.container",
                "mode": "data",
                "type": "infoblox_ipv4_network_container",
                "name": "container",
                "provider_config_key": "module.spoke_asgwy_qa:infoblox",
                "expressions": {
                  "cidr": {
                    "references": [
                      "local.net_containers",
                      "local.net_container_bucket",
                      "var.container_index"
                    ]
                  },
                  "network_view": {
                    "references": [
                      "local.network_view"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.no_vnet_cidr",
                    "local.addon_subnets"
                  ]
                }
              },
              {
                "address": "data.infoblox_ipv4_network_container.host_vnet_container",
                "mode": "data",
                "type": "infoblox_ipv4_network_container",
                "name": "host_vnet_container",
                "provider_config_key": "module.spoke_asgwy_qa:infoblox",
                "expressions": {
                  "cidr": {
                    "references": [
                      "each.value.cidr",
                      "each.value"
                    ]
                  },
                  "network_view": {
                    "references": [
                      "local.network_view"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.host_address_spaces",
                    "local.host_address_spaces"
                  ]
                }
              },
              {
                "address": "data.infoblox_ipv4_network_container.supernet_requests",
                "mode": "data",
                "type": "infoblox_ipv4_network_container",
                "name": "supernet_requests",
                "provider_config_key": "module.spoke_asgwy_qa:infoblox",
                "expressions": {
                  "cidr": {
                    "references": [
                      "each.value.cidr",
                      "each.value"
                    ]
                  },
                  "network_view": {
                    "references": [
                      "local.network_view"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "local.supernet_requests"
                  ]
                }
              },
              {
                "address": "data.terraform_remote_state.spoke",
                "mode": "data",
                "type": "terraform_remote_state",
                "name": "spoke",
                "provider_config_key": "module.spoke_asgwy_qa:terraform",
                "expressions": {
                  "backend": {
                    "constant_value": "azurerm"
                  },
                  "config": {
                    "references": [
                      "data.azurerm_subscription.current.display_name",
                      "data.azurerm_subscription.current",
                      "local.app_id",
                      "local.env",
                      "local.loc"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.micro_call",
                    "var.micro_type",
                    "var.micro_type"
                  ]
                }
              }
            ],
            "module_calls": {
              "subnet_addrs": {
                "source": "hashicorp/subnets/cidr",
                "expressions": {
                  "base_cidr_block": {
                    "references": [
                      "each.value.vnet_cidr",
                      "each.value"
                    ]
                  },
                  "networks": {
                    "references": [
                      "each.value.cidr_module_networks",
                      "each.value"
                    ]
                  }
                },
                "for_each_expression": {
                  "references": [
                    "local.subnet_list_per_vnet"
                  ]
                },
                "module": {
                  "outputs": {
                    "base_cidr_block": {
                      "expression": {
                        "references": [
                          "var.base_cidr_block"
                        ]
                      },
                      "description": "Echoes back the base_cidr_block input variable value, for convenience if passing the result of this module elsewhere as an object."
                    },
                    "network_cidr_blocks": {
                      "expression": {
                        "references": [
                          "local.addrs_by_name"
                        ]
                      },
                      "description": "A map from network names to allocated address prefixes in CIDR notation."
                    },
                    "networks": {
                      "expression": {
                        "references": [
                          "local.network_objs"
                        ]
                      },
                      "description": "A list of objects corresponding to each of the objects in the input variable 'networks', each extended with a new attribute 'cidr_block' giving the network's allocated address prefix."
                    }
                  },
                  "variables": {
                    "base_cidr_block": {
                      "description": "A network address prefix in CIDR notation that all of the requested subnetwork prefixes will be allocated within."
                    },
                    "networks": {
                      "description": "A list of objects describing requested subnetwork prefixes. new_bits is the number of additional network prefix bits to add, in addition to the existing prefix on base_cidr_block."
                    }
                  }
                }
              }
            },
            "variables": {
              "additional_dns_servers": {
                "default": []
              },
              "ai_models": {
                "default": [],
                "description": "list of additional AI model definitions"
              },
              "ai_services": {
                "default": [],
                "description": "A list of Azure AI Services account definitions"
              },
              "aks_cluster": {
                "default": {
                  "acr_integration_id": "",
                  "auto_loadBalancerIp": false,
                  "auto_upgrade": false,
                  "auto_upgrade_settings": {},
                  "cluster_admin_group_object_ids": [],
                  "cluster_reader_group_object_ids": [],
                  "cluster_writer_group_object_ids": [],
                  "cost_analysis_enabled": null,
                  "decentralized_argo": false,
                  "exposed_fqdns": [],
                  "external_log_analytics_workspace_resource_id": null,
                  "external_subnet_id": null,
                  "external_subnet_route_table_id": null,
                  "external_vnet_id": null,
                  "index": null,
                  "key_vault_admin_group_object_ids": [],
                  "key_vault_secrets_provider": true,
                  "key_vault_secrets_provider_secret_rotation_enabled": true,
                  "key_vault_secrets_provider_secret_rotation_interval": "2m",
                  "kubernetes_version": null,
                  "legacy_argo": false,
                  "loadBalancerIp": "",
                  "local_account_disabled": true,
                  "msi_auth_for_monitoring_enabled": false,
                  "namespaces": [],
                  "network_plugin": "kubenet",
                  "open_service_mesh_enabled": false,
                  "privileged_service_principal_object_id": "",
                  "random_suffix": false,
                  "service_mesh": "istio",
                  "sku_tier": "Standard",
                  "subnet_name": null,
                  "support_plan": null,
                  "web_app_routing_enabled_preview": false,
                  "workload_identity_enabled": false
                },
                "description": "aks cluster parameters"
              },
              "aks_default_node_pool": {
                "default": {
                  "drain_timeout_in_minutes": null,
                  "enable_auto_scaling": false,
                  "enable_host_encryption": true,
                  "max_count": null,
                  "max_pods": 30,
                  "max_surge": "10%",
                  "min_count": null,
                  "name": "default",
                  "node_count": 3,
                  "node_soak_duration_in_minutes": 0,
                  "node_taints": null,
                  "only_critical_addons_enabled": null,
                  "orchestrator_version": null,
                  "vm_size": "Standard_D8s_v3",
                  "zones": [
                    "1",
                    "2",
                    "3"
                  ]
                },
                "description": "aks default node pool parameters"
              },
              "aks_extra_node_pools": {
                "default": [],
                "description": "list of aks extra node pool parameters"
              },
              "aks_federated_credentials": {
                "default": [],
                "description": "user defined aks federated credentials"
              },
              "allow_bgp": {
                "default": false,
                "description": "Allows the use/default behavior of disable_bgp_route_propagation = false on subnets even when using SecureHub2-style hubs."
              },
              "any_nsg_rule_priority": {
                "default": false,
                "description": "boolean to allow nsg_rules.csv rules to use priorities above 3000. Defaults to false, available for backwards compatibility. Setting to true prevents auto-approval."
              },
              "api_management": {
                "default": [],
                "description": "a list of azure apim management definitions"
              },
              "app_configurations": {
                "default": []
              },
              "app_insights": {
                "default": [],
                "description": "a list of user-defined app insights objects"
              },
              "app_service_plans": {
                "default": [],
                "description": "a list of azure app services definitions"
              },
              "application_id": {
                "description": "Application ID"
              },
              "ase_internal_encryption": {
                "default": false,
                "description": "Enable internal encryption on ASE or not"
              },
              "ase_settings": {
                "default": {
                  "allow_new_private_endpoint_connections": false,
                  "internal_encryption": false
                },
                "description": "ASE settings"
              },
              "base_linux_vm": {
                "default": [],
                "description": "base config vms"
              },
              "budgets": {
                "default": [],
                "description": "List of budgets to apply to resource groups."
              },
              "build_base_resources": {
                "default": false,
                "description": "Builds base resources (key vault, key, des, managed_pe subnet). Only considered during shared_vnet non-host(client) builds. Defaults to false - hosts and classic spokes will build these resources."
              },
              "build_custom_key_vault": {
                "default": false,
                "description": "boolean flag to create custom key vault(90 soft delete days key vault)"
              },
              "build_nsg_rules": {
                "default": true,
                "description": "Controls whether or not nsg rules are built in a micro context."
              },
              "cdb_nosql": {
                "default": []
              },
              "cdb_nosql_containers": {
                "default": []
              },
              "cognitive_services": {
                "default": [],
                "description": "a list of azure cognitive service account definitions"
              },
              "container_index": {
                "default": 0,
                "description": "points to the desired index in the respective list of cidrs inside net_container map"
              },
              "container_registry": {
                "default": [],
                "description": "a list of azure container registry definitions"
              },
              "cross_region_host_index": {
                "default": 0,
                "description": "Determines the index of the cross region host vnet. Hosts will add this to their vnet name; clients will reference said vnet."
              },
              "data_factory": {
                "default": {
                  "external_subnet_id": null,
                  "legacy_adf": null,
                  "subnet_name": null,
                  "ud_resource_group": null
                },
                "description": "Toggle creating a data factory and related resources."
              },
              "databricks": {
                "default": [],
                "description": "a list of user-defined databricks objects"
              },
              "deploy_diag_storage": {
                "default": false,
                "description": "boolean flag to signal that a customer managed boot diagnostics storage account should be built. Defaults to false"
              },
              "diag_st_private_endpoints_subresource_types": {
                "default": [
                  "blob",
                  "web"
                ]
              },
              "diag_storage_account_id": {
                "default": null,
                "description": "The ID of the Storage Account where logs should be sent."
              },
              "disable_watcher": {
                "default": false,
                "description": "Disables network watcher flow logs for peering when no NetworkWatcher exists. Only use for testing."
              },
              "dr_tier": {
                "default": null,
                "description": "DR tier for production environments"
              },
              "enable_subscription_diagnostics": {
                "default": false,
                "description": "Boolean flag to enable azure monitor diagnostics on the subscription to be collected. Defaults to false."
              },
              "environment": {
                "description": "one of the following environments: [ dev | qa | uat | pt | prod | nonprod | preprod | dr | poc | sit ]"
              },
              "eventhub": {
                "default": []
              },
              "eventhub_namespace": {
                "default": []
              },
              "external_federated_credentials": {
                "default": [],
                "description": "user defined external OIDC federated credentials"
              },
              "external_nsg": {
                "default": {
                  "name": null,
                  "resource_group": null
                },
                "description": "When creating NSG rules, use the provided external NSG name and resource group instead of creating a new one. Only applies to micro contexts, defaults to inherit the parent context's NSG."
              },
              "external_private_endpoints": {
                "default": [],
                "description": "private endpoints for networks not managed by this terraform module"
              },
              "external_vm_settings": {
                "default": {
                  "ntwk_rg": null,
                  "subnet_name": null,
                  "vm_rg": null,
                  "vnet_name": null
                }
              },
              "flowlog_retention_days": {
                "default": 0,
                "description": "Days to set network watcher flow log retention to. Default is zero (forever)."
              },
              "forward_law_to_eh": {
                "default": true,
                "description": "This will send the diagnostics of the log analytics workspace to event hub for splunk."
              },
              "function_apps": {
                "default": []
              },
              "gha_federated_credentials": {
                "default": [],
                "description": "user defined github actions federated credentials"
              },
              "go_live_date": {
                "default": null,
                "description": "Date production environment went or will go live"
              },
              "guardium_enabled": {
                "default": false,
                "description": "Flag to determine if this app/configuration will have a database that needs to be configured for Guardium DAM. If the database will store or transmit PCI, PHI, PII data."
              },
              "host_cidr_index": {
                "default": 0,
                "description": "Sets the vnet_cidr_index of all subnets, unless otherwise set by the subnet."
              },
              "host_index": {
                "default": 0,
                "description": "Determines the index of the host vnet. Hosts will add this to their vnet name; clients will reference said vnet."
              },
              "host_prefix": {
                "default": null,
                "description": "Overrides the default `subscription-id-env-region` host name prefix."
              },
              "ignore_tag_changes": {
                "default": false,
                "description": "if true, ignore tag changes after resource creation. Defaults to false."
              },
              "inherit": {
                "default": true,
                "description": "Flag to determine if the module should inherit the application_id, environment, and location from the module path."
              },
              "internal_use": {
                "default": {
                  "ipam_version": 1,
                  "network_strategy": "classic"
                },
                "description": "Internal Use settings for configuring ExpressCloud-Azure. Should not be modified by users."
              },
              "is_former_kv_naming_convention": {
                "default": false,
                "description": "boolean flag to signal whether this module call makes use of older key vault naming convention - to ensure backwards compatibility"
              },
              "is_former_log_analytics_workspace_naming_convention": {
                "default": false,
                "description": "boolean flag to signal whether this module call had created a log analytics workspace before they were fully treated as global and can only be built once per subscription"
              },
              "is_former_st_naming_convention": {
                "default": false,
                "description": "boolean flag to signal whether this module call makes use of older storage account naming convention - to ensure backwards compatibility"
              },
              "is_host": {
                "default": false,
                "description": "Flag to determine if this a vnet-only host spoke. Client spokes will use this network for their subnets."
              },
              "is_hub": {
                "default": false,
                "description": "Disables pe subnet requirement, but preserve other is_spoke functionality. Defaults to false. Hub use only"
              },
              "is_hub_staging": {
                "default": false,
                "description": "Prevents base keyvault and eventhub related resources from being built. Defaults to false. Hub use only"
              },
              "is_peered": {
                "default": true,
                "description": "boolean flag to peer spoke. Defaults to true"
              },
              "is_spoke": {
                "default": true,
                "description": "boolean flag to signal that this is a standard spoke build. If false, all resources are optional, and only what is explicitly defined by the user during module call is built. Defaults to true"
              },
              "key_vaults": {
                "default": [],
                "description": "user defined key vaults"
              },
              "kv_admin": {
                "default": []
              },
              "kv_locks": {
                "default": true,
                "description": "Toggles keyvault management locks. Defaults to true, security will auto-remediate keyvaults that do not have a lock."
              },
              "kv_reader": {
                "default": []
              },
              "kv_user": {
                "default": []
              },
              "legacy_dr": {
                "default": false,
                "description": "flags whether this dr env had subnets built using infoblox and prior to network address changes after v0.34.3"
              },
              "legacy_standard_kv": {
                "default": false,
                "description": "Flag for legacy builds to prevent recreation of keyvaults with non 'Premium' skus. Defaults to false."
              },
              "line_of_business": {
                "description": "Line of Business -> [pss,pcw,hcb,hcd,corp]"
              },
              "load_balancers": {
                "default": [],
                "description": "a list of load balancer configurations"
              },
              "location": {
                "default": null,
                "description": "one of the following regions: [ eastus2 | centralus | westus3 | eastus ]"
              },
              "log_analytics_workspace": {
                "default": "standard",
                "description": "Log Analytics Workspaces - choose either \"standard\" or \"custom\". In case of custom also pass a log_analytics_workspace_specs variable."
              },
              "log_analytics_workspace_id": {
                "default": null,
                "description": "Specifies the ID of a Log Analytics Workspace where Diagnostics Data should be sent."
              },
              "log_analytics_workspace_specs": {
                "default": {
                  "retention_in_days": "30",
                  "sku": "PerGB2018",
                  "ud_resource_group": "none"
                },
                "description": "Log Analytics Workspaces"
              },
              "logic_apps": {
                "default": []
              },
              "managed_disks": {
                "default": [],
                "description": "list of user managed disks configurations"
              },
              "micro_suffix": {
                "default": "",
                "description": "Suffix to apply to resource names. Only used in a micro."
              },
              "micro_type": {
                "default": null,
                "description": "Toggles micro call to use outputs from the core context for shared locals and sets restrictions on resources built."
              },
              "monitor_action_groups": {
                "default": []
              },
              "mysqls": {
                "default": []
              },
              "mysqls_databases": {
                "default": []
              },
              "mysqls_replicas": {
                "default": []
              },
              "offset": {
                "default": 0,
                "description": "An Extension's offset to allow for NSG rules to not collide with other extensions/the spoke"
              },
              "optional_tags": {
                "default": {},
                "description": "optional customer defined tags"
              },
              "organization": {
                "default": "cvs-health-enterprise-code",
                "description": "GitHub organization, defaults to cvs-health-enterprise-code"
              },
              "partner_solution_id": {
                "default": null,
                "description": "The ID of the market partner solution where Diagnostics Data should be sent."
              },
              "peer_external_vnet": {
                "default": {
                  "name": null,
                  "resource_group": null
                },
                "description": "externally managed vnet in the same subscription to peer with"
              },
              "psqls": {
                "default": []
              },
              "psqls_databases": {
                "default": []
              },
              "public_keyvaults": {
                "default": false,
                "description": "Enables public network access on keyvaults. Defaults to false to meet security requirements for new builds."
              },
              "random_kv_names": {
                "default": false,
                "description": "Keyvault names are randomized at creation. If false, uses the location code naming convention for backwards compatibility."
              },
              "random_nsg_suffix": {
                "default": false,
                "description": "Flag to determine if the NSG suffix is random, defaults to false to use the directory name."
              },
              "reader_groups": {
                "default": [],
                "description": "List of AD Group Object IDs that will be granted Reader access to all Resource Groups"
              },
              "recovery_services_vaults": {
                "default": [],
                "description": "a list of azure recovery services vault definitions"
              },
              "redis_caches": {
                "default": []
              },
              "remote_database_subnets": {
                "default": []
              },
              "required_tags": {
                "default": {
                  "applicationname": null,
                  "businessunit": null,
                  "costcenter": null,
                  "cvsappid": null,
                  "dataclassification": null,
                  "environmentsubtype": null,
                  "environmenttype": null,
                  "itpmid": null,
                  "itpr": null,
                  "migration": null,
                  "reportingsegment": null,
                  "resourceowner": null,
                  "responsible_svp": null,
                  "sharedemailaddress": null
                },
                "description": "tags required by Hybrid Cloud FinOps - KB0043733"
              },
              "resource_group_tag_sets": {
                "default": {}
              },
              "resource_groups": {
                "default": []
              },
              "routing_environment": {
                "default": "nonprod",
                "description": "Determines the hub that a spoke vnet will peer to. Defaults to prod to preserve current non-prod connectivity to existing hubs."
              },
              "search_services": {
                "default": [],
                "description": "a list of user-defined Cognitive Search Services"
              },
              "service_bus_entities": {
                "default": [],
                "description": "list of types of service bus entities and their respective configurations"
              },
              "service_bus_namespace": {
                "default": [],
                "description": "list of service bus configurations"
              },
              "service_bus_subscription_rules": {
                "default": [],
                "description": "list of subscription rules to attatch to a subscription"
              },
              "service_bus_subscriptions": {
                "default": [],
                "description": "list of subscriptions config to attach to topics"
              },
              "skip_vm_postbuild": {
                "default": false,
                "description": "Setting to true will skip Cloudbees calls for post-build. Useful for testing baremetal."
              },
              "sleep_time": {
                "default": "0",
                "description": "How much time in minutes to sleep after calling vm post-build jobs. Useful for locking state to prevent additional applies while testing."
              },
              "snow_dns_env": {
                "default": "prod",
                "description": "Sets the ServiceNow environment to make DNS requests to. Defaults to Dev."
              },
              "storage_accounts": {
                "default": [],
                "description": "a list of user-defined storage account objects"
              },
              "subnets": {
                "default": [],
                "description": "list of subnets. subnet egress_type: cisco_firewall | azure_firewall | aks | pci | none --> default = azure_firewall"
              },
              "subscription_diagnostic_objects": {
                "default": {
                  "log": [
                    [
                      "Administrative"
                    ],
                    [
                      "Security"
                    ],
                    [
                      "ServiceHealth"
                    ],
                    [
                      "Alert"
                    ],
                    [
                      "Recommendation"
                    ],
                    [
                      "Policy"
                    ],
                    [
                      "Autoscale"
                    ],
                    [
                      "ResourceHealth"
                    ]
                  ],
                  "metric": []
                },
                "description": "Diagnostic Objects = { log = [#[\"Category Name\", \"Retention Enabled (true/false)\", \"Retention Period\"]] metric = [#[\"Category Name\", \"Diagnostic Enabled(true/false)\", \"Retention Enabled (true/false)\", \"Retention Period\"]]"
              },
              "tag_sets": {
                "default": {},
                "description": "tag overrides that can be applied to resources"
              },
              "ud_managed_identities": {
                "default": [],
                "description": "user defined managed identities"
              },
              "use_global_law_fl": {
                "default": false,
                "description": "boolean flag to signal whether to use log-securehub-global-ntwk-flowlogs in the hub, when use_ud_law_fl is false. Defaults to false."
              },
              "use_spoke_rgs": {
                "default": true,
                "description": "Flag to determine if the main context's resource groups are used."
              },
              "use_ud_law_fl": {
                "default": true,
                "description": "boolean flag to signal whether to use the log_analytics_workspace for NSG Flow Logs. Defaults to true"
              },
              "virtual_machines": {
                "default": []
              },
              "vm_cloudbees_env": {
                "default": "dev",
                "description": "Cloudbees environment to call for postbuild."
              },
              "vnet_cidr": {
                "default": []
              },
              "vnet_cidr_suffixes": {
                "default": [],
                "description": "determines size of vnet container from infoblox rather than calculate from subnets."
              },
              "web_apps": {
                "default": []
              }
            }
          }
        }
      }
    }
  },
  "relevant_attributes": [
    {
      "resource": "module.spoke_asgwy_qa.azurerm_log_analytics_workspace.log_analytics_workspace",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_resource_group.adf_rg",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_network_security_group.network_security_group[0]",
      "attribute": [
        "security_rule"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_subnet.subnets",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_resource_group.cog_rg",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_subscription.current",
      "attribute": [
        "display_name"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_resource_group.acr_rg",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_key_vault_key.base_kv_key[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.supernet_requests",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_subscription.hub",
      "attribute": [
        "subscription_id"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_resource_group.ehub_rg",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_resource_group.secr_rg[0]",
      "attribute": [
        "location"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_resource_group.sb_rg",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_key_vault.base_kv[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet[0]",
      "attribute": [
        "subnets"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.infoblox_ipv4_network_container.vnet_container",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_virtual_network.ext_vm_vnet[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet[0]",
      "attribute": [
        "address_space"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_network_security_group.network_security_group[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_log_analytics_workspace.log_analytics_workspace[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_virtual_network.vnet[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_key_vault.host_base_kv[0]",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_resources.host_base_key_vault[0]",
      "attribute": [
        "resources"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_resource_group.secr_rg",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_resource_group.aks_rg",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_resource_group.backup_rg",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_resource_group.diag_rg",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_resource_group.mi_rg",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_key_vault_key.base_kv_key[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.random_string.kvname",
      "attribute": [
        "result"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_linux_rhel8",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_shared_image_version.latest_windows",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_mysql_flexible_server.mysql_primary_servers",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_resource_group.app_services_rg",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.terraform_data.existing_rgs",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_resource_group.srch_rg",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.terraform_data.existing_rgs[0]",
      "attribute": [
        "input",
        "existing_rgs"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_key_vault.base_kv[0]",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_subscription.current",
      "attribute": [
        "subscription_id"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_network_security_group.ext_nsg[0]",
      "attribute": [
        "security_rule"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_resource_group.secr_rg[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_client_config.current",
      "attribute": [
        "tenant_id"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_subnet.mysql_primary_subnets",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_resource_group.network_rg[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_network_interface.nics",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_subnet.subnets",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_resource_group.network_rg",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_key_vault.host_base_kv[0]",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.data.terraform_remote_state.spoke[0]",
      "attribute": [
        "outputs",
        "spoke"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_resources.host_base_key_vault[0]",
      "attribute": [
        "resources",
        0,
        "resource_group_name"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_resource_group.ud_rgs",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_resource_group.db_rgs",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_virtual_network.vnet",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.data.external.vm_name_generation",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_resource_group.all_context_rgs",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.container[0]",
      "attribute": [
        "cidr"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.data.infoblox_ipv4_network_container.host_vnet_container",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_resources.all_existing_vms",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.azurerm_user_assigned_identity.base_kv_uai",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_subnet.ext_vm_subnet[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.spoke_asgwy_qa.infoblox_ipv4_network.vnet_cidr_list",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_subnet.ext_vm_subnet",
      "attribute": []
    },
    {
      "resource": "module.spoke_asgwy_qa.data.azurerm_virtual_network.host_vnet[0]",
      "attribute": [
        "id"
      ]
    }
  ],
  "checks": [
    {
      "address": {
        "kind": "resource",
        "mode": "managed",
        "module": "module.spoke_asgwy_qa",
        "name": "cogs",
        "to_display": "module.spoke_asgwy_qa.azurerm_cognitive_account.cogs",
        "type": "azurerm_cognitive_account"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "resource",
        "mode": "managed",
        "module": "module.spoke_asgwy_qa",
        "name": "cosmosdb_nosql_account",
        "to_display": "module.spoke_asgwy_qa.azurerm_cosmosdb_account.cosmosdb_nosql_account",
        "type": "azurerm_cosmosdb_account"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "resource",
        "mode": "managed",
        "module": "module.spoke_asgwy_qa",
        "name": "aks_cluster",
        "to_display": "module.spoke_asgwy_qa.azurerm_kubernetes_cluster.aks_cluster",
        "type": "azurerm_kubernetes_cluster"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "resource",
        "mode": "managed",
        "module": "module.spoke_asgwy_qa",
        "name": "vms",
        "to_display": "module.spoke_asgwy_qa.azurerm_linux_virtual_machine.vms",
        "type": "azurerm_linux_virtual_machine"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "resource",
        "mode": "managed",
        "module": "module.spoke_asgwy_qa",
        "name": "mysql",
        "to_display": "module.spoke_asgwy_qa.azurerm_mysql_flexible_server.mysql",
        "type": "azurerm_mysql_flexible_server"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "resource",
        "mode": "managed",
        "module": "module.spoke_asgwy_qa",
        "name": "base_custom_kv_pes",
        "to_display": "module.spoke_asgwy_qa.azurerm_private_endpoint.base_custom_kv_pes",
        "type": "azurerm_private_endpoint"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "resource",
        "mode": "managed",
        "module": "module.spoke_asgwy_qa",
        "name": "base_kv_pep",
        "to_display": "module.spoke_asgwy_qa.azurerm_private_endpoint.base_kv_pep",
        "type": "azurerm_private_endpoint"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "resource",
        "mode": "managed",
        "module": "module.spoke_asgwy_qa",
        "name": "hub_to_spoke",
        "to_display": "module.spoke_asgwy_qa.azurerm_virtual_network_peering.hub_to_spoke",
        "type": "azurerm_virtual_network_peering"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "resource",
        "mode": "managed",
        "module": "module.spoke_asgwy_qa",
        "name": "vms",
        "to_display": "module.spoke_asgwy_qa.azurerm_windows_virtual_machine.vms",
        "type": "azurerm_windows_virtual_machine"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "resource",
        "mode": "managed",
        "module": "module.spoke_asgwy_qa",
        "name": "subnet_cidr_list",
        "to_display": "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list",
        "type": "infoblox_ipv4_network"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "instance_key": "db",
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list[\"db\"]"
          },
          "status": "pass"
        },
        {
          "address": {
            "instance_key": "pe",
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list[\"pe\"]"
          },
          "status": "pass"
        },
        {
          "address": {
            "instance_key": "psqldb",
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.infoblox_ipv4_network.subnet_cidr_list[\"psqldb\"]"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "resource",
        "mode": "managed",
        "module": "module.spoke_asgwy_qa",
        "name": "nsg_micro",
        "to_display": "module.spoke_asgwy_qa.terraform_data.nsg_micro",
        "type": "terraform_data"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "resource",
        "mode": "managed",
        "module": "module.spoke_asgwy_qa",
        "name": "vm_micro",
        "to_display": "module.spoke_asgwy_qa.terraform_data.vm_micro",
        "type": "terraform_data"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "ai_models",
        "to_display": "module.spoke_asgwy_qa.var.ai_models"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.ai_models"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "ai_services",
        "to_display": "module.spoke_asgwy_qa.var.ai_services"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.ai_services"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "aks_cluster",
        "to_display": "module.spoke_asgwy_qa.var.aks_cluster"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.aks_cluster"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "aks_federated_credentials",
        "to_display": "module.spoke_asgwy_qa.var.aks_federated_credentials"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.aks_federated_credentials"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "api_management",
        "to_display": "module.spoke_asgwy_qa.var.api_management"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.api_management"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "app_insights",
        "to_display": "module.spoke_asgwy_qa.var.app_insights"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.app_insights"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "app_service_plans",
        "to_display": "module.spoke_asgwy_qa.var.app_service_plans"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.app_service_plans"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "application_id",
        "to_display": "module.spoke_asgwy_qa.var.application_id"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.application_id"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "budgets",
        "to_display": "module.spoke_asgwy_qa.var.budgets"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.budgets"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "cdb_nosql_containers",
        "to_display": "module.spoke_asgwy_qa.var.cdb_nosql_containers"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.cdb_nosql_containers"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "cognitive_services",
        "to_display": "module.spoke_asgwy_qa.var.cognitive_services"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.cognitive_services"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "container_registry",
        "to_display": "module.spoke_asgwy_qa.var.container_registry"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.container_registry"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "data_factory",
        "to_display": "module.spoke_asgwy_qa.var.data_factory"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.data_factory"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "databricks",
        "to_display": "module.spoke_asgwy_qa.var.databricks"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.databricks"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "dr_tier",
        "to_display": "module.spoke_asgwy_qa.var.dr_tier"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.dr_tier"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "environment",
        "to_display": "module.spoke_asgwy_qa.var.environment"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.environment"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "eventhub_namespace",
        "to_display": "module.spoke_asgwy_qa.var.eventhub_namespace"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.eventhub_namespace"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "external_nsg",
        "to_display": "module.spoke_asgwy_qa.var.external_nsg"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.external_nsg"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "function_apps",
        "to_display": "module.spoke_asgwy_qa.var.function_apps"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.function_apps"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "gha_federated_credentials",
        "to_display": "module.spoke_asgwy_qa.var.gha_federated_credentials"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.gha_federated_credentials"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "go_live_date",
        "to_display": "module.spoke_asgwy_qa.var.go_live_date"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.go_live_date"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "key_vaults",
        "to_display": "module.spoke_asgwy_qa.var.key_vaults"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.key_vaults"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "line_of_business",
        "to_display": "module.spoke_asgwy_qa.var.line_of_business"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.line_of_business"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "load_balancers",
        "to_display": "module.spoke_asgwy_qa.var.load_balancers"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.load_balancers"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "location",
        "to_display": "module.spoke_asgwy_qa.var.location"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.location"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "log_analytics_workspace",
        "to_display": "module.spoke_asgwy_qa.var.log_analytics_workspace"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.log_analytics_workspace"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "logic_apps",
        "to_display": "module.spoke_asgwy_qa.var.logic_apps"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.logic_apps"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "micro_type",
        "to_display": "module.spoke_asgwy_qa.var.micro_type"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.micro_type"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "mysqls",
        "to_display": "module.spoke_asgwy_qa.var.mysqls"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.mysqls"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "mysqls_databases",
        "to_display": "module.spoke_asgwy_qa.var.mysqls_databases"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.mysqls_databases"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "psqls",
        "to_display": "module.spoke_asgwy_qa.var.psqls"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.psqls"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "psqls_databases",
        "to_display": "module.spoke_asgwy_qa.var.psqls_databases"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.psqls_databases"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "recovery_services_vaults",
        "to_display": "module.spoke_asgwy_qa.var.recovery_services_vaults"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.recovery_services_vaults"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "redis_caches",
        "to_display": "module.spoke_asgwy_qa.var.redis_caches"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.redis_caches"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "remote_database_subnets",
        "to_display": "module.spoke_asgwy_qa.var.remote_database_subnets"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.remote_database_subnets"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "required_tags",
        "to_display": "module.spoke_asgwy_qa.var.required_tags"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.required_tags"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "resource_groups",
        "to_display": "module.spoke_asgwy_qa.var.resource_groups"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.resource_groups"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "search_services",
        "to_display": "module.spoke_asgwy_qa.var.search_services"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.search_services"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "service_bus_namespace",
        "to_display": "module.spoke_asgwy_qa.var.service_bus_namespace"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.service_bus_namespace"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "snow_dns_env",
        "to_display": "module.spoke_asgwy_qa.var.snow_dns_env"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.snow_dns_env"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "storage_accounts",
        "to_display": "module.spoke_asgwy_qa.var.storage_accounts"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.storage_accounts"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "subnets",
        "to_display": "module.spoke_asgwy_qa.var.subnets"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.subnets"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "tag_sets",
        "to_display": "module.spoke_asgwy_qa.var.tag_sets"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.tag_sets"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "ud_managed_identities",
        "to_display": "module.spoke_asgwy_qa.var.ud_managed_identities"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.ud_managed_identities"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.spoke_asgwy_qa",
        "name": "web_apps",
        "to_display": "module.spoke_asgwy_qa.var.web_apps"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.spoke_asgwy_qa",
            "to_display": "module.spoke_asgwy_qa.var.web_apps"
          },
          "status": "pass"
        }
      ]
    }
  ],
  "timestamp": "2025-01-27T21:58:24Z",
  "applyable": true,
  "complete": true,
  "errored": false
}
