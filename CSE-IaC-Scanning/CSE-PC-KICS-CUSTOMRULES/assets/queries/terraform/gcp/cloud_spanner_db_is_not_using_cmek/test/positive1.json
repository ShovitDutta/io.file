{
  "format_version": "1.2",
  "terraform_version": "1.9.8",
  "planned_values": {
    "root_module": {
      "child_modules": [
        {
          "address": "module.self-gcp-spanner-spnpe1-nam3-12278852397",
          "child_modules": [
            {
              "resources": [
                {
                  "address": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-gcp-label-validation.terraform_data.label_validation",
                  "mode": "managed",
                  "type": "terraform_data",
                  "name": "label_validation",
                  "provider_name": "terraform.io/builtin/terraform",
                  "schema_version": 0,
                  "values": {
                    "input": {
                      "cvsappid": "pe",
                      "environment": "nonprod",
                      "sharedemailaddress": "liliansaadatcvshealth_com",
                      "subenvironment": "dev"
                    },
                    "triggers_replace": null
                  },
                  "sensitive_values": {
                    "input": {},
                    "output": {}
                  }
                }
              ],
              "address": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-gcp-label-validation"
            },
            {
              "resources": [
                {
                  "address": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-instance.google_spanner_instance.spanner_instance",
                  "mode": "managed",
                  "type": "google_spanner_instance",
                  "name": "spanner_instance",
                  "provider_name": "registry.terraform.io/hashicorp/google",
                  "schema_version": 0,
                  "values": {
                    "autoscaling_config": [],
                    "config": "nam3",
                    "default_backup_schedule_type": "NONE",
                    "display_name": "spn-spnpe1-dev",
                    "effective_labels": {
                      "cvsappid": "pe",
                      "environment": "nonprod",
                      "goog-terraform-provisioned": "true",
                      "sharedemailaddress": "liliansaadatcvshealth_com",
                      "subenvironment": "dev"
                    },
                    "force_destroy": false,
                    "labels": {
                      "cvsappid": "pe",
                      "environment": "nonprod",
                      "sharedemailaddress": "liliansaadatcvshealth_com",
                      "subenvironment": "dev"
                    },
                    "name": "spn-spnpe1-nam3-dev",
                    "processing_units": 200,
                    "project": "hcb-nonprod-sde-dbaas",
                    "terraform_labels": {
                      "cvsappid": "pe",
                      "environment": "nonprod",
                      "goog-terraform-provisioned": "true",
                      "sharedemailaddress": "liliansaadatcvshealth_com",
                      "subenvironment": "dev"
                    },
                    "timeouts": null
                  },
                  "sensitive_values": {
                    "autoscaling_config": [],
                    "effective_labels": {},
                    "labels": {},
                    "terraform_labels": {}
                  }
                }
              ],
              "address": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-instance"
            },
            {
              "resources": [
                {
                  "address": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-user[\"owner_spnpe1\"].google_spanner_instance_iam_member.spanner_instance_iam_member",
                  "mode": "managed",
                  "type": "google_spanner_instance_iam_member",
                  "name": "spanner_instance_iam_member",
                  "provider_name": "registry.terraform.io/hashicorp/google",
                  "schema_version": 0,
                  "values": {
                    "condition": [],
                    "instance": "spn-spnpe1-nam3-dev",
                    "member": "group:pe-dbeng-spanner-grp@cvshealth.com",
                    "project": "hcb-nonprod-sde-dbaas",
                    "role": "roles/owner"
                  },
                  "sensitive_values": {
                    "condition": []
                  }
                }
              ],
              "address": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-user[\"owner_spnpe1\"]"
            },
            {
              "resources": [
                {
                  "address": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-gcp-cmek-validation.terraform_data.cvs_key_vault_cmek",
                  "mode": "managed",
                  "type": "terraform_data",
                  "name": "cvs_key_vault_cmek",
                  "provider_name": "terraform.io/builtin/terraform",
                  "schema_version": 0,
                  "values": {
                    "input": null,
                    "output": null,
                    "triggers_replace": {
                      "cvs_key_vault_cmek_string": "projects/cvs-key-vault-nonprod/locations/nam3/keyRings/gkr-nonprod-nam3/cryptoKeys/gk-hcb-nonprod-sde-dbaas-nam3"
                    }
                  },
                  "sensitive_values": {
                    "triggers_replace": {}
                  }
                }
              ],
              "address": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-gcp-cmek-validation"
            },
            {
              "resources": [
                {
                  "address": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-database[\"pharmacy\"].google_spanner_database.spanner_database",
                  "mode": "managed",
                  "type": "google_spanner_database",
                  "name": "spanner_database",
                  "provider_name": "registry.terraform.io/hashicorp/google",
                  "schema_version": 0,
                  "values": {
                    "database_dialect": "POSTGRESQL",
                    "ddl": [
                      "Create Schema spnspnpe1dev;"
                    ],
                    "enable_drop_protection": true,
                    "instance": "spn-spnpe1-nam3-dev",
                    "name": "spnspnpe1dev_db_pharmacy",
                    "project": "hcb-nonprod-sde-dbaas",
                    "timeouts": null
                  },
                  "sensitive_values": {
                    "ddl": [
                      false
                    ]
                  }
                }
              ],
              "address": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-database[\"pharmacy\"]"
            },
            {
              "resources": [
                {
                  "address": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-database-user[\"admin_pharmacy\"].google_spanner_database_iam_member.spanner_database_iam_member",
                  "mode": "managed",
                  "type": "google_spanner_database_iam_member",
                  "name": "spanner_database_iam_member",
                  "provider_name": "registry.terraform.io/hashicorp/google",
                  "schema_version": 0,
                  "values": {
                    "condition": [],
                    "database": "spnspnpe1dev_db_pharmacy",
                    "instance": "spn-spnpe1-nam3-dev",
                    "member": "group:pe-dbeng-spanner-grp@cvshealth.com",
                    "project": "hcb-nonprod-sde-dbaas",
                    "role": "roles/spanner.databaseAdmin"
                  },
                  "sensitive_values": {
                    "condition": []
                  }
                }
              ],
              "address": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-database-user[\"admin_pharmacy\"]"
            },
            {
              "resources": [
                {
                  "address": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-full-backup-schedule[\"pharmacy\"].google_spanner_backup_schedule.spanner_backup_schedule",
                  "mode": "managed",
                  "type": "google_spanner_backup_schedule",
                  "name": "spanner_backup_schedule",
                  "provider_name": "registry.terraform.io/hashicorp/google",
                  "schema_version": 0,
                  "values": {
                    "database": "spnspnpe1dev_db_pharmacy",
                    "full_backup_spec": [
                      {}
                    ],
                    "incremental_backup_spec": [],
                    "instance": "spn-spnpe1-nam3-dev",
                    "name": "spnspnpe1dev_db_pharmacy_full_backup",
                    "project": "hcb-nonprod-sde-dbaas",
                    "retention_duration": "604800s",
                    "spec": [
                      {
                        "cron_spec": [
                          {
                            "text": "0 22 * * *"
                          }
                        ]
                      }
                    ],
                    "timeouts": null
                  },
                  "sensitive_values": {
                    "full_backup_spec": [
                      {}
                    ],
                    "incremental_backup_spec": [],
                    "spec": [
                      {
                        "cron_spec": [
                          {}
                        ]
                      }
                    ]
                  }
                }
              ],
              "address": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-full-backup-schedule[\"pharmacy\"]"
            }
          ]
        }
      ]
    }
  },
  "relevant_attributes": [],
  "resource_changes": [],
  "configuration": {
    "provider_config": {
      "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-gcp-cmek-validation:terraform": {
        "name": "terraform",
        "full_name": "terraform.io/builtin/terraform",
        "module_address": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-gcp-cmek-validation"
      },
      "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-gcp-label-validation:terraform": {
        "name": "terraform",
        "full_name": "terraform.io/builtin/terraform",
        "module_address": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-gcp-label-validation"
      },
      "module.self-gcp-spanner-spnpe1-nam3-12278852397:google": {
        "name": "google",
        "full_name": "registry.terraform.io/hashicorp/google",
        "module_address": "module.self-gcp-spanner-spnpe1-nam3-12278852397"
      }
    },
    "root_module": {
      "module_calls": {
        "self-gcp-spanner-spnpe1-nam3-12278852397": {
          "source": "git::https://github.com/cvs-health-source-code/broc-self-gcp-spanner?ref=v1",
          "expressions": {
            "project_id": {
              "references": [
                "var.project_id"
              ]
            },
            "spanner_databases": {
              "references": [
                "var.spanner_databases"
              ]
            },
            "spanner_instance_autoscaling_config_autoscaling_limits": {
              "references": [
                "var.spanner_instance_autoscaling_config_autoscaling_limits"
              ]
            },
            "spanner_instance_enable_autoscaling": {
              "references": [
                "var.spanner_instance_enable_autoscaling"
              ]
            },
            "spanner_instance_environment": {
              "references": [
                "var.spanner_instance_environment"
              ]
            },
            "spanner_instance_labels": {
              "references": [
                "var.spanner_instance_labels"
              ]
            },
            "spanner_instance_name": {
              "references": [
                "var.spanner_instance_name"
              ]
            },
            "spanner_instance_processing_units": {
              "references": [
                "var.spanner_instance_processing_units"
              ]
            },
            "spanner_instance_region": {
              "references": [
                "var.spanner_instance_region"
              ]
            },
            "spanner_instance_standard_size": {
              "references": [
                "var.spanner_instance_standard_size"
              ]
            }
          },
          "module": {
            "outputs": {
              "spanner_instance_id": {
                "expression": {
                  "references": [
                    "module.core-spanner-instance.spanner_instance_name",
                    "module.core-spanner-instance"
                  ]
                },
                "description": "The id of the spanner instance"
              },
              "spanner_instance_name": {
                "expression": {
                  "references": [
                    "module.core-spanner-instance.spanner_instance_display_name",
                    "module.core-spanner-instance"
                  ]
                },
                "description": "The name of the spanner instance"
              }
            },
            "module_calls": {
              "core-gcp-cmek-validation": {
                "source": "git::https://github.com/cvs-health-source-code/broc-core-gcp-cmek-validation.git?ref=v1.0.0",
                "expressions": {
                  "cvs_key_vault_cmek_project": {
                    "references": [
                      "var.project_id"
                    ]
                  },
                  "cvs_key_vault_cmek_region": {
                    "references": [
                      "var.spanner_instance_region"
                    ]
                  }
                },
                "module": {
                  "outputs": {
                    "cvs_key_vault_cmek_string": {
                      "expression": {
                        "references": [
                          "terraform_data.cvs_key_vault_cmek.triggers_replace.cvs_key_vault_cmek_string",
                          "terraform_data.cvs_key_vault_cmek.triggers_replace",
                          "terraform_data.cvs_key_vault_cmek"
                        ]
                      },
                      "description": "This output will present the CMEK string, which will be passed to the resources for either Platform and Self-Service Modules"
                    }
                  },
                  "resources": [
                    {
                      "address": "terraform_data.cvs_key_vault_cmek",
                      "mode": "managed",
                      "type": "terraform_data",
                      "name": "cvs_key_vault_cmek",
                      "provider_config_key": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-gcp-cmek-validation:terraform",
                      "expressions": {
                        "triggers_replace": {
                          "references": [
                            "local.cvs_key_vault_cmek_structure"
                          ]
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "data.google_project.cvs_key_vault_project",
                      "mode": "data",
                      "type": "google_project",
                      "name": "cvs_key_vault_project",
                      "provider_config_key": "module.self-gcp-spanner-spnpe1-nam3-12278852397:google",
                      "expressions": {
                        "project_id": {
                          "references": [
                            "var.cvs_key_vault_cmek_project"
                          ]
                        }
                      },
                      "schema_version": 0
                    }
                  ],
                  "variables": {
                    "cvs_key_vault_cmek_project": {
                      "description": "The project passed for the resource, to get the correct CMEK from the CVS Key Vault Projects"
                    },
                    "cvs_key_vault_cmek_region": {
                      "description": "The region passed for the resource, to get the correct CMEK from the CVS Key Vault Projects"
                    },
                    "cvs_key_vault_dynamic_cmek": {
                      "default": "",
                      "description": "To use additional CVS Key Vault Project, other than the default ones (cvs-key-vault-prod & cvs-key-vault-nonprod). Note: If you pass something other than the default Prod/NonProd, make sure you match environment types (e.g. Pass lab but region/project is prod)."
                    }
                  }
                }
              },
              "core-gcp-label-validation": {
                "source": "git::https://github.com/cvs-health-source-code/broc-core-gcp-label-validation.git?ref=v1.0.0",
                "expressions": {
                  "label_validation_input": {
                    "references": [
                      "var.spanner_instance_labels"
                    ]
                  }
                },
                "module": {
                  "resources": [
                    {
                      "address": "terraform_data.label_validation",
                      "mode": "managed",
                      "type": "terraform_data",
                      "name": "label_validation",
                      "provider_config_key": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-gcp-label-validation:terraform",
                      "expressions": {
                        "input": {
                          "references": [
                            "var.label_validation_input"
                          ]
                        }
                      },
                      "schema_version": 0
                    }
                  ],
                  "variables": {
                    "label_validation_input": {
                      "description": "This will accept variables from Platform and Self-Service modules, to then validate correct labels are being passed. Additional labels can be passed but are not required for validation."
                    }
                  }
                }
              },
              "core-spanner-database": {
                "source": "git::https://github.com/cvs-health-source-code/broc-core-gcp-spanner-database.git?ref=v1.1.0",
                "expressions": {
                  "spanner_database_database_dialect": {
                    "references": [
                      "local.database_dialect"
                    ]
                  },
                  "spanner_database_ddl": {
                    "references": [
                      "each.value.ddl_commands",
                      "each.value"
                    ]
                  },
                  "spanner_database_deletion_protection": {
                    "references": [
                      "each.value.deletion_protection",
                      "each.value"
                    ]
                  },
                  "spanner_database_enable_drop_protection": {
                    "references": [
                      "each.value.enable_drop_protection",
                      "each.value"
                    ]
                  },
                  "spanner_database_encryption_config_kms_key_name": {
                    "references": [
                      "each.value.encryption_key_path",
                      "each.value",
                      "module.core-gcp-cmek-validation.cvs_key_vault_cmek_string",
                      "module.core-gcp-cmek-validation",
                      "each.value.encryption_key_path",
                      "each.value"
                    ]
                  },
                  "spanner_database_instance": {
                    "references": [
                      "module.core-spanner-instance.spanner_instance_name",
                      "module.core-spanner-instance"
                    ]
                  },
                  "spanner_database_name": {
                    "references": [
                      "each.value.name",
                      "each.value"
                    ]
                  },
                  "spanner_database_project": {
                    "references": [
                      "var.project_id"
                    ]
                  }
                },
                "for_each_expression": {
                  "references": [
                    "local.spanner_db"
                  ]
                },
                "module": {
                  "outputs": {
                    "spanner_database_name": {
                      "expression": {
                        "references": [
                          "google_spanner_database.spanner_database.name",
                          "google_spanner_database.spanner_database"
                        ]
                      },
                      "description": "Spanner Database Name"
                    }
                  },
                  "resources": [
                    {
                      "address": "google_spanner_database.spanner_database",
                      "mode": "managed",
                      "type": "google_spanner_database",
                      "name": "spanner_database",
                      "provider_config_key": "module.self-gcp-spanner-spnpe1-nam3-12278852397:google",
                      "expressions": {
                        "database_dialect": {
                          "references": [
                            "var.spanner_database_database_dialect"
                          ]
                        },
                        "ddl": {
                          "references": [
                            "var.spanner_database_ddl"
                          ]
                        },
                        "deletion_protection": {
                          "references": [
                            "var.spanner_database_deletion_protection"
                          ]
                        },
                        "enable_drop_protection": {
                          "references": [
                            "var.spanner_database_enable_drop_protection"
                          ]
                        },
                        "encryption_config": [
                          {
                            "kms_key_name": {
                              "references": [
                                "var.spanner_database_encryption_config_kms_key_name"
                              ]
                            }
                          }
                        ],
                        "instance": {
                          "references": [
                            "var.spanner_database_instance"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.spanner_database_name"
                          ]
                        },
                        "project": {
                          "references": [
                            "var.spanner_database_project"
                          ]
                        }
                      },
                      "schema_version": 0
                    }
                  ],
                  "variables": {
                    "spanner_database_database_dialect": {
                      "description": "The dialect of the Cloud Spanner Database ex: POSTGRESQL"
                    },
                    "spanner_database_ddl": {
                      "default": [],
                      "description": "List of ddl commands to create items under the database"
                    },
                    "spanner_database_deletion_protection": {
                      "default": true,
                      "description": "Whether to enable deletion of the database from terraform code"
                    },
                    "spanner_database_enable_drop_protection": {
                      "default": true,
                      "description": "Whether to enable deletion of the database"
                    },
                    "spanner_database_encryption_config_kms_key_name": {
                      "description": "The full path to the encryption key used for the CMEK disk encryption."
                    },
                    "spanner_database_instance": {
                      "description": "The name of the spanner instance in GCP"
                    },
                    "spanner_database_name": {
                      "description": "The name of the spanner database in GCP"
                    },
                    "spanner_database_project": {
                      "description": "The ID of the GCP project in which the resource belongs"
                    }
                  }
                },
                "depends_on": [
                  "module.core-spanner-instance"
                ]
              },
              "core-spanner-database-user": {
                "source": "git::https://github.com/cvs-health-source-code/broc-core-gcp-spanner-database-user.git?ref=v1.0.0",
                "expressions": {
                  "spanner_database_iam_member_database": {
                    "references": [
                      "module.core-spanner-database",
                      "each.value.db_name",
                      "each.value"
                    ]
                  },
                  "spanner_database_iam_member_instance": {
                    "references": [
                      "module.core-spanner-instance.spanner_instance_name",
                      "module.core-spanner-instance"
                    ]
                  },
                  "spanner_database_iam_member_member": {
                    "references": [
                      "each.value.user",
                      "each.value"
                    ]
                  },
                  "spanner_database_iam_member_project": {
                    "references": [
                      "var.project_id"
                    ]
                  },
                  "spanner_database_iam_member_role": {
                    "references": [
                      "each.value.role",
                      "each.value"
                    ]
                  }
                },
                "for_each_expression": {
                  "references": [
                    "local.spanner_database_users"
                  ]
                },
                "module": {
                  "resources": [
                    {
                      "address": "google_spanner_database_iam_member.spanner_database_iam_member",
                      "mode": "managed",
                      "type": "google_spanner_database_iam_member",
                      "name": "spanner_database_iam_member",
                      "provider_config_key": "module.self-gcp-spanner-spnpe1-nam3-12278852397:google",
                      "expressions": {
                        "database": {
                          "references": [
                            "var.spanner_database_iam_member_database"
                          ]
                        },
                        "instance": {
                          "references": [
                            "var.spanner_database_iam_member_instance"
                          ]
                        },
                        "member": {
                          "references": [
                            "var.spanner_database_iam_member_member"
                          ]
                        },
                        "project": {
                          "references": [
                            "var.spanner_database_iam_member_project"
                          ]
                        },
                        "role": {
                          "references": [
                            "var.spanner_database_iam_member_role"
                          ]
                        }
                      },
                      "schema_version": 0
                    }
                  ],
                  "variables": {
                    "spanner_database_iam_member_database": {
                      "description": "The name of the database in GCP"
                    },
                    "spanner_database_iam_member_instance": {
                      "description": "The name of the spanner instance in GCP"
                    },
                    "spanner_database_iam_member_member": {
                      "description": "The email of the user including the user type (group, user, serviceAccount) ex: 'group:group_name@cvshealth.com'"
                    },
                    "spanner_database_iam_member_project": {
                      "description": "The ID of the GCP project in which the resource belongs"
                    },
                    "spanner_database_iam_member_role": {
                      "description": "The role to be given to the user"
                    }
                  }
                },
                "depends_on": [
                  "module.core-spanner-database"
                ]
              },
              "core-spanner-full-backup-schedule": {
                "source": "git::https://github.com/cvs-health-source-code/broc-core-gcp-spanner-backup-schedule.git?ref=v1.0.0",
                "expressions": {
                  "spanner_backup_schedule_backup_type": {
                    "constant_value": "full"
                  },
                  "spanner_backup_schedule_database": {
                    "references": [
                      "module.core-spanner-database",
                      "each.value.db_name",
                      "each.value"
                    ]
                  },
                  "spanner_backup_schedule_instance": {
                    "references": [
                      "module.core-spanner-instance.spanner_instance_name",
                      "module.core-spanner-instance"
                    ]
                  },
                  "spanner_backup_schedule_name": {
                    "references": [
                      "each.value.full_backup_schedule_name",
                      "each.value"
                    ]
                  },
                  "spanner_backup_schedule_project": {
                    "references": [
                      "var.project_id"
                    ]
                  },
                  "spanner_backup_schedule_retention_duration": {
                    "references": [
                      "each.value.full_backup_retention_duration",
                      "each.value"
                    ]
                  },
                  "spanner_backup_schedule_spec_cron_spec": {
                    "references": [
                      "each.value.full_backup_schedule",
                      "each.value"
                    ]
                  }
                },
                "for_each_expression": {
                  "references": [
                    "local.spanner_db"
                  ]
                },
                "module": {
                  "resources": [
                    {
                      "address": "google_spanner_backup_schedule.spanner_backup_schedule",
                      "mode": "managed",
                      "type": "google_spanner_backup_schedule",
                      "name": "spanner_backup_schedule",
                      "provider_config_key": "module.self-gcp-spanner-spnpe1-nam3-12278852397:google",
                      "expressions": {
                        "database": {
                          "references": [
                            "var.spanner_backup_schedule_database"
                          ]
                        },
                        "instance": {
                          "references": [
                            "var.spanner_backup_schedule_instance"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.spanner_backup_schedule_name"
                          ]
                        },
                        "project": {
                          "references": [
                            "var.spanner_backup_schedule_project"
                          ]
                        },
                        "retention_duration": {
                          "references": [
                            "local.spanner_backup_schedule_retention_duration"
                          ]
                        },
                        "spec": [
                          {
                            "cron_spec": [
                              {
                                "text": {
                                  "references": [
                                    "local.spanner_backup_schedule_spec_cron_spec_text"
                                  ]
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "schema_version": 0
                    }
                  ],
                  "variables": {
                    "spanner_backup_schedule_backup_type": {
                      "description": "Backup type allowed values are [full, incremental]"
                    },
                    "spanner_backup_schedule_database": {
                      "description": "The name of the database in GCP"
                    },
                    "spanner_backup_schedule_instance": {
                      "description": "The name of the spanner instance in GCP"
                    },
                    "spanner_backup_schedule_name": {
                      "description": "A unique identifier for the backup schedule"
                    },
                    "spanner_backup_schedule_project": {
                      "description": "The ID of the GCP project in which the resource belongs"
                    },
                    "spanner_backup_schedule_retention_duration": {
                      "default": 30,
                      "description": "The maximum possible retention duration in days up to 366 days."
                    },
                    "spanner_backup_schedule_spec_cron_spec": {
                      "description": "The backup schedule in UTC time based on cron time string format where the frequency_step is the step of frequency_interval to repeat the backup, ex: run the job every 3 days."
                    }
                  }
                },
                "depends_on": [
                  "module.core-spanner-database"
                ]
              },
              "core-spanner-instance": {
                "source": "git::https://github.com/cvs-health-source-code/broc-core-gcp-spanner-instance.git?ref=v2.1.0",
                "expressions": {
                  "spanner_instance_autoscaling_config_autoscaling_limits": {
                    "references": [
                      "var.spanner_instance_autoscaling_config_autoscaling_limits"
                    ]
                  },
                  "spanner_instance_display_name": {
                    "references": [
                      "local.spanner_instance_display_name"
                    ]
                  },
                  "spanner_instance_edition": {
                    "references": [
                      "local.spanner_instance_edition"
                    ]
                  },
                  "spanner_instance_enable_autoscaling": {
                    "references": [
                      "var.spanner_instance_enable_autoscaling"
                    ]
                  },
                  "spanner_instance_labels": {
                    "references": [
                      "var.spanner_instance_labels"
                    ]
                  },
                  "spanner_instance_name": {
                    "references": [
                      "local.spanner_instance_name"
                    ]
                  },
                  "spanner_instance_processing_units": {
                    "references": [
                      "local.spanner_instance_processing_units"
                    ]
                  },
                  "spanner_instance_project": {
                    "references": [
                      "var.project_id"
                    ]
                  },
                  "spanner_instance_region": {
                    "references": [
                      "var.spanner_instance_region"
                    ]
                  },
                  "spanner_instance_region_type": {
                    "references": [
                      "local.spanner_instance_region_type"
                    ]
                  }
                },
                "module": {
                  "outputs": {
                    "spanner_instance": {
                      "expression": {
                        "references": [
                          "google_spanner_instance.spanner_instance"
                        ]
                      },
                      "description": "Spanner instance object of all spanner instance attributes"
                    },
                    "spanner_instance_display_name": {
                      "expression": {
                        "references": [
                          "google_spanner_instance.spanner_instance.display_name",
                          "google_spanner_instance.spanner_instance"
                        ]
                      },
                      "description": "The name of the spanner instance"
                    },
                    "spanner_instance_name": {
                      "expression": {
                        "references": [
                          "google_spanner_instance.spanner_instance.name",
                          "google_spanner_instance.spanner_instance"
                        ]
                      },
                      "description": "The id of the spanner instance"
                    }
                  },
                  "resources": [
                    {
                      "address": "google_spanner_instance.spanner_instance",
                      "mode": "managed",
                      "type": "google_spanner_instance",
                      "name": "spanner_instance",
                      "provider_config_key": "module.self-gcp-spanner-spnpe1-nam3-12278852397:google",
                      "expressions": {
                        "config": {
                          "references": [
                            "local.spanner_instance_config"
                          ]
                        },
                        "default_backup_schedule_type": {
                          "references": [
                            "var.default_backup_schedule_type"
                          ]
                        },
                        "display_name": {
                          "references": [
                            "var.spanner_instance_display_name"
                          ]
                        },
                        "edition": {
                          "references": [
                            "var.spanner_instance_edition"
                          ]
                        },
                        "labels": {
                          "references": [
                            "var.spanner_instance_labels"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.spanner_instance_name"
                          ]
                        },
                        "num_nodes": {
                          "references": [
                            "local.spanner_instance_num_nodes"
                          ]
                        },
                        "processing_units": {
                          "references": [
                            "local.spanner_instance_processing_units"
                          ]
                        },
                        "project": {
                          "references": [
                            "var.spanner_instance_project"
                          ]
                        }
                      },
                      "schema_version": 0
                    }
                  ],
                  "variables": {
                    "default_backup_schedule_type": {
                      "default": "NONE",
                      "description": "(Optional) Default backup schedule type (NONE, AUTOMATIC)"
                    },
                    "spanner_instance_autoscaling_config_autoscaling_limits": {
                      "default": {
                        "high_priority_cpu_utilization_percent": 65,
                        "max_nodes": 5,
                        "max_processing_units": 5000,
                        "min_nodes": 1,
                        "min_processing_units": 1000,
                        "storage_utilization_percent": 95,
                        "use_processing_units": false
                      },
                      "description": "The auto scaling limits for spanner in Processing Units or Number of Nodes. The minimum required Edition for this feature is ENTERPRISE"
                    },
                    "spanner_instance_display_name": {
                      "description": "The name of the spanner instance in GCP"
                    },
                    "spanner_instance_edition": {
                      "default": null,
                      "description": "(Optional) The edition selected for this instance. Different editions provide different capabilities at different price points. Possible values are: EDITION_UNSPECIFIED, STANDARD, ENTERPRISE, ENTERPRISE_PLUS"
                    },
                    "spanner_instance_enable_autoscaling": {
                      "default": false,
                      "description": "(Optional) Whether to enable auto scaling"
                    },
                    "spanner_instance_labels": {
                      "description": "The labels to be added to the spanner instance in GCP (a list of \"key\": value pairs)"
                    },
                    "spanner_instance_name": {
                      "description": "The id of the spanner instance in GCP"
                    },
                    "spanner_instance_num_nodes": {
                      "default": null,
                      "description": "The number of nodes allocated to this instance. Exactly one of either node_count or processing_units must be present in terraform"
                    },
                    "spanner_instance_processing_units": {
                      "default": 100,
                      "description": "The size of the spanner instance in Processing Units which affects the cost of the database. It has a minimium of 100 and increments of 100 to 1000, then increments of 1000"
                    },
                    "spanner_instance_project": {
                      "description": "The ID of the GCP project in which the resource belongs"
                    },
                    "spanner_instance_region": {
                      "description": "The name of the spanner instance region."
                    },
                    "spanner_instance_region_type": {
                      "description": "The region type for the spanner instance (Regional, Multi-region)"
                    }
                  }
                }
              },
              "core-spanner-user": {
                "source": "git::https://github.com/cvs-health-source-code/broc-core-gcp-spanner-user.git?ref=v1.0.0",
                "expressions": {
                  "spanner_instance_iam_member_instance": {
                    "references": [
                      "module.core-spanner-instance.spanner_instance_name",
                      "module.core-spanner-instance"
                    ]
                  },
                  "spanner_instance_iam_member_member": {
                    "references": [
                      "each.value.user",
                      "each.value"
                    ]
                  },
                  "spanner_instance_iam_member_project": {
                    "references": [
                      "var.project_id"
                    ]
                  },
                  "spanner_instance_iam_member_role": {
                    "references": [
                      "each.value.role",
                      "each.value"
                    ]
                  }
                },
                "for_each_expression": {
                  "references": [
                    "local.spanner_users"
                  ]
                },
                "module": {
                  "resources": [
                    {
                      "address": "google_spanner_instance_iam_member.spanner_instance_iam_member",
                      "mode": "managed",
                      "type": "google_spanner_instance_iam_member",
                      "name": "spanner_instance_iam_member",
                      "provider_config_key": "module.self-gcp-spanner-spnpe1-nam3-12278852397:google",
                      "expressions": {
                        "instance": {
                          "references": [
                            "var.spanner_instance_iam_member_instance"
                          ]
                        },
                        "member": {
                          "references": [
                            "var.spanner_instance_iam_member_member"
                          ]
                        },
                        "project": {
                          "references": [
                            "var.spanner_instance_iam_member_project"
                          ]
                        },
                        "role": {
                          "references": [
                            "var.spanner_instance_iam_member_role"
                          ]
                        }
                      },
                      "schema_version": 0
                    }
                  ],
                  "variables": {
                    "spanner_instance_iam_member_instance": {
                      "description": "The name of the spanner instance in GCP"
                    },
                    "spanner_instance_iam_member_member": {
                      "description": "The email of the user including the user type (group, user, serviceAccount) ex: 'group:group_name@cvshealth.com'"
                    },
                    "spanner_instance_iam_member_project": {
                      "description": "The ID of the GCP project in which the resource belongs"
                    },
                    "spanner_instance_iam_member_role": {
                      "description": "The role to be given to the user"
                    }
                  }
                },
                "depends_on": [
                  "module.core-spanner-instance"
                ]
              }
            },
            "variables": {
              "project_id": {
                "description": "The ID of the GCP project in which the resource belongs"
              },
              "spanner_databases": {
                "default": [],
                "description": "The list of the databases to be created for the spanner instance(Please create your tables under the schema which has the same name as your spanner instance name). It includes the name of the database, the encryption key full path, list of the dml users (Service Accounts emails only), list of the ddl users (Service accounts emails only), list of read only users(IAM Group emails), list of dev dml users(IAM Group emails in case of dev env only)"
              },
              "spanner_instance_autoscaling_config_autoscaling_limits": {
                "default": {
                  "max_nodes": 5,
                  "max_processing_units": 5000,
                  "min_nodes": 1,
                  "min_processing_units": 1000,
                  "use_processing_units": false
                },
                "description": "The auto scaling limits for spanner in Processing Units or Number of Nodes. The minimum required Edition for this feature is ENTERPRISE"
              },
              "spanner_instance_enable_autoscaling": {
                "default": false,
                "description": "Whether to enable auto scaling, Auto scaling is now available in non-prod environments."
              },
              "spanner_instance_environment": {
                "description": "The environment for the spanner instance (dev, qa, uat, pt, preprod, prod)"
              },
              "spanner_instance_labels": {
                "description": "The labels to be added to the spanner instance in GCP (a list of \"key\": value pairs)"
              },
              "spanner_instance_name": {
                "description": "The name of the spanner instance. This does not include the region or env so that the final spanner instance name would be spn-<spanne_instance_name>-env"
              },
              "spanner_instance_processing_units": {
                "default": 0,
                "description": "The size of the spanner instance in Processing Units which affects the cost of the database so it is recommended to use large for prod env only (xsmall: 100PU, small: 200PU-300PU, medium: 400PU-1000PU, large: 1000PU-3000PU)"
              },
              "spanner_instance_region": {
                "description": "The name of the spanner region. It should be 'us-west2' or 'us-east4' for regional databases for non-prod environments and 'nam3' for multi-region databases for prod environments"
              },
              "spanner_instance_standard_size": {
                "default": "xsmall",
                "description": "The standard sizes for the spanner instance mapped to processing units which affects the cost so it is recommended to use large for prod env only (xsmall: 100PU, small: 200PU, medium: 400PU, large: 1000PU)"
              }
            }
          }
        }
      },
      "variables": {
        "project_id": {
          "description": "The ID of the GCP project in which the resource belongs"
        },
        "spanner_databases": {
          "default": [],
          "description": "The list of the databases to be created for the spanner instance(Please create your tables under the schema which has the same name as your spanner instance name). It includes the name of the database, the encryption key full path, list of the dml users (Service Accounts emails only), list of the ddl users (Service accounts emails only), list of read only users(IAM Group emails), list of dev dml users(IAM Group emails in case of dev env only)"
        },
        "spanner_instance_autoscaling_config_autoscaling_limits": {
          "default": {
            "max_nodes": 5,
            "max_processing_units": 5000,
            "min_nodes": 1,
            "min_processing_units": 1000,
            "use_processing_units": false
          },
          "description": "The auto scaling limits for spanner in Processing Units or Number of Nodes. The minimum required Edition for this feature is ENTERPRISE"
        },
        "spanner_instance_enable_autoscaling": {
          "default": false,
          "description": "Whether to enable auto scaling, Auto scaling is now available in non-prod environments."
        },
        "spanner_instance_environment": {
          "description": "The environment for the spanner instance (dev, qa, uat, pt, preprod, prod)"
        },
        "spanner_instance_labels": {
          "description": "The labels to be added to the spanner instance in GCP (a list of \"key\": value pairs)"
        },
        "spanner_instance_name": {
          "description": "The name of the spanner instance. This does not include the region or env so that the final spanner instance name would be spn-<spanne_instance_name>-env"
        },
        "spanner_instance_processing_units": {
          "default": 0,
          "description": "The size of the spanner instance in Processing Units which affects the cost of the database so it is recommended to use large for prod env only (xsmall: 100PU, small: 200PU-300PU, medium: 400PU-1000PU, large: 1000PU-3000PU)"
        },
        "spanner_instance_region": {
          "description": "The name of the spanner region. It should be 'us-west2' or 'us-east4' for regional databases for non-prod environments and 'nam3' for multi-region databases for prod environments"
        },
        "spanner_instance_standard_size": {
          "default": "xsmall",
          "description": "The standard sizes for the spanner instance mapped to processing units which affects the cost so it is recommended to use large for prod env only (xsmall: 100PU, small: 200PU, medium: 400PU, large: 1000PU)"
        }
      }
    }
  },
  "checks": [
    {
      "address": {
        "kind": "resource",
        "mode": "managed",
        "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-gcp-label-validation",
        "name": "label_validation",
        "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-gcp-label-validation.terraform_data.label_validation",
        "type": "terraform_data"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-gcp-label-validation",
            "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-gcp-label-validation.terraform_data.label_validation"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "resource",
        "mode": "managed",
        "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-database",
        "name": "spanner_database",
        "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-database.google_spanner_database.spanner_database",
        "type": "google_spanner_database"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-database[\"pharmacy\"]",
            "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-database[\"pharmacy\"].google_spanner_database.spanner_database"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-full-backup-schedule",
        "name": "spanner_backup_schedule_backup_type",
        "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-full-backup-schedule.var.spanner_backup_schedule_backup_type"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-full-backup-schedule[\"pharmacy\"]",
            "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-full-backup-schedule[\"pharmacy\"].var.spanner_backup_schedule_backup_type"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-full-backup-schedule",
        "name": "spanner_backup_schedule_name",
        "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-full-backup-schedule.var.spanner_backup_schedule_name"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-full-backup-schedule[\"pharmacy\"]",
            "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-full-backup-schedule[\"pharmacy\"].var.spanner_backup_schedule_name"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-full-backup-schedule",
        "name": "spanner_backup_schedule_retention_duration",
        "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-full-backup-schedule.var.spanner_backup_schedule_retention_duration"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-full-backup-schedule[\"pharmacy\"]",
            "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-full-backup-schedule[\"pharmacy\"].var.spanner_backup_schedule_retention_duration"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-full-backup-schedule",
        "name": "spanner_backup_schedule_spec_cron_spec",
        "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-full-backup-schedule.var.spanner_backup_schedule_spec_cron_spec"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-full-backup-schedule[\"pharmacy\"]",
            "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-full-backup-schedule[\"pharmacy\"].var.spanner_backup_schedule_spec_cron_spec"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "resource",
        "mode": "managed",
        "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-instance",
        "name": "spanner_instance",
        "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-instance.google_spanner_instance.spanner_instance",
        "type": "google_spanner_instance"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-instance",
            "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-instance.google_spanner_instance.spanner_instance"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-instance",
        "name": "default_backup_schedule_type",
        "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-instance.var.default_backup_schedule_type"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-instance",
            "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-instance.var.default_backup_schedule_type"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-instance",
        "name": "spanner_instance_display_name",
        "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-instance.var.spanner_instance_display_name"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-instance",
            "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-instance.var.spanner_instance_display_name"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-instance",
        "name": "spanner_instance_name",
        "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-instance.var.spanner_instance_name"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-instance",
            "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-instance.var.spanner_instance_name"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-instance",
        "name": "spanner_instance_region_type",
        "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-instance.var.spanner_instance_region_type"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-instance",
            "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.module.core-spanner-instance.var.spanner_instance_region_type"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397",
        "name": "spanner_instance_environment",
        "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.var.spanner_instance_environment"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397",
            "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.var.spanner_instance_environment"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397",
        "name": "spanner_instance_processing_units",
        "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.var.spanner_instance_processing_units"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397",
            "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.var.spanner_instance_processing_units"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397",
        "name": "spanner_instance_region",
        "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.var.spanner_instance_region"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397",
            "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.var.spanner_instance_region"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397",
        "name": "spanner_instance_standard_size",
        "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.var.spanner_instance_standard_size"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.self-gcp-spanner-spnpe1-nam3-12278852397",
            "to_display": "module.self-gcp-spanner-spnpe1-nam3-12278852397.var.spanner_instance_standard_size"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "name": "spanner_instance_environment",
        "to_display": "var.spanner_instance_environment"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "to_display": "var.spanner_instance_environment"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "name": "spanner_instance_processing_units",
        "to_display": "var.spanner_instance_processing_units"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "to_display": "var.spanner_instance_processing_units"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "name": "spanner_instance_region",
        "to_display": "var.spanner_instance_region"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "to_display": "var.spanner_instance_region"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "name": "spanner_instance_standard_size",
        "to_display": "var.spanner_instance_standard_size"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "to_display": "var.spanner_instance_standard_size"
          },
          "status": "pass"
        }
      ]
    }
  ],
  "timestamp": "2024-12-11T14:51:33Z",
  "errored": false
}
