{
  "format_version": "1.2",
  "terraform_version": "1.9.8",
  "variables": {
    "autoscaling_limits": {
      "value": {
        "high_priority_cpu_utilization_percent": 65,
        "max_nodes": 5,
        "max_processing_units": 5000,
        "min_nodes": 1,
        "min_processing_units": 1000,
        "storage_utilization_percent": 95
      }
    },
    "backup_schedules": {
      "value": [
        {
          "backup_type": "full",
          "cron_spec_text": "0 22 * * *",
          "database": "spndbaaspt_db_pharmacy",
          "retention_duration": 30,
          "schedule_name": "spndbaaspt_db_pharmacy_full_backup"
        }
      ]
    },
    "database_iam_members": {
      "value": [
        {
          "database": "spndbaaspt_db_pharmacy",
          "member": "group:pe-dbeng-spanner-grp@cvshealth.com",
          "role": "roles/spanner.databaseAdmin"
        }
      ]
    },
    "databases": {
      "value": [
        {
          "database_dialect": "POSTGRESQL",
          "db_name": "spndbaaspt_db_pharmacy",
          "deletion_protection": false,
          "enable_drop_protection": false,
          "schema_name": "spndbaaspt",
          "version_retention_period": "1h"
        }
      ]
    },
    "ddl_users": {
      "value": [
        {
          "database": "spndbaaspt_db_pharmacy",
          "member": "serviceAccount:infra-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com"
        }
      ]
    },
    "default_backup_schedule_type": {
      "value": "NONE"
    },
    "display_name": {
      "value": "spn-dbaas-pt"
    },
    "dml_users": {
      "value": [
        {
          "database": "spndbaaspt_db_pharmacy",
          "member": "serviceAccount:auto-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com"
        }
      ]
    },
    "edition": {
      "value": "ENTERPRISE_PLUS"
    },
    "enable_autoscaling": {
      "value": false
    },
    "environment": {
      "value": "pt"
    },
    "force_destroy": {
      "value": false
    },
    "instance_iam_members": {
      "value": [
        {
          "member": "group:pe-dbeng-spanner-grp@cvshealth.com",
          "role": "roles/owner"
        }
      ]
    },
    "instance_name": {
      "value": "spn-dbaas-nam3-pt"
    },
    "labels": {
      "value": {
        "costcenter": "190320",
        "cvsappid": "dbaas",
        "environmentsubtype": "pt",
        "environmenttype": "nonprod",
        "itpmid": "16627",
        "managed_by": "taxi",
        "sharedemailaddress": "liliansaadatcvshealth_com",
        "taxi_resource_id": "taxi-dba-spn-11"
      }
    },
    "num_nodes": {
      "value": 1
    },
    "processing_units": {
      "value": 100
    },
    "project": {
      "value": "corp-dev-broc-sechub-vpc"
    },
    "read_only_users": {
      "value": [
        {
          "database": "spndbaaspt_db_pharmacy",
          "member": "group:taxi-gcp-automation-lab-users@cvshealth.com"
        }
      ]
    },
    "region": {
      "value": "nam3"
    },
    "region_type": {
      "value": "Multi-region"
    },
    "use_processing_units": {
      "value": true
    }
  },
  "planned_values": {
    "outputs": {
      "google_resource_id": {
        "sensitive": false,
        "type": "string",
        "value": "spn-dbaas-nam3-pt"
      },
      "spanner_database": {
        "sensitive": false,
        "type": [
          "object",
          {
            "spndbaaspt_db_pharmacy": [
              "object",
              {
                "spanner_database": [
                  "object",
                  {
                    "database_dialect": "string",
                    "ddl": [
                      "list",
                      "string"
                    ],
                    "default_time_zone": "string",
                    "deletion_protection": "bool",
                    "enable_drop_protection": "bool",
                    "encryption_config": [
                      "list",
                      [
                        "object",
                        {
                          "kms_key_name": "string",
                          "kms_key_names": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    ],
                    "id": "string",
                    "instance": "string",
                    "name": "string",
                    "project": "string",
                    "state": "string",
                    "timeouts": [
                      "object",
                      {
                        "create": "string",
                        "delete": "string",
                        "update": "string"
                      }
                    ],
                    "version_retention_period": "string"
                  }
                ]
              }
            ]
          }
        ],
        "value": {
          "spndbaaspt_db_pharmacy": {
            "spanner_database": {
              "database_dialect": "POSTGRESQL",
              "ddl": [
                "Create Schema spndbaaspt;"
              ],
              "default_time_zone": null,
              "deletion_protection": false,
              "enable_drop_protection": false,
              "encryption_config": [
                {
                  "kms_key_name": "projects/cvs-key-vault-nonprod/locations/nam3/keyRings/gkr-nonprod-nam3/cryptoKeys/gk-corp-dev-broc-sechub-vpc-nam3",
                  "kms_key_names": []
                }
              ],
              "id": "spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy",
              "instance": "spn-dbaas-nam3-pt",
              "name": "spndbaaspt_db_pharmacy",
              "project": "corp-dev-broc-sechub-vpc",
              "state": "READY",
              "timeouts": null,
              "version_retention_period": "1h"
            }
          }
        }
      },
      "spanner_instance": {
        "sensitive": false,
        "type": [
          "object",
          {
            "autoscaling_config": [
              "list",
              [
                "object",
                {
                  "asymmetric_autoscaling_options": [
                    "list",
                    [
                      "object",
                      {
                        "overrides": [
                          "list",
                          [
                            "object",
                            {
                              "autoscaling_limits": [
                                "list",
                                [
                                  "object",
                                  {
                                    "max_nodes": "number",
                                    "min_nodes": "number"
                                  }
                                ]
                              ]
                            }
                          ]
                        ],
                        "replica_selection": [
                          "list",
                          [
                            "object",
                            {
                              "location": "string"
                            }
                          ]
                        ]
                      }
                    ]
                  ],
                  "autoscaling_limits": [
                    "list",
                    [
                      "object",
                      {
                        "max_nodes": "number",
                        "max_processing_units": "number",
                        "min_nodes": "number",
                        "min_processing_units": "number"
                      }
                    ]
                  ],
                  "autoscaling_targets": [
                    "list",
                    [
                      "object",
                      {
                        "high_priority_cpu_utilization_percent": "number",
                        "storage_utilization_percent": "number"
                      }
                    ]
                  ]
                }
              ]
            ],
            "config": "string",
            "default_backup_schedule_type": "string",
            "display_name": "string",
            "edition": "string",
            "effective_labels": [
              "map",
              "string"
            ],
            "force_destroy": "bool",
            "id": "string",
            "instance_type": "string",
            "labels": [
              "map",
              "string"
            ],
            "name": "string",
            "num_nodes": "number",
            "processing_units": "number",
            "project": "string",
            "state": "string",
            "terraform_labels": [
              "map",
              "string"
            ],
            "timeouts": [
              "object",
              {
                "create": "string",
                "delete": "string",
                "update": "string"
              }
            ]
          }
        ],
        "value": {
          "autoscaling_config": [],
          "config": "projects/corp-dev-broc-sechub-vpc/instanceConfigs/nam3",
          "default_backup_schedule_type": "NONE",
          "display_name": "spn-dbaas-pt",
          "edition": "ENTERPRISE_PLUS",
          "effective_labels": {
            "costcenter": "190320",
            "cvsappid": "dbaas",
            "environmentsubtype": "pt",
            "environmenttype": "nonprod",
            "goog-terraform-provisioned": "true",
            "itpmid": "16627",
            "managed_by": "taxi",
            "sharedemailaddress": "liliansaadatcvshealth_com",
            "taxi_resource_id": "taxi-dba-spn-11"
          },
          "force_destroy": false,
          "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt",
          "instance_type": "PROVISIONED",
          "labels": {
            "costcenter": "190320",
            "cvsappid": "dbaas",
            "environmentsubtype": "pt",
            "environmenttype": "nonprod",
            "itpmid": "16627",
            "managed_by": "taxi",
            "sharedemailaddress": "liliansaadatcvshealth_com",
            "taxi_resource_id": "taxi-dba-spn-11"
          },
          "name": "spn-dbaas-nam3-pt",
          "num_nodes": 0,
          "processing_units": 100,
          "project": "corp-dev-broc-sechub-vpc",
          "state": "READY",
          "terraform_labels": {
            "costcenter": "190320",
            "cvsappid": "dbaas",
            "environmentsubtype": "pt",
            "environmenttype": "nonprod",
            "goog-terraform-provisioned": "true",
            "itpmid": "16627",
            "managed_by": "taxi",
            "sharedemailaddress": "liliansaadatcvshealth_com",
            "taxi_resource_id": "taxi-dba-spn-11"
          },
          "timeouts": null
        }
      }
    },
    "root_module": {
      "child_modules": [
        {
          "address": "module.taxi-dba-spn-11",
          "child_modules": [
            {
              "resources": [
                {
                  "address": "module.taxi-dba-spn-11.module.spanner-instance.google_spanner_instance.spanner_instance",
                  "mode": "managed",
                  "type": "google_spanner_instance",
                  "name": "spanner_instance",
                  "provider_name": "registry.terraform.io/hashicorp/google",
                  "schema_version": 0,
                  "values": {
                    "autoscaling_config": [],
                    "config": "projects/corp-dev-broc-sechub-vpc/instanceConfigs/nam3",
                    "default_backup_schedule_type": "NONE",
                    "display_name": "spn-dbaas-pt",
                    "edition": "ENTERPRISE_PLUS",
                    "effective_labels": {
                      "costcenter": "190320",
                      "cvsappid": "dbaas",
                      "environmentsubtype": "pt",
                      "environmenttype": "nonprod",
                      "goog-terraform-provisioned": "true",
                      "itpmid": "16627",
                      "managed_by": "taxi",
                      "sharedemailaddress": "liliansaadatcvshealth_com",
                      "taxi_resource_id": "taxi-dba-spn-11"
                    },
                    "force_destroy": false,
                    "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt",
                    "instance_type": "PROVISIONED",
                    "labels": {
                      "costcenter": "190320",
                      "cvsappid": "dbaas",
                      "environmentsubtype": "pt",
                      "environmenttype": "nonprod",
                      "itpmid": "16627",
                      "managed_by": "taxi",
                      "sharedemailaddress": "liliansaadatcvshealth_com",
                      "taxi_resource_id": "taxi-dba-spn-11"
                    },
                    "name": "spn-dbaas-nam3-pt",
                    "num_nodes": 0,
                    "processing_units": 100,
                    "project": "corp-dev-broc-sechub-vpc",
                    "state": "READY",
                    "terraform_labels": {
                      "costcenter": "190320",
                      "cvsappid": "dbaas",
                      "environmentsubtype": "pt",
                      "environmenttype": "nonprod",
                      "goog-terraform-provisioned": "true",
                      "itpmid": "16627",
                      "managed_by": "taxi",
                      "sharedemailaddress": "liliansaadatcvshealth_com",
                      "taxi_resource_id": "taxi-dba-spn-11"
                    },
                    "timeouts": null
                  },
                  "sensitive_values": {
                    "autoscaling_config": [],
                    "effective_labels": {},
                    "labels": {},
                    "terraform_labels": {}
                  }
                }
              ],
              "address": "module.taxi-dba-spn-11.module.spanner-instance"
            },
            {
              "resources": [
                {
                  "address": "module.taxi-dba-spn-11.module.spanner-user[\"roles/owner_group:pe-dbeng-spanner-grp@cvshealth.com\"].google_spanner_instance_iam_member.spanner_instance_iam_member",
                  "mode": "managed",
                  "type": "google_spanner_instance_iam_member",
                  "name": "spanner_instance_iam_member",
                  "provider_name": "registry.terraform.io/hashicorp/google",
                  "schema_version": 0,
                  "values": {
                    "condition": [],
                    "etag": "BwY6EcMqZyM=",
                    "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt/roles/owner/group:pe-dbeng-spanner-grp@cvshealth.com",
                    "instance": "spn-dbaas-nam3-pt",
                    "member": "group:pe-dbeng-spanner-grp@cvshealth.com",
                    "project": "corp-dev-broc-sechub-vpc",
                    "role": "roles/owner"
                  },
                  "sensitive_values": {
                    "condition": []
                  }
                }
              ],
              "address": "module.taxi-dba-spn-11.module.spanner-user[\"roles/owner_group:pe-dbeng-spanner-grp@cvshealth.com\"]"
            },
            {
              "resources": [
                {
                  "address": "module.taxi-dba-spn-11.module.spanner-database[\"spndbaaspt_db_pharmacy\"].google_spanner_database.spanner_database",
                  "mode": "managed",
                  "type": "google_spanner_database",
                  "name": "spanner_database",
                  "provider_name": "registry.terraform.io/hashicorp/google",
                  "schema_version": 0,
                  "values": {
                    "database_dialect": "POSTGRESQL",
                    "ddl": [
                      "Create Schema spndbaaspt;"
                    ],
                    "default_time_zone": null,
                    "deletion_protection": false,
                    "enable_drop_protection": false,
                    "encryption_config": [
                      {
                        "kms_key_name": "projects/cvs-key-vault-nonprod/locations/nam3/keyRings/gkr-nonprod-nam3/cryptoKeys/gk-corp-dev-broc-sechub-vpc-nam3",
                        "kms_key_names": []
                      }
                    ],
                    "id": "spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy",
                    "instance": "spn-dbaas-nam3-pt",
                    "name": "spndbaaspt_db_pharmacy",
                    "project": "corp-dev-broc-sechub-vpc",
                    "state": "READY",
                    "timeouts": null,
                    "version_retention_period": "1h"
                  },
                  "sensitive_values": {
                    "ddl": [
                      false
                    ],
                    "encryption_config": [
                      {
                        "kms_key_names": []
                      }
                    ]
                  }
                }
              ],
              "address": "module.taxi-dba-spn-11.module.spanner-database[\"spndbaaspt_db_pharmacy\"]"
            },
            {
              "resources": [
                {
                  "address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseAdmin_group:pe-dbeng-spanner-grp@cvshealth.com\"].google_spanner_database_iam_member.spanner_database_iam_member",
                  "mode": "managed",
                  "type": "google_spanner_database_iam_member",
                  "name": "spanner_database_iam_member",
                  "provider_name": "registry.terraform.io/hashicorp/google",
                  "schema_version": 0,
                  "values": {
                    "condition": [],
                    "database": "spndbaaspt_db_pharmacy",
                    "etag": "BwY6EceCPD4=",
                    "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy/roles/spanner.databaseAdmin/group:pe-dbeng-spanner-grp@cvshealth.com",
                    "instance": "spn-dbaas-nam3-pt",
                    "member": "group:pe-dbeng-spanner-grp@cvshealth.com",
                    "project": "corp-dev-broc-sechub-vpc",
                    "role": "roles/spanner.databaseAdmin"
                  },
                  "sensitive_values": {
                    "condition": []
                  }
                }
              ],
              "address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseAdmin_group:pe-dbeng-spanner-grp@cvshealth.com\"]"
            },
            {
              "resources": [
                {
                  "address": "module.taxi-dba-spn-11.module.spanner-backup-schedule[\"spndbaaspt_db_pharmacy_spndbaaspt_db_pharmacy_full_backup\"].google_spanner_backup_schedule.spanner_backup_schedule",
                  "mode": "managed",
                  "type": "google_spanner_backup_schedule",
                  "name": "spanner_backup_schedule",
                  "provider_name": "registry.terraform.io/hashicorp/google",
                  "schema_version": 0,
                  "values": {
                    "database": "spndbaaspt_db_pharmacy",
                    "encryption_config": [
                      {
                        "encryption_type": "USE_DATABASE_ENCRYPTION",
                        "kms_key_name": "",
                        "kms_key_names": []
                      }
                    ],
                    "full_backup_spec": [
                      {}
                    ],
                    "id": "spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy/spndbaaspt_db_pharmacy_full_backup",
                    "incremental_backup_spec": [],
                    "instance": "spn-dbaas-nam3-pt",
                    "name": "spndbaaspt_db_pharmacy_full_backup",
                    "project": "corp-dev-broc-sechub-vpc",
                    "retention_duration": "2592000s",
                    "spec": [
                      {
                        "cron_spec": [
                          {
                            "text": "0 22 * * *"
                          }
                        ]
                      }
                    ],
                    "timeouts": null
                  },
                  "sensitive_values": {
                    "encryption_config": [
                      {
                        "kms_key_names": []
                      }
                    ],
                    "full_backup_spec": [
                      {}
                    ],
                    "incremental_backup_spec": [],
                    "spec": [
                      {
                        "cron_spec": [
                          {}
                        ]
                      }
                    ]
                  }
                }
              ],
              "address": "module.taxi-dba-spn-11.module.spanner-backup-schedule[\"spndbaaspt_db_pharmacy_spndbaaspt_db_pharmacy_full_backup\"]"
            },
            {
              "resources": [
                {
                  "address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseUser_serviceAccount:auto-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com\"].google_spanner_database_iam_member.spanner_database_iam_member",
                  "mode": "managed",
                  "type": "google_spanner_database_iam_member",
                  "name": "spanner_database_iam_member",
                  "provider_name": "registry.terraform.io/hashicorp/google",
                  "schema_version": 0,
                  "values": {
                    "condition": [],
                    "database": "spndbaaspt_db_pharmacy",
                    "etag": "BwY6EceCPD4=",
                    "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy/roles/spanner.databaseUser/serviceAccount:auto-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com",
                    "instance": "spn-dbaas-nam3-pt",
                    "member": "serviceAccount:auto-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com",
                    "project": "corp-dev-broc-sechub-vpc",
                    "role": "roles/spanner.databaseUser"
                  },
                  "sensitive_values": {
                    "condition": []
                  }
                }
              ],
              "address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseUser_serviceAccount:auto-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com\"]"
            },
            {
              "resources": [
                {
                  "address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseAdmin_serviceAccount:infra-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com\"].google_spanner_database_iam_member.spanner_database_iam_member",
                  "mode": "managed",
                  "type": "google_spanner_database_iam_member",
                  "name": "spanner_database_iam_member",
                  "provider_name": "registry.terraform.io/hashicorp/google",
                  "schema_version": 0,
                  "values": {
                    "condition": [],
                    "database": "spndbaaspt_db_pharmacy",
                    "etag": "BwY6EceCPD4=",
                    "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy/roles/spanner.databaseAdmin/serviceAccount:infra-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com",
                    "instance": "spn-dbaas-nam3-pt",
                    "member": "serviceAccount:infra-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com",
                    "project": "corp-dev-broc-sechub-vpc",
                    "role": "roles/spanner.databaseAdmin"
                  },
                  "sensitive_values": {
                    "condition": []
                  }
                }
              ],
              "address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseAdmin_serviceAccount:infra-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com\"]"
            },
            {
              "resources": [
                {
                  "address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseReader_group:taxi-gcp-automation-lab-users@cvshealth.com\"].google_spanner_database_iam_member.spanner_database_iam_member",
                  "mode": "managed",
                  "type": "google_spanner_database_iam_member",
                  "name": "spanner_database_iam_member",
                  "provider_name": "registry.terraform.io/hashicorp/google",
                  "schema_version": 0,
                  "values": {
                    "condition": [],
                    "database": "spndbaaspt_db_pharmacy",
                    "etag": "BwY6EceCPD4=",
                    "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy/roles/spanner.databaseReader/group:taxi-gcp-automation-lab-users@cvshealth.com",
                    "instance": "spn-dbaas-nam3-pt",
                    "member": "group:taxi-gcp-automation-lab-users@cvshealth.com",
                    "project": "corp-dev-broc-sechub-vpc",
                    "role": "roles/spanner.databaseReader"
                  },
                  "sensitive_values": {
                    "condition": []
                  }
                }
              ],
              "address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseReader_group:taxi-gcp-automation-lab-users@cvshealth.com\"]"
            }
          ]
        }
      ]
    }
  },
  "resource_drift": [
    {
      "address": "module.taxi-dba-spn-11.module.spanner-database[\"spndbaaspt_db_pharmacy\"].google_spanner_database.spanner_database",
      "module_address": "module.taxi-dba-spn-11.module.spanner-database[\"spndbaaspt_db_pharmacy\"]",
      "mode": "managed",
      "type": "google_spanner_database",
      "name": "spanner_database",
      "provider_name": "registry.terraform.io/hashicorp/google",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "database_dialect": "POSTGRESQL",
          "ddl": [
            "Create Schema spndbaaspt;"
          ],
          "default_time_zone": null,
          "deletion_protection": true,
          "enable_drop_protection": true,
          "encryption_config": [
            {
              "kms_key_name": "projects/cvs-key-vault-nonprod/locations/nam3/keyRings/gkr-nonprod-nam3/cryptoKeys/gk-corp-dev-broc-sechub-vpc-nam3",
              "kms_key_names": null
            }
          ],
          "id": "spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy",
          "instance": "spn-dbaas-nam3-pt",
          "name": "spndbaaspt_db_pharmacy",
          "project": "corp-dev-broc-sechub-vpc",
          "state": "READY",
          "timeouts": null,
          "version_retention_period": "1h"
        },
        "after": {
          "database_dialect": "POSTGRESQL",
          "ddl": [
            "Create Schema spndbaaspt;"
          ],
          "default_time_zone": null,
          "deletion_protection": true,
          "enable_drop_protection": true,
          "encryption_config": [
            {
              "kms_key_name": "projects/cvs-key-vault-nonprod/locations/nam3/keyRings/gkr-nonprod-nam3/cryptoKeys/gk-corp-dev-broc-sechub-vpc-nam3",
              "kms_key_names": []
            }
          ],
          "id": "spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy",
          "instance": "spn-dbaas-nam3-pt",
          "name": "spndbaaspt_db_pharmacy",
          "project": "corp-dev-broc-sechub-vpc",
          "state": "READY",
          "timeouts": null,
          "version_retention_period": "1h"
        },
        "after_unknown": {},
        "before_sensitive": {
          "ddl": [
            false
          ],
          "encryption_config": [
            {}
          ]
        },
        "after_sensitive": {
          "ddl": [
            false
          ],
          "encryption_config": [
            {
              "kms_key_names": []
            }
          ]
        }
      }
    },
    {
      "address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseUser_serviceAccount:auto-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com\"].google_spanner_database_iam_member.spanner_database_iam_member",
      "module_address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseUser_serviceAccount:auto-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com\"]",
      "mode": "managed",
      "type": "google_spanner_database_iam_member",
      "name": "spanner_database_iam_member",
      "provider_name": "registry.terraform.io/hashicorp/google",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "condition": [],
          "database": "spndbaaspt_db_pharmacy",
          "etag": "BwY6Eca6fQE=",
          "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy/roles/spanner.databaseUser/serviceAccount:auto-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com",
          "instance": "spn-dbaas-nam3-pt",
          "member": "serviceAccount:auto-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com",
          "project": "corp-dev-broc-sechub-vpc",
          "role": "roles/spanner.databaseUser"
        },
        "after": {
          "condition": [],
          "database": "spndbaaspt_db_pharmacy",
          "etag": "BwY6EceCPD4=",
          "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy/roles/spanner.databaseUser/serviceAccount:auto-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com",
          "instance": "spn-dbaas-nam3-pt",
          "member": "serviceAccount:auto-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com",
          "project": "corp-dev-broc-sechub-vpc",
          "role": "roles/spanner.databaseUser"
        },
        "after_unknown": {},
        "before_sensitive": {
          "condition": []
        },
        "after_sensitive": {
          "condition": []
        }
      }
    }
  ],
  "resource_changes": [
    {
      "address": "module.taxi-dba-spn-11.module.spanner-backup-schedule[\"spndbaaspt_db_pharmacy_spndbaaspt_db_pharmacy_full_backup\"].google_spanner_backup_schedule.spanner_backup_schedule",
      "module_address": "module.taxi-dba-spn-11.module.spanner-backup-schedule[\"spndbaaspt_db_pharmacy_spndbaaspt_db_pharmacy_full_backup\"]",
      "mode": "managed",
      "type": "google_spanner_backup_schedule",
      "name": "spanner_backup_schedule",
      "provider_name": "registry.terraform.io/hashicorp/google",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "database": "spndbaaspt_db_pharmacy",
          "encryption_config": [
            {
              "encryption_type": "USE_DATABASE_ENCRYPTION",
              "kms_key_name": "",
              "kms_key_names": []
            }
          ],
          "full_backup_spec": [
            {}
          ],
          "id": "spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy/spndbaaspt_db_pharmacy_full_backup",
          "incremental_backup_spec": [],
          "instance": "spn-dbaas-nam3-pt",
          "name": "spndbaaspt_db_pharmacy_full_backup",
          "project": "corp-dev-broc-sechub-vpc",
          "retention_duration": "2592000s",
          "spec": [
            {
              "cron_spec": [
                {
                  "text": "0 22 * * *"
                }
              ]
            }
          ],
          "timeouts": null
        },
        "after": {
          "database": "spndbaaspt_db_pharmacy",
          "encryption_config": [
            {
              "encryption_type": "USE_DATABASE_ENCRYPTION",
              "kms_key_name": "",
              "kms_key_names": []
            }
          ],
          "full_backup_spec": [
            {}
          ],
          "id": "spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy/spndbaaspt_db_pharmacy_full_backup",
          "incremental_backup_spec": [],
          "instance": "spn-dbaas-nam3-pt",
          "name": "spndbaaspt_db_pharmacy_full_backup",
          "project": "corp-dev-broc-sechub-vpc",
          "retention_duration": "2592000s",
          "spec": [
            {
              "cron_spec": [
                {
                  "text": "0 22 * * *"
                }
              ]
            }
          ],
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "encryption_config": [
            {
              "kms_key_names": []
            }
          ],
          "full_backup_spec": [
            {}
          ],
          "incremental_backup_spec": [],
          "spec": [
            {
              "cron_spec": [
                {}
              ]
            }
          ]
        },
        "after_sensitive": {
          "encryption_config": [
            {
              "kms_key_names": []
            }
          ],
          "full_backup_spec": [
            {}
          ],
          "incremental_backup_spec": [],
          "spec": [
            {
              "cron_spec": [
                {}
              ]
            }
          ]
        }
      }
    },
    {
      "address": "module.taxi-dba-spn-11.module.spanner-database[\"spndbaaspt_db_pharmacy\"].google_spanner_database.spanner_database",
      "module_address": "module.taxi-dba-spn-11.module.spanner-database[\"spndbaaspt_db_pharmacy\"]",
      "mode": "managed",
      "type": "google_spanner_database",
      "name": "spanner_database",
      "provider_name": "registry.terraform.io/hashicorp/google",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "database_dialect": "POSTGRESQL",
          "ddl": [
            "Create Schema spndbaaspt;"
          ],
          "default_time_zone": null,
          "deletion_protection": true,
          "enable_drop_protection": true,
          "encryption_config": [
            {
              "kms_key_name": "projects/cvs-key-vault-nonprod/locations/nam3/keyRings/gkr-nonprod-nam3/cryptoKeys/gk-corp-dev-broc-sechub-vpc-nam3",
              "kms_key_names": []
            }
          ],
          "id": "spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy",
          "instance": "spn-dbaas-nam3-pt",
          "name": "spndbaaspt_db_pharmacy",
          "project": "corp-dev-broc-sechub-vpc",
          "state": "READY",
          "timeouts": null,
          "version_retention_period": "1h"
        },
        "after": {
          "database_dialect": "POSTGRESQL",
          "ddl": [
            "Create Schema spndbaaspt;"
          ],
          "default_time_zone": null,
          "deletion_protection": false,
          "enable_drop_protection": false,
          "encryption_config": [
            {
              "kms_key_name": "projects/cvs-key-vault-nonprod/locations/nam3/keyRings/gkr-nonprod-nam3/cryptoKeys/gk-corp-dev-broc-sechub-vpc-nam3",
              "kms_key_names": []
            }
          ],
          "id": "spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy",
          "instance": "spn-dbaas-nam3-pt",
          "name": "spndbaaspt_db_pharmacy",
          "project": "corp-dev-broc-sechub-vpc",
          "state": "READY",
          "timeouts": null,
          "version_retention_period": "1h"
        },
        "after_unknown": {},
        "before_sensitive": {
          "ddl": [
            false
          ],
          "encryption_config": [
            {
              "kms_key_names": []
            }
          ]
        },
        "after_sensitive": {
          "ddl": [
            false
          ],
          "encryption_config": [
            {
              "kms_key_names": []
            }
          ]
        }
      }
    },
    {
      "address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseAdmin_group:pe-dbeng-spanner-grp@cvshealth.com\"].google_spanner_database_iam_member.spanner_database_iam_member",
      "module_address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseAdmin_group:pe-dbeng-spanner-grp@cvshealth.com\"]",
      "mode": "managed",
      "type": "google_spanner_database_iam_member",
      "name": "spanner_database_iam_member",
      "provider_name": "registry.terraform.io/hashicorp/google",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "condition": [],
          "database": "spndbaaspt_db_pharmacy",
          "etag": "BwY6EceCPD4=",
          "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy/roles/spanner.databaseAdmin/group:pe-dbeng-spanner-grp@cvshealth.com",
          "instance": "spn-dbaas-nam3-pt",
          "member": "group:pe-dbeng-spanner-grp@cvshealth.com",
          "project": "corp-dev-broc-sechub-vpc",
          "role": "roles/spanner.databaseAdmin"
        },
        "after": {
          "condition": [],
          "database": "spndbaaspt_db_pharmacy",
          "etag": "BwY6EceCPD4=",
          "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy/roles/spanner.databaseAdmin/group:pe-dbeng-spanner-grp@cvshealth.com",
          "instance": "spn-dbaas-nam3-pt",
          "member": "group:pe-dbeng-spanner-grp@cvshealth.com",
          "project": "corp-dev-broc-sechub-vpc",
          "role": "roles/spanner.databaseAdmin"
        },
        "after_unknown": {},
        "before_sensitive": {
          "condition": []
        },
        "after_sensitive": {
          "condition": []
        }
      }
    },
    {
      "address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseAdmin_serviceAccount:infra-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com\"].google_spanner_database_iam_member.spanner_database_iam_member",
      "module_address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseAdmin_serviceAccount:infra-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com\"]",
      "mode": "managed",
      "type": "google_spanner_database_iam_member",
      "name": "spanner_database_iam_member",
      "provider_name": "registry.terraform.io/hashicorp/google",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "condition": [],
          "database": "spndbaaspt_db_pharmacy",
          "etag": "BwY6EceCPD4=",
          "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy/roles/spanner.databaseAdmin/serviceAccount:infra-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com",
          "instance": "spn-dbaas-nam3-pt",
          "member": "serviceAccount:infra-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com",
          "project": "corp-dev-broc-sechub-vpc",
          "role": "roles/spanner.databaseAdmin"
        },
        "after": {
          "condition": [],
          "database": "spndbaaspt_db_pharmacy",
          "etag": "BwY6EceCPD4=",
          "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy/roles/spanner.databaseAdmin/serviceAccount:infra-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com",
          "instance": "spn-dbaas-nam3-pt",
          "member": "serviceAccount:infra-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com",
          "project": "corp-dev-broc-sechub-vpc",
          "role": "roles/spanner.databaseAdmin"
        },
        "after_unknown": {},
        "before_sensitive": {
          "condition": []
        },
        "after_sensitive": {
          "condition": []
        }
      }
    },
    {
      "address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseReader_group:taxi-gcp-automation-lab-users@cvshealth.com\"].google_spanner_database_iam_member.spanner_database_iam_member",
      "module_address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseReader_group:taxi-gcp-automation-lab-users@cvshealth.com\"]",
      "mode": "managed",
      "type": "google_spanner_database_iam_member",
      "name": "spanner_database_iam_member",
      "provider_name": "registry.terraform.io/hashicorp/google",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "condition": [],
          "database": "spndbaaspt_db_pharmacy",
          "etag": "BwY6EceCPD4=",
          "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy/roles/spanner.databaseReader/group:taxi-gcp-automation-lab-users@cvshealth.com",
          "instance": "spn-dbaas-nam3-pt",
          "member": "group:taxi-gcp-automation-lab-users@cvshealth.com",
          "project": "corp-dev-broc-sechub-vpc",
          "role": "roles/spanner.databaseReader"
        },
        "after": {
          "condition": [],
          "database": "spndbaaspt_db_pharmacy",
          "etag": "BwY6EceCPD4=",
          "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy/roles/spanner.databaseReader/group:taxi-gcp-automation-lab-users@cvshealth.com",
          "instance": "spn-dbaas-nam3-pt",
          "member": "group:taxi-gcp-automation-lab-users@cvshealth.com",
          "project": "corp-dev-broc-sechub-vpc",
          "role": "roles/spanner.databaseReader"
        },
        "after_unknown": {},
        "before_sensitive": {
          "condition": []
        },
        "after_sensitive": {
          "condition": []
        }
      }
    },
    {
      "address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseUser_serviceAccount:auto-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com\"].google_spanner_database_iam_member.spanner_database_iam_member",
      "module_address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseUser_serviceAccount:auto-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com\"]",
      "mode": "managed",
      "type": "google_spanner_database_iam_member",
      "name": "spanner_database_iam_member",
      "provider_name": "registry.terraform.io/hashicorp/google",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "condition": [],
          "database": "spndbaaspt_db_pharmacy",
          "etag": "BwY6EceCPD4=",
          "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy/roles/spanner.databaseUser/serviceAccount:auto-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com",
          "instance": "spn-dbaas-nam3-pt",
          "member": "serviceAccount:auto-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com",
          "project": "corp-dev-broc-sechub-vpc",
          "role": "roles/spanner.databaseUser"
        },
        "after": {
          "condition": [],
          "database": "spndbaaspt_db_pharmacy",
          "etag": "BwY6EceCPD4=",
          "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy/roles/spanner.databaseUser/serviceAccount:auto-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com",
          "instance": "spn-dbaas-nam3-pt",
          "member": "serviceAccount:auto-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com",
          "project": "corp-dev-broc-sechub-vpc",
          "role": "roles/spanner.databaseUser"
        },
        "after_unknown": {},
        "before_sensitive": {
          "condition": []
        },
        "after_sensitive": {
          "condition": []
        }
      }
    },
    {
      "address": "module.taxi-dba-spn-11.module.spanner-instance.google_spanner_instance.spanner_instance",
      "module_address": "module.taxi-dba-spn-11.module.spanner-instance",
      "mode": "managed",
      "type": "google_spanner_instance",
      "name": "spanner_instance",
      "provider_name": "registry.terraform.io/hashicorp/google",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "autoscaling_config": [],
          "config": "projects/corp-dev-broc-sechub-vpc/instanceConfigs/nam3",
          "default_backup_schedule_type": "NONE",
          "display_name": "spn-dbaas-pt",
          "edition": "ENTERPRISE_PLUS",
          "effective_labels": {
            "costcenter": "190320",
            "cvsappid": "dbaas",
            "environmentsubtype": "pt",
            "environmenttype": "nonprod",
            "goog-terraform-provisioned": "true",
            "itpmid": "16627",
            "managed_by": "taxi",
            "sharedemailaddress": "liliansaadatcvshealth_com",
            "taxi_resource_id": "taxi-dba-spn-11"
          },
          "force_destroy": false,
          "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt",
          "instance_type": "PROVISIONED",
          "labels": {
            "costcenter": "190320",
            "cvsappid": "dbaas",
            "environmentsubtype": "pt",
            "environmenttype": "nonprod",
            "itpmid": "16627",
            "managed_by": "taxi",
            "sharedemailaddress": "liliansaadatcvshealth_com",
            "taxi_resource_id": "taxi-dba-spn-11"
          },
          "name": "spn-dbaas-nam3-pt",
          "num_nodes": 0,
          "processing_units": 100,
          "project": "corp-dev-broc-sechub-vpc",
          "state": "READY",
          "terraform_labels": {
            "costcenter": "190320",
            "cvsappid": "dbaas",
            "environmentsubtype": "pt",
            "environmenttype": "nonprod",
            "goog-terraform-provisioned": "true",
            "itpmid": "16627",
            "managed_by": "taxi",
            "sharedemailaddress": "liliansaadatcvshealth_com",
            "taxi_resource_id": "taxi-dba-spn-11"
          },
          "timeouts": null
        },
        "after": {
          "autoscaling_config": [],
          "config": "projects/corp-dev-broc-sechub-vpc/instanceConfigs/nam3",
          "default_backup_schedule_type": "NONE",
          "display_name": "spn-dbaas-pt",
          "edition": "ENTERPRISE_PLUS",
          "effective_labels": {
            "costcenter": "190320",
            "cvsappid": "dbaas",
            "environmentsubtype": "pt",
            "environmenttype": "nonprod",
            "goog-terraform-provisioned": "true",
            "itpmid": "16627",
            "managed_by": "taxi",
            "sharedemailaddress": "liliansaadatcvshealth_com",
            "taxi_resource_id": "taxi-dba-spn-11"
          },
          "force_destroy": false,
          "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt",
          "instance_type": "PROVISIONED",
          "labels": {
            "costcenter": "190320",
            "cvsappid": "dbaas",
            "environmentsubtype": "pt",
            "environmenttype": "nonprod",
            "itpmid": "16627",
            "managed_by": "taxi",
            "sharedemailaddress": "liliansaadatcvshealth_com",
            "taxi_resource_id": "taxi-dba-spn-11"
          },
          "name": "spn-dbaas-nam3-pt",
          "num_nodes": 0,
          "processing_units": 100,
          "project": "corp-dev-broc-sechub-vpc",
          "state": "READY",
          "terraform_labels": {
            "costcenter": "190320",
            "cvsappid": "dbaas",
            "environmentsubtype": "pt",
            "environmenttype": "nonprod",
            "goog-terraform-provisioned": "true",
            "itpmid": "16627",
            "managed_by": "taxi",
            "sharedemailaddress": "liliansaadatcvshealth_com",
            "taxi_resource_id": "taxi-dba-spn-11"
          },
          "timeouts": null
        },
        "after_unknown": {},
        "before_sensitive": {
          "autoscaling_config": [],
          "effective_labels": {},
          "labels": {},
          "terraform_labels": {}
        },
        "after_sensitive": {
          "autoscaling_config": [],
          "effective_labels": {},
          "labels": {},
          "terraform_labels": {}
        }
      }
    },
    {
      "address": "module.taxi-dba-spn-11.module.spanner-user[\"roles/owner_group:pe-dbeng-spanner-grp@cvshealth.com\"].google_spanner_instance_iam_member.spanner_instance_iam_member",
      "module_address": "module.taxi-dba-spn-11.module.spanner-user[\"roles/owner_group:pe-dbeng-spanner-grp@cvshealth.com\"]",
      "mode": "managed",
      "type": "google_spanner_instance_iam_member",
      "name": "spanner_instance_iam_member",
      "provider_name": "registry.terraform.io/hashicorp/google",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "condition": [],
          "etag": "BwY6EcMqZyM=",
          "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt/roles/owner/group:pe-dbeng-spanner-grp@cvshealth.com",
          "instance": "spn-dbaas-nam3-pt",
          "member": "group:pe-dbeng-spanner-grp@cvshealth.com",
          "project": "corp-dev-broc-sechub-vpc",
          "role": "roles/owner"
        },
        "after": {
          "condition": [],
          "etag": "BwY6EcMqZyM=",
          "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt/roles/owner/group:pe-dbeng-spanner-grp@cvshealth.com",
          "instance": "spn-dbaas-nam3-pt",
          "member": "group:pe-dbeng-spanner-grp@cvshealth.com",
          "project": "corp-dev-broc-sechub-vpc",
          "role": "roles/owner"
        },
        "after_unknown": {},
        "before_sensitive": {
          "condition": []
        },
        "after_sensitive": {
          "condition": []
        }
      }
    }
  ],
  "output_changes": {
    "google_resource_id": {
      "actions": [
        "no-op"
      ],
      "before": "spn-dbaas-nam3-pt",
      "after": "spn-dbaas-nam3-pt",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "spanner_database": {
      "actions": [
        "update"
      ],
      "before": {
        "spndbaaspt_db_pharmacy": {
          "spanner_database": {
            "database_dialect": "POSTGRESQL",
            "ddl": [
              "Create Schema spndbaaspt;"
            ],
            "default_time_zone": null,
            "deletion_protection": true,
            "enable_drop_protection": true,
            "encryption_config": [
              {
                "kms_key_name": "projects/cvs-key-vault-nonprod/locations/nam3/keyRings/gkr-nonprod-nam3/cryptoKeys/gk-corp-dev-broc-sechub-vpc-nam3",
                "kms_key_names": null
              }
            ],
            "id": "spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy",
            "instance": "spn-dbaas-nam3-pt",
            "name": "spndbaaspt_db_pharmacy",
            "project": "corp-dev-broc-sechub-vpc",
            "state": "READY",
            "timeouts": null,
            "version_retention_period": "1h"
          }
        }
      },
      "after": {
        "spndbaaspt_db_pharmacy": {
          "spanner_database": {
            "database_dialect": "POSTGRESQL",
            "ddl": [
              "Create Schema spndbaaspt;"
            ],
            "default_time_zone": null,
            "deletion_protection": false,
            "enable_drop_protection": false,
            "encryption_config": [
              {
                "kms_key_name": "projects/cvs-key-vault-nonprod/locations/nam3/keyRings/gkr-nonprod-nam3/cryptoKeys/gk-corp-dev-broc-sechub-vpc-nam3",
                "kms_key_names": []
              }
            ],
            "id": "spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy",
            "instance": "spn-dbaas-nam3-pt",
            "name": "spndbaaspt_db_pharmacy",
            "project": "corp-dev-broc-sechub-vpc",
            "state": "READY",
            "timeouts": null,
            "version_retention_period": "1h"
          }
        }
      },
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "spanner_instance": {
      "actions": [
        "no-op"
      ],
      "before": {
        "autoscaling_config": [],
        "config": "projects/corp-dev-broc-sechub-vpc/instanceConfigs/nam3",
        "default_backup_schedule_type": "NONE",
        "display_name": "spn-dbaas-pt",
        "edition": "ENTERPRISE_PLUS",
        "effective_labels": {
          "costcenter": "190320",
          "cvsappid": "dbaas",
          "environmentsubtype": "pt",
          "environmenttype": "nonprod",
          "goog-terraform-provisioned": "true",
          "itpmid": "16627",
          "managed_by": "taxi",
          "sharedemailaddress": "liliansaadatcvshealth_com",
          "taxi_resource_id": "taxi-dba-spn-11"
        },
        "force_destroy": false,
        "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt",
        "instance_type": "PROVISIONED",
        "labels": {
          "costcenter": "190320",
          "cvsappid": "dbaas",
          "environmentsubtype": "pt",
          "environmenttype": "nonprod",
          "itpmid": "16627",
          "managed_by": "taxi",
          "sharedemailaddress": "liliansaadatcvshealth_com",
          "taxi_resource_id": "taxi-dba-spn-11"
        },
        "name": "spn-dbaas-nam3-pt",
        "num_nodes": 0,
        "processing_units": 100,
        "project": "corp-dev-broc-sechub-vpc",
        "state": "READY",
        "terraform_labels": {
          "costcenter": "190320",
          "cvsappid": "dbaas",
          "environmentsubtype": "pt",
          "environmenttype": "nonprod",
          "goog-terraform-provisioned": "true",
          "itpmid": "16627",
          "managed_by": "taxi",
          "sharedemailaddress": "liliansaadatcvshealth_com",
          "taxi_resource_id": "taxi-dba-spn-11"
        },
        "timeouts": null
      },
      "after": {
        "autoscaling_config": [],
        "config": "projects/corp-dev-broc-sechub-vpc/instanceConfigs/nam3",
        "default_backup_schedule_type": "NONE",
        "display_name": "spn-dbaas-pt",
        "edition": "ENTERPRISE_PLUS",
        "effective_labels": {
          "costcenter": "190320",
          "cvsappid": "dbaas",
          "environmentsubtype": "pt",
          "environmenttype": "nonprod",
          "goog-terraform-provisioned": "true",
          "itpmid": "16627",
          "managed_by": "taxi",
          "sharedemailaddress": "liliansaadatcvshealth_com",
          "taxi_resource_id": "taxi-dba-spn-11"
        },
        "force_destroy": false,
        "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt",
        "instance_type": "PROVISIONED",
        "labels": {
          "costcenter": "190320",
          "cvsappid": "dbaas",
          "environmentsubtype": "pt",
          "environmenttype": "nonprod",
          "itpmid": "16627",
          "managed_by": "taxi",
          "sharedemailaddress": "liliansaadatcvshealth_com",
          "taxi_resource_id": "taxi-dba-spn-11"
        },
        "name": "spn-dbaas-nam3-pt",
        "num_nodes": 0,
        "processing_units": 100,
        "project": "corp-dev-broc-sechub-vpc",
        "state": "READY",
        "terraform_labels": {
          "costcenter": "190320",
          "cvsappid": "dbaas",
          "environmentsubtype": "pt",
          "environmenttype": "nonprod",
          "goog-terraform-provisioned": "true",
          "itpmid": "16627",
          "managed_by": "taxi",
          "sharedemailaddress": "liliansaadatcvshealth_com",
          "taxi_resource_id": "taxi-dba-spn-11"
        },
        "timeouts": null
      },
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    }
  },
  "prior_state": {
    "format_version": "1.0",
    "terraform_version": "1.9.8",
    "values": {
      "outputs": {
        "google_resource_id": {
          "sensitive": false,
          "value": "spn-dbaas-nam3-pt",
          "type": "string"
        },
        "spanner_database": {
          "sensitive": false,
          "value": {
            "spndbaaspt_db_pharmacy": {
              "spanner_database": {
                "database_dialect": "POSTGRESQL",
                "ddl": [
                  "Create Schema spndbaaspt;"
                ],
                "default_time_zone": null,
                "deletion_protection": false,
                "enable_drop_protection": false,
                "encryption_config": [
                  {
                    "kms_key_name": "projects/cvs-key-vault-nonprod/locations/nam3/keyRings/gkr-nonprod-nam3/cryptoKeys/gk-corp-dev-broc-sechub-vpc-nam3",
                    "kms_key_names": []
                  }
                ],
                "id": "spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy",
                "instance": "spn-dbaas-nam3-pt",
                "name": "spndbaaspt_db_pharmacy",
                "project": "corp-dev-broc-sechub-vpc",
                "state": "READY",
                "timeouts": null,
                "version_retention_period": "1h"
              }
            }
          },
          "type": [
            "object",
            {
              "spndbaaspt_db_pharmacy": [
                "object",
                {
                  "spanner_database": [
                    "object",
                    {
                      "database_dialect": "string",
                      "ddl": [
                        "list",
                        "string"
                      ],
                      "default_time_zone": "string",
                      "deletion_protection": "bool",
                      "enable_drop_protection": "bool",
                      "encryption_config": [
                        "list",
                        [
                          "object",
                          {
                            "kms_key_name": "string",
                            "kms_key_names": [
                              "list",
                              "string"
                            ]
                          }
                        ]
                      ],
                      "id": "string",
                      "instance": "string",
                      "name": "string",
                      "project": "string",
                      "state": "string",
                      "timeouts": [
                        "object",
                        {
                          "create": "string",
                          "delete": "string",
                          "update": "string"
                        }
                      ],
                      "version_retention_period": "string"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "spanner_instance": {
          "sensitive": false,
          "value": {
            "autoscaling_config": [],
            "config": "projects/corp-dev-broc-sechub-vpc/instanceConfigs/nam3",
            "default_backup_schedule_type": "NONE",
            "display_name": "spn-dbaas-pt",
            "edition": "ENTERPRISE_PLUS",
            "effective_labels": {
              "costcenter": "190320",
              "cvsappid": "dbaas",
              "environmentsubtype": "pt",
              "environmenttype": "nonprod",
              "goog-terraform-provisioned": "true",
              "itpmid": "16627",
              "managed_by": "taxi",
              "sharedemailaddress": "liliansaadatcvshealth_com",
              "taxi_resource_id": "taxi-dba-spn-11"
            },
            "force_destroy": false,
            "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt",
            "instance_type": "PROVISIONED",
            "labels": {
              "costcenter": "190320",
              "cvsappid": "dbaas",
              "environmentsubtype": "pt",
              "environmenttype": "nonprod",
              "itpmid": "16627",
              "managed_by": "taxi",
              "sharedemailaddress": "liliansaadatcvshealth_com",
              "taxi_resource_id": "taxi-dba-spn-11"
            },
            "name": "spn-dbaas-nam3-pt",
            "num_nodes": 0,
            "processing_units": 100,
            "project": "corp-dev-broc-sechub-vpc",
            "state": "READY",
            "terraform_labels": {
              "costcenter": "190320",
              "cvsappid": "dbaas",
              "environmentsubtype": "pt",
              "environmenttype": "nonprod",
              "goog-terraform-provisioned": "true",
              "itpmid": "16627",
              "managed_by": "taxi",
              "sharedemailaddress": "liliansaadatcvshealth_com",
              "taxi_resource_id": "taxi-dba-spn-11"
            },
            "timeouts": null
          },
          "type": [
            "object",
            {
              "autoscaling_config": [
                "list",
                [
                  "object",
                  {
                    "asymmetric_autoscaling_options": [
                      "list",
                      [
                        "object",
                        {
                          "overrides": [
                            "list",
                            [
                              "object",
                              {
                                "autoscaling_limits": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "max_nodes": "number",
                                      "min_nodes": "number"
                                    }
                                  ]
                                ]
                              }
                            ]
                          ],
                          "replica_selection": [
                            "list",
                            [
                              "object",
                              {
                                "location": "string"
                              }
                            ]
                          ]
                        }
                      ]
                    ],
                    "autoscaling_limits": [
                      "list",
                      [
                        "object",
                        {
                          "max_nodes": "number",
                          "max_processing_units": "number",
                          "min_nodes": "number",
                          "min_processing_units": "number"
                        }
                      ]
                    ],
                    "autoscaling_targets": [
                      "list",
                      [
                        "object",
                        {
                          "high_priority_cpu_utilization_percent": "number",
                          "storage_utilization_percent": "number"
                        }
                      ]
                    ]
                  }
                ]
              ],
              "config": "string",
              "default_backup_schedule_type": "string",
              "display_name": "string",
              "edition": "string",
              "effective_labels": [
                "map",
                "string"
              ],
              "force_destroy": "bool",
              "id": "string",
              "instance_type": "string",
              "labels": [
                "map",
                "string"
              ],
              "name": "string",
              "num_nodes": "number",
              "processing_units": "number",
              "project": "string",
              "state": "string",
              "terraform_labels": [
                "map",
                "string"
              ],
              "timeouts": [
                "object",
                {
                  "create": "string",
                  "delete": "string",
                  "update": "string"
                }
              ]
            }
          ]
        }
      },
      "root_module": {
        "child_modules": [
          {
            "address": "module.taxi-dba-spn-11",
            "child_modules": [
              {
                "resources": [
                  {
                    "address": "module.taxi-dba-spn-11.module.spanner-backup-schedule[\"spndbaaspt_db_pharmacy_spndbaaspt_db_pharmacy_full_backup\"].google_spanner_backup_schedule.spanner_backup_schedule",
                    "mode": "managed",
                    "type": "google_spanner_backup_schedule",
                    "name": "spanner_backup_schedule",
                    "provider_name": "registry.terraform.io/hashicorp/google",
                    "schema_version": 0,
                    "values": {
                      "database": "spndbaaspt_db_pharmacy",
                      "encryption_config": [
                        {
                          "encryption_type": "USE_DATABASE_ENCRYPTION",
                          "kms_key_name": "",
                          "kms_key_names": []
                        }
                      ],
                      "full_backup_spec": [
                        {}
                      ],
                      "id": "spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy/spndbaaspt_db_pharmacy_full_backup",
                      "incremental_backup_spec": [],
                      "instance": "spn-dbaas-nam3-pt",
                      "name": "spndbaaspt_db_pharmacy_full_backup",
                      "project": "corp-dev-broc-sechub-vpc",
                      "retention_duration": "2592000s",
                      "spec": [
                        {
                          "cron_spec": [
                            {
                              "text": "0 22 * * *"
                            }
                          ]
                        }
                      ],
                      "timeouts": null
                    },
                    "sensitive_values": {
                      "encryption_config": [
                        {
                          "kms_key_names": []
                        }
                      ],
                      "full_backup_spec": [
                        {}
                      ],
                      "incremental_backup_spec": [],
                      "spec": [
                        {
                          "cron_spec": [
                            {}
                          ]
                        }
                      ]
                    },
                    "depends_on": [
                      "module.taxi-dba-spn-11.module.spanner-database.google_spanner_database.spanner_database",
                      "module.taxi-dba-spn-11.module.spanner-instance.google_spanner_instance.spanner_instance",
                      "module.taxi-dba-spn-11.module.utilities_cmek.data.google_project.cvs_key_vault_project"
                    ]
                  }
                ],
                "address": "module.taxi-dba-spn-11.module.spanner-backup-schedule[\"spndbaaspt_db_pharmacy_spndbaaspt_db_pharmacy_full_backup\"]"
              },
              {
                "resources": [
                  {
                    "address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseAdmin_group:pe-dbeng-spanner-grp@cvshealth.com\"].google_spanner_database_iam_member.spanner_database_iam_member",
                    "mode": "managed",
                    "type": "google_spanner_database_iam_member",
                    "name": "spanner_database_iam_member",
                    "provider_name": "registry.terraform.io/hashicorp/google",
                    "schema_version": 0,
                    "values": {
                      "condition": [],
                      "database": "spndbaaspt_db_pharmacy",
                      "etag": "BwY6EceCPD4=",
                      "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy/roles/spanner.databaseAdmin/group:pe-dbeng-spanner-grp@cvshealth.com",
                      "instance": "spn-dbaas-nam3-pt",
                      "member": "group:pe-dbeng-spanner-grp@cvshealth.com",
                      "project": "corp-dev-broc-sechub-vpc",
                      "role": "roles/spanner.databaseAdmin"
                    },
                    "sensitive_values": {
                      "condition": []
                    },
                    "depends_on": [
                      "module.taxi-dba-spn-11.module.spanner-database.google_spanner_database.spanner_database",
                      "module.taxi-dba-spn-11.module.spanner-instance.google_spanner_instance.spanner_instance",
                      "module.taxi-dba-spn-11.module.utilities_cmek.data.google_project.cvs_key_vault_project"
                    ]
                  }
                ],
                "address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseAdmin_group:pe-dbeng-spanner-grp@cvshealth.com\"]"
              },
              {
                "resources": [
                  {
                    "address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseAdmin_serviceAccount:infra-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com\"].google_spanner_database_iam_member.spanner_database_iam_member",
                    "mode": "managed",
                    "type": "google_spanner_database_iam_member",
                    "name": "spanner_database_iam_member",
                    "provider_name": "registry.terraform.io/hashicorp/google",
                    "schema_version": 0,
                    "values": {
                      "condition": [],
                      "database": "spndbaaspt_db_pharmacy",
                      "etag": "BwY6EceCPD4=",
                      "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy/roles/spanner.databaseAdmin/serviceAccount:infra-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com",
                      "instance": "spn-dbaas-nam3-pt",
                      "member": "serviceAccount:infra-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com",
                      "project": "corp-dev-broc-sechub-vpc",
                      "role": "roles/spanner.databaseAdmin"
                    },
                    "sensitive_values": {
                      "condition": []
                    },
                    "depends_on": [
                      "module.taxi-dba-spn-11.module.spanner-database.google_spanner_database.spanner_database",
                      "module.taxi-dba-spn-11.module.spanner-instance.google_spanner_instance.spanner_instance",
                      "module.taxi-dba-spn-11.module.utilities_cmek.data.google_project.cvs_key_vault_project"
                    ]
                  }
                ],
                "address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseAdmin_serviceAccount:infra-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com\"]"
              },
              {
                "resources": [
                  {
                    "address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseReader_group:taxi-gcp-automation-lab-users@cvshealth.com\"].google_spanner_database_iam_member.spanner_database_iam_member",
                    "mode": "managed",
                    "type": "google_spanner_database_iam_member",
                    "name": "spanner_database_iam_member",
                    "provider_name": "registry.terraform.io/hashicorp/google",
                    "schema_version": 0,
                    "values": {
                      "condition": [],
                      "database": "spndbaaspt_db_pharmacy",
                      "etag": "BwY6EceCPD4=",
                      "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy/roles/spanner.databaseReader/group:taxi-gcp-automation-lab-users@cvshealth.com",
                      "instance": "spn-dbaas-nam3-pt",
                      "member": "group:taxi-gcp-automation-lab-users@cvshealth.com",
                      "project": "corp-dev-broc-sechub-vpc",
                      "role": "roles/spanner.databaseReader"
                    },
                    "sensitive_values": {
                      "condition": []
                    },
                    "depends_on": [
                      "module.taxi-dba-spn-11.module.spanner-database.google_spanner_database.spanner_database",
                      "module.taxi-dba-spn-11.module.spanner-instance.google_spanner_instance.spanner_instance",
                      "module.taxi-dba-spn-11.module.utilities_cmek.data.google_project.cvs_key_vault_project"
                    ]
                  }
                ],
                "address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseReader_group:taxi-gcp-automation-lab-users@cvshealth.com\"]"
              },
              {
                "resources": [
                  {
                    "address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseUser_serviceAccount:auto-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com\"].google_spanner_database_iam_member.spanner_database_iam_member",
                    "mode": "managed",
                    "type": "google_spanner_database_iam_member",
                    "name": "spanner_database_iam_member",
                    "provider_name": "registry.terraform.io/hashicorp/google",
                    "schema_version": 0,
                    "values": {
                      "condition": [],
                      "database": "spndbaaspt_db_pharmacy",
                      "etag": "BwY6EceCPD4=",
                      "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy/roles/spanner.databaseUser/serviceAccount:auto-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com",
                      "instance": "spn-dbaas-nam3-pt",
                      "member": "serviceAccount:auto-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com",
                      "project": "corp-dev-broc-sechub-vpc",
                      "role": "roles/spanner.databaseUser"
                    },
                    "sensitive_values": {
                      "condition": []
                    },
                    "depends_on": [
                      "module.taxi-dba-spn-11.module.spanner-database.google_spanner_database.spanner_database",
                      "module.taxi-dba-spn-11.module.spanner-instance.google_spanner_instance.spanner_instance",
                      "module.taxi-dba-spn-11.module.utilities_cmek.data.google_project.cvs_key_vault_project"
                    ]
                  }
                ],
                "address": "module.taxi-dba-spn-11.module.spanner-database-user[\"spndbaaspt_db_pharmacy_roles/spanner.databaseUser_serviceAccount:auto-admin@corp-dev-broc-eqx-vpc.iam.gserviceaccount.com\"]"
              },
              {
                "resources": [
                  {
                    "address": "module.taxi-dba-spn-11.module.spanner-database[\"spndbaaspt_db_pharmacy\"].google_spanner_database.spanner_database",
                    "mode": "managed",
                    "type": "google_spanner_database",
                    "name": "spanner_database",
                    "provider_name": "registry.terraform.io/hashicorp/google",
                    "schema_version": 0,
                    "values": {
                      "database_dialect": "POSTGRESQL",
                      "ddl": [
                        "Create Schema spndbaaspt;"
                      ],
                      "default_time_zone": null,
                      "deletion_protection": true,
                      "enable_drop_protection": true,
                      "encryption_config": [
                        {
                          "kms_key_name": "projects/cvs-key-vault-nonprod/locations/nam3/keyRings/gkr-nonprod-nam3/cryptoKeys/gk-corp-dev-broc-sechub-vpc-nam3",
                          "kms_key_names": []
                        }
                      ],
                      "id": "spn-dbaas-nam3-pt/spndbaaspt_db_pharmacy",
                      "instance": "spn-dbaas-nam3-pt",
                      "name": "spndbaaspt_db_pharmacy",
                      "project": "corp-dev-broc-sechub-vpc",
                      "state": "READY",
                      "timeouts": null,
                      "version_retention_period": "1h"
                    },
                    "sensitive_values": {
                      "ddl": [
                        false
                      ],
                      "encryption_config": [
                        {
                          "kms_key_names": []
                        }
                      ]
                    },
                    "depends_on": [
                      "module.taxi-dba-spn-11.module.spanner-instance.google_spanner_instance.spanner_instance",
                      "module.taxi-dba-spn-11.module.utilities_cmek.data.google_project.cvs_key_vault_project"
                    ]
                  }
                ],
                "address": "module.taxi-dba-spn-11.module.spanner-database[\"spndbaaspt_db_pharmacy\"]"
              },
              {
                "resources": [
                  {
                    "address": "module.taxi-dba-spn-11.module.spanner-instance.google_spanner_instance.spanner_instance",
                    "mode": "managed",
                    "type": "google_spanner_instance",
                    "name": "spanner_instance",
                    "provider_name": "registry.terraform.io/hashicorp/google",
                    "schema_version": 0,
                    "values": {
                      "autoscaling_config": [],
                      "config": "projects/corp-dev-broc-sechub-vpc/instanceConfigs/nam3",
                      "default_backup_schedule_type": "NONE",
                      "display_name": "spn-dbaas-pt",
                      "edition": "ENTERPRISE_PLUS",
                      "effective_labels": {
                        "costcenter": "190320",
                        "cvsappid": "dbaas",
                        "environmentsubtype": "pt",
                        "environmenttype": "nonprod",
                        "goog-terraform-provisioned": "true",
                        "itpmid": "16627",
                        "managed_by": "taxi",
                        "sharedemailaddress": "liliansaadatcvshealth_com",
                        "taxi_resource_id": "taxi-dba-spn-11"
                      },
                      "force_destroy": false,
                      "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt",
                      "instance_type": "PROVISIONED",
                      "labels": {
                        "costcenter": "190320",
                        "cvsappid": "dbaas",
                        "environmentsubtype": "pt",
                        "environmenttype": "nonprod",
                        "itpmid": "16627",
                        "managed_by": "taxi",
                        "sharedemailaddress": "liliansaadatcvshealth_com",
                        "taxi_resource_id": "taxi-dba-spn-11"
                      },
                      "name": "spn-dbaas-nam3-pt",
                      "num_nodes": 0,
                      "processing_units": 100,
                      "project": "corp-dev-broc-sechub-vpc",
                      "state": "READY",
                      "terraform_labels": {
                        "costcenter": "190320",
                        "cvsappid": "dbaas",
                        "environmentsubtype": "pt",
                        "environmenttype": "nonprod",
                        "goog-terraform-provisioned": "true",
                        "itpmid": "16627",
                        "managed_by": "taxi",
                        "sharedemailaddress": "liliansaadatcvshealth_com",
                        "taxi_resource_id": "taxi-dba-spn-11"
                      },
                      "timeouts": null
                    },
                    "sensitive_values": {
                      "autoscaling_config": [],
                      "effective_labels": {},
                      "labels": {},
                      "terraform_labels": {}
                    }
                  }
                ],
                "address": "module.taxi-dba-spn-11.module.spanner-instance"
              },
              {
                "resources": [
                  {
                    "address": "module.taxi-dba-spn-11.module.spanner-user[\"roles/owner_group:pe-dbeng-spanner-grp@cvshealth.com\"].google_spanner_instance_iam_member.spanner_instance_iam_member",
                    "mode": "managed",
                    "type": "google_spanner_instance_iam_member",
                    "name": "spanner_instance_iam_member",
                    "provider_name": "registry.terraform.io/hashicorp/google",
                    "schema_version": 0,
                    "values": {
                      "condition": [],
                      "etag": "BwY6EcMqZyM=",
                      "id": "corp-dev-broc-sechub-vpc/spn-dbaas-nam3-pt/roles/owner/group:pe-dbeng-spanner-grp@cvshealth.com",
                      "instance": "spn-dbaas-nam3-pt",
                      "member": "group:pe-dbeng-spanner-grp@cvshealth.com",
                      "project": "corp-dev-broc-sechub-vpc",
                      "role": "roles/owner"
                    },
                    "sensitive_values": {
                      "condition": []
                    },
                    "depends_on": [
                      "module.taxi-dba-spn-11.module.spanner-instance.google_spanner_instance.spanner_instance"
                    ]
                  }
                ],
                "address": "module.taxi-dba-spn-11.module.spanner-user[\"roles/owner_group:pe-dbeng-spanner-grp@cvshealth.com\"]"
              },
              {
                "resources": [
                  {
                    "address": "module.taxi-dba-spn-11.module.utilities_cmek.data.google_project.cvs_key_vault_project",
                    "mode": "data",
                    "type": "google_project",
                    "name": "cvs_key_vault_project",
                    "provider_name": "registry.terraform.io/hashicorp/google",
                    "schema_version": 0,
                    "values": {
                      "auto_create_network": null,
                      "billing_account": "01A50B-BB4DEF-E3C31B",
                      "deletion_policy": "PREVENT",
                      "effective_labels": {
                        "applicationname": "broccoli-automation-framework",
                        "businessunit": "commercial",
                        "costcenter": "190320",
                        "cvsappid": "apm0015867",
                        "dataclassification": "confidential",
                        "edpcategory": "na",
                        "environmentsubtype": "dev",
                        "environmenttype": "nonprod",
                        "itpmid": "apm0015867",
                        "migration": "no",
                        "reportingsegment": "corporate_other",
                        "resourceowner": "sean_taylor_at_cvshealth_dot_com",
                        "responsible_svp": "alan_rosa",
                        "sharedemailaddress": "broccoli-automation_at_cvshealth_dot_com"
                      },
                      "folder_id": "364192934930",
                      "id": "projects/corp-dev-broc-sechub-vpc",
                      "labels": {
                        "applicationname": "broccoli-automation-framework",
                        "businessunit": "commercial",
                        "costcenter": "190320",
                        "cvsappid": "apm0015867",
                        "dataclassification": "confidential",
                        "edpcategory": "na",
                        "environmentsubtype": "dev",
                        "environmenttype": "nonprod",
                        "itpmid": "apm0015867",
                        "migration": "no",
                        "reportingsegment": "corporate_other",
                        "resourceowner": "sean_taylor_at_cvshealth_dot_com",
                        "responsible_svp": "alan_rosa",
                        "sharedemailaddress": "broccoli-automation_at_cvshealth_dot_com"
                      },
                      "name": "corp-dev-broc-sechub-vpc",
                      "number": "684299957225",
                      "org_id": "",
                      "project_id": "corp-dev-broc-sechub-vpc",
                      "tags": null,
                      "terraform_labels": {
                        "applicationname": "broccoli-automation-framework",
                        "businessunit": "commercial",
                        "costcenter": "190320",
                        "cvsappid": "apm0015867",
                        "dataclassification": "confidential",
                        "edpcategory": "na",
                        "environmentsubtype": "dev",
                        "environmenttype": "nonprod",
                        "itpmid": "apm0015867",
                        "migration": "no",
                        "reportingsegment": "corporate_other",
                        "resourceowner": "sean_taylor_at_cvshealth_dot_com",
                        "responsible_svp": "alan_rosa",
                        "sharedemailaddress": "broccoli-automation_at_cvshealth_dot_com"
                      }
                    },
                    "sensitive_values": {
                      "effective_labels": {},
                      "labels": {},
                      "terraform_labels": {}
                    }
                  }
                ],
                "address": "module.taxi-dba-spn-11.module.utilities_cmek",
                "child_modules": [
                  {
                    "address": "module.taxi-dba-spn-11.module.utilities_cmek.module.validations",
                    "child_modules": [
                      {
                        "resources": [
                          {
                            "address": "module.taxi-dba-spn-11.module.utilities_cmek.module.validations.module.cmek[0].data.google_kms_crypto_key.kms_crypto_key",
                            "mode": "data",
                            "type": "google_kms_crypto_key",
                            "name": "kms_crypto_key",
                            "provider_name": "registry.terraform.io/hashicorp/google",
                            "schema_version": 0,
                            "values": {
                              "crypto_key_backend": "",
                              "destroy_scheduled_duration": "2592000s",
                              "effective_labels": {},
                              "id": "projects/cvs-key-vault-nonprod/locations/nam3/keyRings/gkr-nonprod-nam3/cryptoKeys/gk-corp-dev-broc-sechub-vpc-nam3",
                              "import_only": false,
                              "key_ring": "projects/cvs-key-vault-nonprod/locations/nam3/keyRings/gkr-nonprod-nam3",
                              "labels": {},
                              "name": "gk-corp-dev-broc-sechub-vpc-nam3",
                              "primary": [
                                {
                                  "name": "projects/cvs-key-vault-nonprod/locations/nam3/keyRings/gkr-nonprod-nam3/cryptoKeys/gk-corp-dev-broc-sechub-vpc-nam3/cryptoKeyVersions/2",
                                  "state": "ENABLED"
                                }
                              ],
                              "purpose": "ENCRYPT_DECRYPT",
                              "rotation_period": "7776000s",
                              "skip_initial_version_creation": null,
                              "terraform_labels": {},
                              "version_template": [
                                {
                                  "algorithm": "GOOGLE_SYMMETRIC_ENCRYPTION",
                                  "protection_level": "HSM"
                                }
                              ]
                            },
                            "sensitive_values": {
                              "effective_labels": {},
                              "labels": {},
                              "primary": [
                                {}
                              ],
                              "terraform_labels": {},
                              "version_template": [
                                {}
                              ]
                            }
                          }
                        ],
                        "address": "module.taxi-dba-spn-11.module.utilities_cmek.module.validations.module.cmek[0]"
                      }
                    ]
                  }
                ]
              },
              {
                "address": "module.taxi-dba-spn-11.module.validations",
                "child_modules": [
                  {
                    "resources": [
                      {
                        "address": "module.taxi-dba-spn-11.module.validations.module.api-enbaled[0].data.google_project_service.project_service",
                        "mode": "data",
                        "type": "google_project_service",
                        "name": "project_service",
                        "provider_name": "registry.terraform.io/hashicorp/google",
                        "schema_version": 0,
                        "values": {
                          "disable_dependent_services": null,
                          "disable_on_destroy": null,
                          "id": "corp-dev-broc-sechub-vpc/spanner.googleapis.com",
                          "project": "corp-dev-broc-sechub-vpc",
                          "service": "spanner.googleapis.com"
                        },
                        "sensitive_values": {}
                      }
                    ],
                    "address": "module.taxi-dba-spn-11.module.validations.module.api-enbaled[0]"
                  }
                ]
              }
            ]
          }
        ]
      }
    }
  },
  "configuration": {
    "provider_config": {
      "module.taxi-dba-spn-11:google": {
        "name": "google",
        "full_name": "registry.terraform.io/hashicorp/google",
        "module_address": "module.taxi-dba-spn-11"
      }
    },
    "root_module": {
      "outputs": {
        "google_resource_id": {
          "expression": {
            "references": [
              "module.taxi-dba-spn-11.google_resource_id",
              "module.taxi-dba-spn-11"
            ]
          },
          "description": "The unique ID of the spanner instance"
        },
        "spanner_database": {
          "expression": {
            "references": [
              "module.taxi-dba-spn-11.spanner_database",
              "module.taxi-dba-spn-11"
            ]
          },
          "description": "Object containing all attributes of the spanner database(s)"
        },
        "spanner_instance": {
          "expression": {
            "references": [
              "module.taxi-dba-spn-11.spanner_instance",
              "module.taxi-dba-spn-11"
            ]
          },
          "description": "Object containing all attributes of the spanner instance"
        }
      },
      "module_calls": {
        "taxi-dba-spn-11": {
          "source": "git::https://github.com/cvs-health-enterprise-code/taxi-tf-gcp-spanner?ref=v1",
          "expressions": {
            "autoscaling_limits": {
              "references": [
                "var.autoscaling_limits"
              ]
            },
            "backup_schedules": {
              "references": [
                "var.backup_schedules"
              ]
            },
            "database_iam_members": {
              "references": [
                "var.database_iam_members"
              ]
            },
            "databases": {
              "references": [
                "var.databases"
              ]
            },
            "ddl_users": {
              "references": [
                "var.ddl_users"
              ]
            },
            "default_backup_schedule_type": {
              "references": [
                "var.default_backup_schedule_type"
              ]
            },
            "display_name": {
              "references": [
                "var.display_name"
              ]
            },
            "dml_users": {
              "references": [
                "var.dml_users"
              ]
            },
            "edition": {
              "references": [
                "var.edition"
              ]
            },
            "enable_autoscaling": {
              "references": [
                "var.enable_autoscaling"
              ]
            },
            "environment": {
              "references": [
                "var.environment"
              ]
            },
            "force_destroy": {
              "references": [
                "var.force_destroy"
              ]
            },
            "instance_iam_members": {
              "references": [
                "var.instance_iam_members"
              ]
            },
            "instance_name": {
              "references": [
                "var.instance_name"
              ]
            },
            "labels": {
              "references": [
                "var.labels"
              ]
            },
            "num_nodes": {
              "references": [
                "var.num_nodes"
              ]
            },
            "processing_units": {
              "references": [
                "var.processing_units"
              ]
            },
            "project": {
              "references": [
                "var.project"
              ]
            },
            "read_only_users": {
              "references": [
                "var.read_only_users"
              ]
            },
            "region": {
              "references": [
                "var.region"
              ]
            },
            "region_type": {
              "references": [
                "var.region_type"
              ]
            },
            "use_processing_units": {
              "references": [
                "var.use_processing_units"
              ]
            }
          },
          "module": {
            "outputs": {
              "google_resource_id": {
                "expression": {
                  "references": [
                    "module.spanner-instance.spanner_instance.name",
                    "module.spanner-instance.spanner_instance",
                    "module.spanner-instance"
                  ]
                },
                "description": "The unique ID of the spanner instance"
              },
              "spanner_database": {
                "expression": {
                  "references": [
                    "module.spanner-database"
                  ]
                },
                "description": "Object containing all attributes of the spanner database(s)"
              },
              "spanner_instance": {
                "expression": {
                  "references": [
                    "module.spanner-instance.spanner_instance",
                    "module.spanner-instance"
                  ]
                },
                "description": "Object containing all attributes of the spanner instance"
              }
            },
            "module_calls": {
              "cmek_validations": {
                "source": "git::https://github.com/cvs-health-enterprise-code/taxi-tf-gcp-validations.git?ref=v1",
                "expressions": {
                  "cmek_validation": {
                    "references": [
                      "each.value.kms_key_name",
                      "each.value"
                    ]
                  },
                  "labels_validation": {
                    "constant_value": {
                      "enabled": false
                    }
                  },
                  "region_validation": {
                    "constant_value": {
                      "enabled": false
                    }
                  }
                },
                "for_each_expression": {
                  "references": [
                    "local.databases"
                  ]
                },
                "module": {
                  "outputs": {
                    "compute_network_id": {
                      "expression": {
                        "references": [
                          "var.network_validation.enabled",
                          "var.network_validation",
                          "module.network[0].compute_network_id",
                          "module.network[0]"
                        ]
                      },
                      "description": "The ID of the network"
                    },
                    "compute_subnetwork_id": {
                      "expression": {
                        "references": [
                          "var.network_validation.enabled",
                          "var.network_validation",
                          "module.network[0].compute_subnetwork_id",
                          "module.network[0]"
                        ]
                      },
                      "description": "The ID of the subnetwork"
                    },
                    "required_labels_names": {
                      "expression": {
                        "references": [
                          "var.labels_validation.enabled",
                          "var.labels_validation",
                          "module.labels[0].required_labels_names",
                          "module.labels[0]"
                        ]
                      },
                      "description": "A list of string of required labels names"
                    }
                  },
                  "module_calls": {
                    "api-enbaled": {
                      "source": "./modules/api_enabled",
                      "expressions": {
                        "project": {
                          "references": [
                            "var.api_enabled_validation.project",
                            "var.api_enabled_validation"
                          ]
                        },
                        "service": {
                          "references": [
                            "var.api_enabled_validation.service",
                            "var.api_enabled_validation"
                          ]
                        }
                      },
                      "count_expression": {
                        "references": [
                          "var.api_enabled_validation.enabled",
                          "var.api_enabled_validation"
                        ]
                      },
                      "module": {
                        "resources": [
                          {
                            "address": "data.google_project_service.project_service",
                            "mode": "data",
                            "type": "google_project_service",
                            "name": "project_service",
                            "provider_config_key": "module.taxi-dba-spn-11:google",
                            "expressions": {
                              "project": {
                                "references": [
                                  "var.project"
                                ]
                              },
                              "service": {
                                "references": [
                                  "var.service"
                                ]
                              }
                            },
                            "schema_version": 0
                          }
                        ],
                        "variables": {
                          "project": {
                            "description": "The project name to validate if the service is enabled"
                          },
                          "service": {
                            "description": "The service name to validate if it is enabled"
                          }
                        }
                      }
                    },
                    "cmek": {
                      "source": "./modules/cmek",
                      "expressions": {
                        "cmek": {
                          "references": [
                            "var.cmek_validation.cmek",
                            "var.cmek_validation"
                          ]
                        }
                      },
                      "count_expression": {
                        "references": [
                          "var.cmek_validation.enabled",
                          "var.cmek_validation"
                        ]
                      },
                      "module": {
                        "resources": [
                          {
                            "address": "data.google_kms_crypto_key.kms_crypto_key",
                            "mode": "data",
                            "type": "google_kms_crypto_key",
                            "name": "kms_crypto_key",
                            "provider_config_key": "module.taxi-dba-spn-11:google",
                            "expressions": {
                              "key_ring": {
                                "references": [
                                  "local.key_ring"
                                ]
                              },
                              "name": {
                                "references": [
                                  "local.key_name"
                                ]
                              }
                            },
                            "schema_version": 0
                          }
                        ],
                        "variables": {
                          "cmek": {
                            "description": "This will accept variables from different modules, to then validate that this cmek exists"
                          }
                        }
                      }
                    },
                    "labels": {
                      "source": "./modules/labels",
                      "expressions": {
                        "labels": {
                          "references": [
                            "var.labels_validation.labels",
                            "var.labels_validation"
                          ]
                        }
                      },
                      "count_expression": {
                        "references": [
                          "var.labels_validation.enabled",
                          "var.labels_validation"
                        ]
                      },
                      "module": {
                        "outputs": {
                          "required_labels_names": {
                            "expression": {
                              "references": [
                                "local.required_labels"
                              ]
                            },
                            "description": "A list of string of required labels names"
                          }
                        },
                        "variables": {
                          "labels": {
                            "description": "This will accept variables from different modules, to then validate correct labels are being passed. Additional labels can be passed but are not required for validation."
                          }
                        }
                      }
                    },
                    "network": {
                      "source": "./modules/network",
                      "expressions": {
                        "network": {
                          "references": [
                            "var.network_validation.network",
                            "var.network_validation"
                          ]
                        },
                        "network_project": {
                          "references": [
                            "var.network_validation.network_project",
                            "var.network_validation"
                          ]
                        },
                        "region": {
                          "references": [
                            "var.network_validation.region",
                            "var.network_validation"
                          ]
                        },
                        "subnet": {
                          "references": [
                            "var.network_validation.subnet",
                            "var.network_validation"
                          ]
                        },
                        "subnet_min_size": {
                          "references": [
                            "var.network_validation.subnet_min_size",
                            "var.network_validation"
                          ]
                        },
                        "subnet_secondary_ranges": {
                          "references": [
                            "var.network_validation.subnet_secondary_ranges",
                            "var.network_validation"
                          ]
                        }
                      },
                      "count_expression": {
                        "references": [
                          "var.network_validation.enabled",
                          "var.network_validation"
                        ]
                      },
                      "module": {
                        "outputs": {
                          "compute_network_id": {
                            "expression": {
                              "references": [
                                "var.network",
                                "data.google_compute_network.compute_network[0].id",
                                "data.google_compute_network.compute_network[0]",
                                "data.google_compute_network.compute_network"
                              ]
                            },
                            "description": "The ID of the network"
                          },
                          "compute_subnetwork_id": {
                            "expression": {
                              "references": [
                                "var.subnet",
                                "data.google_compute_subnetwork.compute_subnetwork[0].id",
                                "data.google_compute_subnetwork.compute_subnetwork[0]",
                                "data.google_compute_subnetwork.compute_subnetwork"
                              ]
                            },
                            "description": "The ID of the subnetwork"
                          }
                        },
                        "resources": [
                          {
                            "address": "data.google_compute_network.compute_network",
                            "mode": "data",
                            "type": "google_compute_network",
                            "name": "compute_network",
                            "provider_config_key": "module.taxi-dba-spn-11:google",
                            "expressions": {
                              "name": {
                                "references": [
                                  "var.network"
                                ]
                              },
                              "project": {
                                "references": [
                                  "var.network_project"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.network"
                              ]
                            }
                          },
                          {
                            "address": "data.google_compute_subnetwork.compute_subnetwork",
                            "mode": "data",
                            "type": "google_compute_subnetwork",
                            "name": "compute_subnetwork",
                            "provider_config_key": "module.taxi-dba-spn-11:google",
                            "expressions": {
                              "name": {
                                "references": [
                                  "var.subnet"
                                ]
                              },
                              "project": {
                                "references": [
                                  "var.network_project"
                                ]
                              },
                              "region": {
                                "references": [
                                  "var.region"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.subnet"
                              ]
                            }
                          }
                        ],
                        "variables": {
                          "network": {
                            "default": "",
                            "description": "VPC network name to validate if it exists or if a subnet belongs to it"
                          },
                          "network_project": {
                            "description": "VPC network project name to check if a VPC network belongs to or a subnet belongs to"
                          },
                          "region": {
                            "default": "",
                            "description": "Region to validate if the subnet exists in"
                          },
                          "subnet": {
                            "default": "",
                            "description": "Subnet name to validate if this subnet exists"
                          },
                          "subnet_min_size": {
                            "default": 0,
                            "description": "Subnet min size to validate against the subnet size"
                          },
                          "subnet_secondary_ranges": {
                            "default": [],
                            "description": "Subnet secondary range names to check if they exist in a subnet"
                          }
                        }
                      }
                    },
                    "project": {
                      "source": "./modules/project",
                      "expressions": {
                        "project": {
                          "references": [
                            "var.project_validation.project",
                            "var.project_validation"
                          ]
                        }
                      },
                      "count_expression": {
                        "references": [
                          "var.project_validation.enabled",
                          "var.project_validation"
                        ]
                      },
                      "module": {
                        "resources": [
                          {
                            "address": "data.google_project.project",
                            "mode": "data",
                            "type": "google_project",
                            "name": "project",
                            "provider_config_key": "module.taxi-dba-spn-11:google",
                            "expressions": {
                              "project_id": {
                                "references": [
                                  "var.project"
                                ]
                              }
                            },
                            "schema_version": 0
                          }
                        ],
                        "variables": {
                          "project": {
                            "description": "Project ID to check if it exists"
                          }
                        }
                      }
                    },
                    "region": {
                      "source": "./modules/region",
                      "expressions": {
                        "region": {
                          "references": [
                            "var.region_validation.region",
                            "var.region_validation"
                          ]
                        }
                      },
                      "count_expression": {
                        "references": [
                          "var.region_validation.enabled",
                          "var.region_validation"
                        ]
                      },
                      "module": {
                        "variables": {
                          "region": {
                            "description": "Only the following regions are allowed: us-east1, us-east4, us-west2, us-central1, and us"
                          }
                        }
                      }
                    }
                  },
                  "variables": {
                    "api_enabled_validation": {
                      "default": {
                        "enabled": false,
                        "project": "",
                        "service": ""
                      },
                      "description": "This will accept variables from different modules, to then validate if API is enabled."
                    },
                    "cmek_validation": {
                      "default": {
                        "cmek": "",
                        "enabled": false
                      },
                      "description": "This will accept variables from different modules, to then validate correct labels are being passed. Additional labels can be passed but are not required for validation."
                    },
                    "labels_validation": {
                      "description": "This will accept variables from different modules, to then validate correct labels are being passed. Additional labels can be passed but are not required for validation."
                    },
                    "network_validation": {
                      "default": {
                        "enabled": false,
                        "network": "",
                        "network_project": "",
                        "region": "",
                        "subnet": "",
                        "subnet_min_size": 0,
                        "subnet_secondary_ranges": []
                      },
                      "description": "This will accept variables from different modules, to then validate network and subnet."
                    },
                    "project_validation": {
                      "default": {
                        "enabled": false,
                        "project": ""
                      },
                      "description": "Validate if the project exists"
                    },
                    "region_validation": {
                      "description": "Only the following regions are allowed: us-east1, us-east4, us-west2, us-central1, and us"
                    }
                  }
                }
              },
              "spanner-backup-schedule": {
                "source": "./modules/spanner_backup_schedule",
                "expressions": {
                  "backup_type": {
                    "references": [
                      "each.value.backup_type",
                      "each.value"
                    ]
                  },
                  "cron_spec_text": {
                    "references": [
                      "each.value.cron_spec_text",
                      "each.value"
                    ]
                  },
                  "database": {
                    "references": [
                      "module.spanner-database",
                      "each.value.database",
                      "each.value"
                    ]
                  },
                  "instance": {
                    "references": [
                      "module.spanner-instance.spanner_instance.name",
                      "module.spanner-instance.spanner_instance",
                      "module.spanner-instance"
                    ]
                  },
                  "project": {
                    "references": [
                      "var.project"
                    ]
                  },
                  "retention_duration": {
                    "references": [
                      "each.value.retention_duration",
                      "each.value"
                    ]
                  },
                  "schedule_name": {
                    "references": [
                      "each.value.schedule_name",
                      "each.value"
                    ]
                  }
                },
                "for_each_expression": {
                  "references": [
                    "var.backup_schedules"
                  ]
                },
                "module": {
                  "resources": [
                    {
                      "address": "google_spanner_backup_schedule.spanner_backup_schedule",
                      "mode": "managed",
                      "type": "google_spanner_backup_schedule",
                      "name": "spanner_backup_schedule",
                      "provider_config_key": "module.taxi-dba-spn-11:google",
                      "expressions": {
                        "database": {
                          "references": [
                            "var.database"
                          ]
                        },
                        "instance": {
                          "references": [
                            "var.instance"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.schedule_name"
                          ]
                        },
                        "project": {
                          "references": [
                            "var.project"
                          ]
                        },
                        "retention_duration": {
                          "references": [
                            "local.retention_duration"
                          ]
                        },
                        "spec": [
                          {
                            "cron_spec": [
                              {
                                "text": {
                                  "references": [
                                    "var.cron_spec_text"
                                  ]
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "schema_version": 0
                    }
                  ],
                  "variables": {
                    "backup_type": {
                      "description": "Backup type allowed values are [full, incremental]"
                    },
                    "cron_spec_text": {
                      "description": "The backup schedule in UTC time based on cron time string format."
                    },
                    "database": {
                      "description": "The name of the database in GCP"
                    },
                    "instance": {
                      "description": "The unique identifier of the spanner instance in GCP"
                    },
                    "project": {
                      "description": "The ID of the GCP project in which the resource belongs"
                    },
                    "retention_duration": {
                      "default": 30,
                      "description": "The maximum possible retention duration in days up to 366 days."
                    },
                    "schedule_name": {
                      "description": "A unique identifier for the backup schedule"
                    }
                  }
                },
                "depends_on": [
                  "module.spanner-database"
                ]
              },
              "spanner-database": {
                "source": "./modules/spanner_database",
                "expressions": {
                  "database_dialect": {
                    "references": [
                      "each.value.database_dialect",
                      "each.value"
                    ]
                  },
                  "database_name": {
                    "references": [
                      "each.value.db_name",
                      "each.value"
                    ]
                  },
                  "ddl": {
                    "references": [
                      "each.value.ddl_commands",
                      "each.value"
                    ]
                  },
                  "deletion_protection": {
                    "references": [
                      "each.value.deletion_protection",
                      "each.value"
                    ]
                  },
                  "enable_drop_protection": {
                    "references": [
                      "each.value.enable_drop_protection",
                      "each.value"
                    ]
                  },
                  "instance": {
                    "references": [
                      "module.spanner-instance.spanner_instance.name",
                      "module.spanner-instance.spanner_instance",
                      "module.spanner-instance"
                    ]
                  },
                  "kms_key_name": {
                    "references": [
                      "each.value.kms_key_name",
                      "each.value",
                      "module.utilities_cmek.cmek",
                      "module.utilities_cmek",
                      "each.value.kms_key_name",
                      "each.value"
                    ]
                  },
                  "project": {
                    "references": [
                      "var.project"
                    ]
                  },
                  "version_retention_period": {
                    "references": [
                      "each.value.version_retention_period",
                      "each.value"
                    ]
                  }
                },
                "for_each_expression": {
                  "references": [
                    "local.databases"
                  ]
                },
                "module": {
                  "outputs": {
                    "spanner_database": {
                      "expression": {
                        "references": [
                          "google_spanner_database.spanner_database"
                        ]
                      },
                      "description": "Spanner database object of all spanner database attributes"
                    }
                  },
                  "resources": [
                    {
                      "address": "google_spanner_database.spanner_database",
                      "mode": "managed",
                      "type": "google_spanner_database",
                      "name": "spanner_database",
                      "provider_config_key": "module.taxi-dba-spn-11:google",
                      "expressions": {
                        "database_dialect": {
                          "references": [
                            "var.database_dialect"
                          ]
                        },
                        "ddl": {
                          "references": [
                            "var.ddl"
                          ]
                        },
                        "deletion_protection": {
                          "references": [
                            "var.deletion_protection"
                          ]
                        },
                        "enable_drop_protection": {
                          "references": [
                            "var.enable_drop_protection"
                          ]
                        },
                        "encryption_config": [
                          {
                            "kms_key_name": {
                              "references": [
                                "var.kms_key_name"
                              ]
                            }
                          }
                        ],
                        "instance": {
                          "references": [
                            "var.instance"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.database_name"
                          ]
                        },
                        "project": {
                          "references": [
                            "var.project"
                          ]
                        },
                        "version_retention_period": {
                          "references": [
                            "var.version_retention_period"
                          ]
                        }
                      },
                      "schema_version": 0
                    }
                  ],
                  "variables": {
                    "database_dialect": {
                      "description": "The dialect of the Cloud Spanner Database ex: POSTGRESQL"
                    },
                    "database_name": {
                      "description": "The name of the spanner database in GCP"
                    },
                    "ddl": {
                      "default": [],
                      "description": "List of ddl commands to create items under the database"
                    },
                    "deletion_protection": {
                      "default": true,
                      "description": "Whether to enable deletion of the database from terraform code"
                    },
                    "enable_drop_protection": {
                      "default": true,
                      "description": "Whether to enable deletion of the database"
                    },
                    "instance": {
                      "description": "The name of the spanner instance in GCP"
                    },
                    "kms_key_name": {
                      "description": "The full path to the encryption key used for the CMEK disk encryption."
                    },
                    "project": {
                      "description": "The ID of the GCP project in which the resource belongs"
                    },
                    "version_retention_period": {
                      "default": "",
                      "description": "The retention period for the database. The retention period must be between 1 hour and 7 days, and can be specified in days, hours, minutes, or seconds."
                    }
                  }
                },
                "depends_on": [
                  "module.spanner-instance"
                ]
              },
              "spanner-database-user": {
                "source": "./modules/spanner_database_iam_member",
                "expressions": {
                  "database": {
                    "references": [
                      "module.spanner-database",
                      "each.value.database",
                      "each.value"
                    ]
                  },
                  "instance": {
                    "references": [
                      "module.spanner-instance.spanner_instance.name",
                      "module.spanner-instance.spanner_instance",
                      "module.spanner-instance"
                    ]
                  },
                  "member": {
                    "references": [
                      "each.value.member",
                      "each.value"
                    ]
                  },
                  "project": {
                    "references": [
                      "var.project"
                    ]
                  },
                  "role": {
                    "references": [
                      "each.value.role",
                      "each.value"
                    ]
                  }
                },
                "for_each_expression": {
                  "references": [
                    "local.database_iam_members"
                  ]
                },
                "module": {
                  "resources": [
                    {
                      "address": "google_spanner_database_iam_member.spanner_database_iam_member",
                      "mode": "managed",
                      "type": "google_spanner_database_iam_member",
                      "name": "spanner_database_iam_member",
                      "provider_config_key": "module.taxi-dba-spn-11:google",
                      "expressions": {
                        "database": {
                          "references": [
                            "var.database"
                          ]
                        },
                        "instance": {
                          "references": [
                            "var.instance"
                          ]
                        },
                        "member": {
                          "references": [
                            "var.member"
                          ]
                        },
                        "project": {
                          "references": [
                            "var.project"
                          ]
                        },
                        "role": {
                          "references": [
                            "var.role"
                          ]
                        }
                      },
                      "schema_version": 0
                    }
                  ],
                  "variables": {
                    "database": {
                      "description": "The name of the database in GCP"
                    },
                    "instance": {
                      "description": "The unique identifier of the spanner instance in GCP"
                    },
                    "member": {
                      "description": "The email of the user including the user type (group, user, serviceAccount) ex: 'group:group_name@cvshealth.com'"
                    },
                    "project": {
                      "description": "The ID of the GCP project in which the resource belongs"
                    },
                    "role": {
                      "description": "The role to be given to the user"
                    }
                  }
                },
                "depends_on": [
                  "module.spanner-database"
                ]
              },
              "spanner-instance": {
                "source": "./modules/spanner_instance",
                "expressions": {
                  "autoscaling_limits": {
                    "references": [
                      "var.autoscaling_limits"
                    ]
                  },
                  "display_name": {
                    "references": [
                      "var.display_name"
                    ]
                  },
                  "edition": {
                    "references": [
                      "var.edition"
                    ]
                  },
                  "enable_autoscaling": {
                    "references": [
                      "var.enable_autoscaling"
                    ]
                  },
                  "force_destroy": {
                    "references": [
                      "var.force_destroy"
                    ]
                  },
                  "instance_name": {
                    "references": [
                      "var.instance_name"
                    ]
                  },
                  "labels": {
                    "references": [
                      "var.labels"
                    ]
                  },
                  "num_nodes": {
                    "references": [
                      "var.num_nodes"
                    ]
                  },
                  "processing_units": {
                    "references": [
                      "var.processing_units"
                    ]
                  },
                  "project": {
                    "references": [
                      "var.project"
                    ]
                  },
                  "region": {
                    "references": [
                      "var.region"
                    ]
                  },
                  "region_type": {
                    "references": [
                      "var.region_type"
                    ]
                  },
                  "use_processing_units": {
                    "references": [
                      "var.use_processing_units"
                    ]
                  }
                },
                "module": {
                  "outputs": {
                    "spanner_instance": {
                      "expression": {
                        "references": [
                          "google_spanner_instance.spanner_instance"
                        ]
                      },
                      "description": "Spanner instance object of all spanner instance attributes"
                    }
                  },
                  "resources": [
                    {
                      "address": "google_spanner_instance.spanner_instance",
                      "mode": "managed",
                      "type": "google_spanner_instance",
                      "name": "spanner_instance",
                      "provider_config_key": "module.taxi-dba-spn-11:google",
                      "expressions": {
                        "config": {
                          "references": [
                            "local.config"
                          ]
                        },
                        "default_backup_schedule_type": {
                          "references": [
                            "var.default_backup_schedule_type"
                          ]
                        },
                        "display_name": {
                          "references": [
                            "var.display_name"
                          ]
                        },
                        "edition": {
                          "references": [
                            "var.edition"
                          ]
                        },
                        "force_destroy": {
                          "references": [
                            "var.force_destroy"
                          ]
                        },
                        "labels": {
                          "references": [
                            "var.labels"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.instance_name"
                          ]
                        },
                        "num_nodes": {
                          "references": [
                            "local.num_nodes"
                          ]
                        },
                        "processing_units": {
                          "references": [
                            "local.processing_units"
                          ]
                        },
                        "project": {
                          "references": [
                            "var.project"
                          ]
                        }
                      },
                      "schema_version": 0
                    }
                  ],
                  "variables": {
                    "autoscaling_limits": {
                      "default": {
                        "high_priority_cpu_utilization_percent": 65,
                        "max_nodes": 5,
                        "max_processing_units": 5000,
                        "min_nodes": 1,
                        "min_processing_units": 1000,
                        "storage_utilization_percent": 95
                      },
                      "description": "The auto scaling limits for spanner in Processing Units or Number of Nodes. The minimum required Edition for this feature is ENTERPRISE"
                    },
                    "default_backup_schedule_type": {
                      "default": "NONE",
                      "description": "Default backup schedule type (NONE, AUTOMATIC)"
                    },
                    "display_name": {
                      "description": "The descriptive name of the spanner instance in GCP"
                    },
                    "edition": {
                      "default": "EDITION_UNSPECIFIED",
                      "description": "The edition selected for this instance. Different editions provide different capabilities at different price points. Possible values are: EDITION_UNSPECIFIED, STANDARD, ENTERPRISE, ENTERPRISE_PLUS"
                    },
                    "enable_autoscaling": {
                      "default": false,
                      "description": "Whether to enable auto scaling"
                    },
                    "force_destroy": {
                      "default": false,
                      "description": "When deleting a spanner instance, this boolean option will delete all backups of this instance. This must be set to true if you created a backup manually in the console."
                    },
                    "instance_name": {
                      "description": "The unique identifier of the spanner instance in GCP"
                    },
                    "labels": {
                      "description": "The labels to be added to the spanner instance in GCP (a list of \"key\": value pairs)"
                    },
                    "num_nodes": {
                      "default": 1,
                      "description": "The number of nodes allocated to this instance. Exactly one of either node_count or processing_units must be present in terraform"
                    },
                    "processing_units": {
                      "default": 100,
                      "description": "The size of the spanner instance in Processing Units which affects the cost of the database. It has a minimium of 100 and increments of 100 to 1000, then increments of 1000"
                    },
                    "project": {
                      "description": "The ID of the GCP project in which the resource belongs"
                    },
                    "region": {
                      "description": "The region where your data is stored."
                    },
                    "region_type": {
                      "description": "The region type for the region where your data is stored. Allowed values are: Regional, Dual-region, Multi-region."
                    },
                    "use_processing_units": {
                      "default": true,
                      "description": "Whether to use processing units for sizing or nodes"
                    }
                  }
                }
              },
              "spanner-user": {
                "source": "./modules/spanner_instance_iam_member",
                "expressions": {
                  "instance": {
                    "references": [
                      "module.spanner-instance.spanner_instance.name",
                      "module.spanner-instance.spanner_instance",
                      "module.spanner-instance"
                    ]
                  },
                  "member": {
                    "references": [
                      "each.value.member",
                      "each.value"
                    ]
                  },
                  "project": {
                    "references": [
                      "var.project"
                    ]
                  },
                  "role": {
                    "references": [
                      "each.value.role",
                      "each.value"
                    ]
                  }
                },
                "for_each_expression": {
                  "references": [
                    "var.instance_iam_members"
                  ]
                },
                "module": {
                  "resources": [
                    {
                      "address": "google_spanner_instance_iam_member.spanner_instance_iam_member",
                      "mode": "managed",
                      "type": "google_spanner_instance_iam_member",
                      "name": "spanner_instance_iam_member",
                      "provider_config_key": "module.taxi-dba-spn-11:google",
                      "expressions": {
                        "instance": {
                          "references": [
                            "var.instance"
                          ]
                        },
                        "member": {
                          "references": [
                            "var.member"
                          ]
                        },
                        "project": {
                          "references": [
                            "var.project"
                          ]
                        },
                        "role": {
                          "references": [
                            "var.role"
                          ]
                        }
                      },
                      "schema_version": 0
                    }
                  ],
                  "variables": {
                    "instance": {
                      "description": "The unique identifier of the spanner instance in GCP"
                    },
                    "member": {
                      "description": "The email of the user including the user type (group, user, serviceAccount) ex: 'group:group_name@cvshealth.com'"
                    },
                    "project": {
                      "description": "The ID of the GCP project in which the resource belongs"
                    },
                    "role": {
                      "description": "The role to be given to the user"
                    }
                  }
                },
                "depends_on": [
                  "module.spanner-instance"
                ]
              },
              "utilities_cmek": {
                "source": "git::https://github.com/cvs-health-enterprise-code/taxi-tf-gcp-utilities.git//modules/cmek?ref=v1",
                "expressions": {
                  "project": {
                    "references": [
                      "var.project"
                    ]
                  },
                  "region": {
                    "references": [
                      "var.region"
                    ]
                  }
                },
                "module": {
                  "outputs": {
                    "cmek": {
                      "expression": {
                        "references": [
                          "local.cmek_structure"
                        ]
                      },
                      "description": "This output will present the CMEK string, which will be passed to the resources."
                    }
                  },
                  "resources": [
                    {
                      "address": "data.google_project.cvs_key_vault_project",
                      "mode": "data",
                      "type": "google_project",
                      "name": "cvs_key_vault_project",
                      "provider_config_key": "module.taxi-dba-spn-11:google",
                      "expressions": {
                        "project_id": {
                          "references": [
                            "var.project"
                          ]
                        }
                      },
                      "schema_version": 0
                    }
                  ],
                  "module_calls": {
                    "validations": {
                      "source": "git::https://github.com/cvs-health-enterprise-code/taxi-tf-gcp-validations.git?ref=v1",
                      "expressions": {
                        "cmek_validation": {
                          "references": [
                            "local.cmek_structure"
                          ]
                        },
                        "labels_validation": {
                          "constant_value": {
                            "enabled": false
                          }
                        },
                        "region_validation": {
                          "constant_value": {
                            "enabled": false
                          }
                        }
                      },
                      "module": {
                        "outputs": {
                          "compute_network_id": {
                            "expression": {
                              "references": [
                                "var.network_validation.enabled",
                                "var.network_validation",
                                "module.network[0].compute_network_id",
                                "module.network[0]"
                              ]
                            },
                            "description": "The ID of the network"
                          },
                          "compute_subnetwork_id": {
                            "expression": {
                              "references": [
                                "var.network_validation.enabled",
                                "var.network_validation",
                                "module.network[0].compute_subnetwork_id",
                                "module.network[0]"
                              ]
                            },
                            "description": "The ID of the subnetwork"
                          },
                          "required_labels_names": {
                            "expression": {
                              "references": [
                                "var.labels_validation.enabled",
                                "var.labels_validation",
                                "module.labels[0].required_labels_names",
                                "module.labels[0]"
                              ]
                            },
                            "description": "A list of string of required labels names"
                          }
                        },
                        "module_calls": {
                          "api-enbaled": {
                            "source": "./modules/api_enabled",
                            "expressions": {
                              "project": {
                                "references": [
                                  "var.api_enabled_validation.project",
                                  "var.api_enabled_validation"
                                ]
                              },
                              "service": {
                                "references": [
                                  "var.api_enabled_validation.service",
                                  "var.api_enabled_validation"
                                ]
                              }
                            },
                            "count_expression": {
                              "references": [
                                "var.api_enabled_validation.enabled",
                                "var.api_enabled_validation"
                              ]
                            },
                            "module": {
                              "resources": [
                                {
                                  "address": "data.google_project_service.project_service",
                                  "mode": "data",
                                  "type": "google_project_service",
                                  "name": "project_service",
                                  "provider_config_key": "module.taxi-dba-spn-11:google",
                                  "expressions": {
                                    "project": {
                                      "references": [
                                        "var.project"
                                      ]
                                    },
                                    "service": {
                                      "references": [
                                        "var.service"
                                      ]
                                    }
                                  },
                                  "schema_version": 0
                                }
                              ],
                              "variables": {
                                "project": {
                                  "description": "The project name to validate if the service is enabled"
                                },
                                "service": {
                                  "description": "The service name to validate if it is enabled"
                                }
                              }
                            }
                          },
                          "cmek": {
                            "source": "./modules/cmek",
                            "expressions": {
                              "cmek": {
                                "references": [
                                  "var.cmek_validation.cmek",
                                  "var.cmek_validation"
                                ]
                              }
                            },
                            "count_expression": {
                              "references": [
                                "var.cmek_validation.enabled",
                                "var.cmek_validation"
                              ]
                            },
                            "module": {
                              "resources": [
                                {
                                  "address": "data.google_kms_crypto_key.kms_crypto_key",
                                  "mode": "data",
                                  "type": "google_kms_crypto_key",
                                  "name": "kms_crypto_key",
                                  "provider_config_key": "module.taxi-dba-spn-11:google",
                                  "expressions": {
                                    "key_ring": {
                                      "references": [
                                        "local.key_ring"
                                      ]
                                    },
                                    "name": {
                                      "references": [
                                        "local.key_name"
                                      ]
                                    }
                                  },
                                  "schema_version": 0
                                }
                              ],
                              "variables": {
                                "cmek": {
                                  "description": "This will accept variables from different modules, to then validate that this cmek exists"
                                }
                              }
                            }
                          },
                          "labels": {
                            "source": "./modules/labels",
                            "expressions": {
                              "labels": {
                                "references": [
                                  "var.labels_validation.labels",
                                  "var.labels_validation"
                                ]
                              }
                            },
                            "count_expression": {
                              "references": [
                                "var.labels_validation.enabled",
                                "var.labels_validation"
                              ]
                            },
                            "module": {
                              "outputs": {
                                "required_labels_names": {
                                  "expression": {
                                    "references": [
                                      "local.required_labels"
                                    ]
                                  },
                                  "description": "A list of string of required labels names"
                                }
                              },
                              "variables": {
                                "labels": {
                                  "description": "This will accept variables from different modules, to then validate correct labels are being passed. Additional labels can be passed but are not required for validation."
                                }
                              }
                            }
                          },
                          "network": {
                            "source": "./modules/network",
                            "expressions": {
                              "network": {
                                "references": [
                                  "var.network_validation.network",
                                  "var.network_validation"
                                ]
                              },
                              "network_project": {
                                "references": [
                                  "var.network_validation.network_project",
                                  "var.network_validation"
                                ]
                              },
                              "region": {
                                "references": [
                                  "var.network_validation.region",
                                  "var.network_validation"
                                ]
                              },
                              "subnet": {
                                "references": [
                                  "var.network_validation.subnet",
                                  "var.network_validation"
                                ]
                              },
                              "subnet_min_size": {
                                "references": [
                                  "var.network_validation.subnet_min_size",
                                  "var.network_validation"
                                ]
                              },
                              "subnet_secondary_ranges": {
                                "references": [
                                  "var.network_validation.subnet_secondary_ranges",
                                  "var.network_validation"
                                ]
                              }
                            },
                            "count_expression": {
                              "references": [
                                "var.network_validation.enabled",
                                "var.network_validation"
                              ]
                            },
                            "module": {
                              "outputs": {
                                "compute_network_id": {
                                  "expression": {
                                    "references": [
                                      "var.network",
                                      "data.google_compute_network.compute_network[0].id",
                                      "data.google_compute_network.compute_network[0]",
                                      "data.google_compute_network.compute_network"
                                    ]
                                  },
                                  "description": "The ID of the network"
                                },
                                "compute_subnetwork_id": {
                                  "expression": {
                                    "references": [
                                      "var.subnet",
                                      "data.google_compute_subnetwork.compute_subnetwork[0].id",
                                      "data.google_compute_subnetwork.compute_subnetwork[0]",
                                      "data.google_compute_subnetwork.compute_subnetwork"
                                    ]
                                  },
                                  "description": "The ID of the subnetwork"
                                }
                              },
                              "resources": [
                                {
                                  "address": "data.google_compute_network.compute_network",
                                  "mode": "data",
                                  "type": "google_compute_network",
                                  "name": "compute_network",
                                  "provider_config_key": "module.taxi-dba-spn-11:google",
                                  "expressions": {
                                    "name": {
                                      "references": [
                                        "var.network"
                                      ]
                                    },
                                    "project": {
                                      "references": [
                                        "var.network_project"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "var.network"
                                    ]
                                  }
                                },
                                {
                                  "address": "data.google_compute_subnetwork.compute_subnetwork",
                                  "mode": "data",
                                  "type": "google_compute_subnetwork",
                                  "name": "compute_subnetwork",
                                  "provider_config_key": "module.taxi-dba-spn-11:google",
                                  "expressions": {
                                    "name": {
                                      "references": [
                                        "var.subnet"
                                      ]
                                    },
                                    "project": {
                                      "references": [
                                        "var.network_project"
                                      ]
                                    },
                                    "region": {
                                      "references": [
                                        "var.region"
                                      ]
                                    }
                                  },
                                  "schema_version": 0,
                                  "count_expression": {
                                    "references": [
                                      "var.subnet"
                                    ]
                                  }
                                }
                              ],
                              "variables": {
                                "network": {
                                  "default": "",
                                  "description": "VPC network name to validate if it exists or if a subnet belongs to it"
                                },
                                "network_project": {
                                  "description": "VPC network project name to check if a VPC network belongs to or a subnet belongs to"
                                },
                                "region": {
                                  "default": "",
                                  "description": "Region to validate if the subnet exists in"
                                },
                                "subnet": {
                                  "default": "",
                                  "description": "Subnet name to validate if this subnet exists"
                                },
                                "subnet_min_size": {
                                  "default": 0,
                                  "description": "Subnet min size to validate against the subnet size"
                                },
                                "subnet_secondary_ranges": {
                                  "default": [],
                                  "description": "Subnet secondary range names to check if they exist in a subnet"
                                }
                              }
                            }
                          },
                          "project": {
                            "source": "./modules/project",
                            "expressions": {
                              "project": {
                                "references": [
                                  "var.project_validation.project",
                                  "var.project_validation"
                                ]
                              }
                            },
                            "count_expression": {
                              "references": [
                                "var.project_validation.enabled",
                                "var.project_validation"
                              ]
                            },
                            "module": {
                              "resources": [
                                {
                                  "address": "data.google_project.project",
                                  "mode": "data",
                                  "type": "google_project",
                                  "name": "project",
                                  "provider_config_key": "module.taxi-dba-spn-11:google",
                                  "expressions": {
                                    "project_id": {
                                      "references": [
                                        "var.project"
                                      ]
                                    }
                                  },
                                  "schema_version": 0
                                }
                              ],
                              "variables": {
                                "project": {
                                  "description": "Project ID to check if it exists"
                                }
                              }
                            }
                          },
                          "region": {
                            "source": "./modules/region",
                            "expressions": {
                              "region": {
                                "references": [
                                  "var.region_validation.region",
                                  "var.region_validation"
                                ]
                              }
                            },
                            "count_expression": {
                              "references": [
                                "var.region_validation.enabled",
                                "var.region_validation"
                              ]
                            },
                            "module": {
                              "variables": {
                                "region": {
                                  "description": "Only the following regions are allowed: us-east1, us-east4, us-west2, us-central1, and us"
                                }
                              }
                            }
                          }
                        },
                        "variables": {
                          "api_enabled_validation": {
                            "default": {
                              "enabled": false,
                              "project": "",
                              "service": ""
                            },
                            "description": "This will accept variables from different modules, to then validate if API is enabled."
                          },
                          "cmek_validation": {
                            "default": {
                              "cmek": "",
                              "enabled": false
                            },
                            "description": "This will accept variables from different modules, to then validate correct labels are being passed. Additional labels can be passed but are not required for validation."
                          },
                          "labels_validation": {
                            "description": "This will accept variables from different modules, to then validate correct labels are being passed. Additional labels can be passed but are not required for validation."
                          },
                          "network_validation": {
                            "default": {
                              "enabled": false,
                              "network": "",
                              "network_project": "",
                              "region": "",
                              "subnet": "",
                              "subnet_min_size": 0,
                              "subnet_secondary_ranges": []
                            },
                            "description": "This will accept variables from different modules, to then validate network and subnet."
                          },
                          "project_validation": {
                            "default": {
                              "enabled": false,
                              "project": ""
                            },
                            "description": "Validate if the project exists"
                          },
                          "region_validation": {
                            "description": "Only the following regions are allowed: us-east1, us-east4, us-west2, us-central1, and us"
                          }
                        }
                      }
                    }
                  },
                  "variables": {
                    "dynamic_cmek": {
                      "default": "",
                      "description": "To use additional CVS Key Vault Project, other than the default ones (cvs-key-vault-prod & cvs-key-vault-nonprod). Note: If you pass something other than the default Prod/NonProd, make sure you match environment types (e.g. Pass lab but region/project is prod)."
                    },
                    "project": {
                      "description": "The project passed for the resource, to get the correct CMEK from the CVS Key Vault Projects"
                    },
                    "region": {
                      "description": "The region passed for the resource, to get the correct CMEK from the CVS Key Vault Projects"
                    }
                  }
                }
              },
              "validations": {
                "source": "git::https://github.com/cvs-health-enterprise-code/taxi-tf-gcp-validations.git?ref=v1",
                "expressions": {
                  "api_enabled_validation": {
                    "references": [
                      "var.project"
                    ]
                  },
                  "labels_validation": {
                    "references": [
                      "var.labels"
                    ]
                  },
                  "region_validation": {
                    "constant_value": {
                      "enabled": false
                    }
                  }
                },
                "module": {
                  "outputs": {
                    "compute_network_id": {
                      "expression": {
                        "references": [
                          "var.network_validation.enabled",
                          "var.network_validation",
                          "module.network[0].compute_network_id",
                          "module.network[0]"
                        ]
                      },
                      "description": "The ID of the network"
                    },
                    "compute_subnetwork_id": {
                      "expression": {
                        "references": [
                          "var.network_validation.enabled",
                          "var.network_validation",
                          "module.network[0].compute_subnetwork_id",
                          "module.network[0]"
                        ]
                      },
                      "description": "The ID of the subnetwork"
                    },
                    "required_labels_names": {
                      "expression": {
                        "references": [
                          "var.labels_validation.enabled",
                          "var.labels_validation",
                          "module.labels[0].required_labels_names",
                          "module.labels[0]"
                        ]
                      },
                      "description": "A list of string of required labels names"
                    }
                  },
                  "module_calls": {
                    "api-enbaled": {
                      "source": "./modules/api_enabled",
                      "expressions": {
                        "project": {
                          "references": [
                            "var.api_enabled_validation.project",
                            "var.api_enabled_validation"
                          ]
                        },
                        "service": {
                          "references": [
                            "var.api_enabled_validation.service",
                            "var.api_enabled_validation"
                          ]
                        }
                      },
                      "count_expression": {
                        "references": [
                          "var.api_enabled_validation.enabled",
                          "var.api_enabled_validation"
                        ]
                      },
                      "module": {
                        "resources": [
                          {
                            "address": "data.google_project_service.project_service",
                            "mode": "data",
                            "type": "google_project_service",
                            "name": "project_service",
                            "provider_config_key": "module.taxi-dba-spn-11:google",
                            "expressions": {
                              "project": {
                                "references": [
                                  "var.project"
                                ]
                              },
                              "service": {
                                "references": [
                                  "var.service"
                                ]
                              }
                            },
                            "schema_version": 0
                          }
                        ],
                        "variables": {
                          "project": {
                            "description": "The project name to validate if the service is enabled"
                          },
                          "service": {
                            "description": "The service name to validate if it is enabled"
                          }
                        }
                      }
                    },
                    "cmek": {
                      "source": "./modules/cmek",
                      "expressions": {
                        "cmek": {
                          "references": [
                            "var.cmek_validation.cmek",
                            "var.cmek_validation"
                          ]
                        }
                      },
                      "count_expression": {
                        "references": [
                          "var.cmek_validation.enabled",
                          "var.cmek_validation"
                        ]
                      },
                      "module": {
                        "resources": [
                          {
                            "address": "data.google_kms_crypto_key.kms_crypto_key",
                            "mode": "data",
                            "type": "google_kms_crypto_key",
                            "name": "kms_crypto_key",
                            "provider_config_key": "module.taxi-dba-spn-11:google",
                            "expressions": {
                              "key_ring": {
                                "references": [
                                  "local.key_ring"
                                ]
                              },
                              "name": {
                                "references": [
                                  "local.key_name"
                                ]
                              }
                            },
                            "schema_version": 0
                          }
                        ],
                        "variables": {
                          "cmek": {
                            "description": "This will accept variables from different modules, to then validate that this cmek exists"
                          }
                        }
                      }
                    },
                    "labels": {
                      "source": "./modules/labels",
                      "expressions": {
                        "labels": {
                          "references": [
                            "var.labels_validation.labels",
                            "var.labels_validation"
                          ]
                        }
                      },
                      "count_expression": {
                        "references": [
                          "var.labels_validation.enabled",
                          "var.labels_validation"
                        ]
                      },
                      "module": {
                        "outputs": {
                          "required_labels_names": {
                            "expression": {
                              "references": [
                                "local.required_labels"
                              ]
                            },
                            "description": "A list of string of required labels names"
                          }
                        },
                        "variables": {
                          "labels": {
                            "description": "This will accept variables from different modules, to then validate correct labels are being passed. Additional labels can be passed but are not required for validation."
                          }
                        }
                      }
                    },
                    "network": {
                      "source": "./modules/network",
                      "expressions": {
                        "network": {
                          "references": [
                            "var.network_validation.network",
                            "var.network_validation"
                          ]
                        },
                        "network_project": {
                          "references": [
                            "var.network_validation.network_project",
                            "var.network_validation"
                          ]
                        },
                        "region": {
                          "references": [
                            "var.network_validation.region",
                            "var.network_validation"
                          ]
                        },
                        "subnet": {
                          "references": [
                            "var.network_validation.subnet",
                            "var.network_validation"
                          ]
                        },
                        "subnet_min_size": {
                          "references": [
                            "var.network_validation.subnet_min_size",
                            "var.network_validation"
                          ]
                        },
                        "subnet_secondary_ranges": {
                          "references": [
                            "var.network_validation.subnet_secondary_ranges",
                            "var.network_validation"
                          ]
                        }
                      },
                      "count_expression": {
                        "references": [
                          "var.network_validation.enabled",
                          "var.network_validation"
                        ]
                      },
                      "module": {
                        "outputs": {
                          "compute_network_id": {
                            "expression": {
                              "references": [
                                "var.network",
                                "data.google_compute_network.compute_network[0].id",
                                "data.google_compute_network.compute_network[0]",
                                "data.google_compute_network.compute_network"
                              ]
                            },
                            "description": "The ID of the network"
                          },
                          "compute_subnetwork_id": {
                            "expression": {
                              "references": [
                                "var.subnet",
                                "data.google_compute_subnetwork.compute_subnetwork[0].id",
                                "data.google_compute_subnetwork.compute_subnetwork[0]",
                                "data.google_compute_subnetwork.compute_subnetwork"
                              ]
                            },
                            "description": "The ID of the subnetwork"
                          }
                        },
                        "resources": [
                          {
                            "address": "data.google_compute_network.compute_network",
                            "mode": "data",
                            "type": "google_compute_network",
                            "name": "compute_network",
                            "provider_config_key": "module.taxi-dba-spn-11:google",
                            "expressions": {
                              "name": {
                                "references": [
                                  "var.network"
                                ]
                              },
                              "project": {
                                "references": [
                                  "var.network_project"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.network"
                              ]
                            }
                          },
                          {
                            "address": "data.google_compute_subnetwork.compute_subnetwork",
                            "mode": "data",
                            "type": "google_compute_subnetwork",
                            "name": "compute_subnetwork",
                            "provider_config_key": "module.taxi-dba-spn-11:google",
                            "expressions": {
                              "name": {
                                "references": [
                                  "var.subnet"
                                ]
                              },
                              "project": {
                                "references": [
                                  "var.network_project"
                                ]
                              },
                              "region": {
                                "references": [
                                  "var.region"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.subnet"
                              ]
                            }
                          }
                        ],
                        "variables": {
                          "network": {
                            "default": "",
                            "description": "VPC network name to validate if it exists or if a subnet belongs to it"
                          },
                          "network_project": {
                            "description": "VPC network project name to check if a VPC network belongs to or a subnet belongs to"
                          },
                          "region": {
                            "default": "",
                            "description": "Region to validate if the subnet exists in"
                          },
                          "subnet": {
                            "default": "",
                            "description": "Subnet name to validate if this subnet exists"
                          },
                          "subnet_min_size": {
                            "default": 0,
                            "description": "Subnet min size to validate against the subnet size"
                          },
                          "subnet_secondary_ranges": {
                            "default": [],
                            "description": "Subnet secondary range names to check if they exist in a subnet"
                          }
                        }
                      }
                    },
                    "project": {
                      "source": "./modules/project",
                      "expressions": {
                        "project": {
                          "references": [
                            "var.project_validation.project",
                            "var.project_validation"
                          ]
                        }
                      },
                      "count_expression": {
                        "references": [
                          "var.project_validation.enabled",
                          "var.project_validation"
                        ]
                      },
                      "module": {
                        "resources": [
                          {
                            "address": "data.google_project.project",
                            "mode": "data",
                            "type": "google_project",
                            "name": "project",
                            "provider_config_key": "module.taxi-dba-spn-11:google",
                            "expressions": {
                              "project_id": {
                                "references": [
                                  "var.project"
                                ]
                              }
                            },
                            "schema_version": 0
                          }
                        ],
                        "variables": {
                          "project": {
                            "description": "Project ID to check if it exists"
                          }
                        }
                      }
                    },
                    "region": {
                      "source": "./modules/region",
                      "expressions": {
                        "region": {
                          "references": [
                            "var.region_validation.region",
                            "var.region_validation"
                          ]
                        }
                      },
                      "count_expression": {
                        "references": [
                          "var.region_validation.enabled",
                          "var.region_validation"
                        ]
                      },
                      "module": {
                        "variables": {
                          "region": {
                            "description": "Only the following regions are allowed: us-east1, us-east4, us-west2, us-central1, and us"
                          }
                        }
                      }
                    }
                  },
                  "variables": {
                    "api_enabled_validation": {
                      "default": {
                        "enabled": false,
                        "project": "",
                        "service": ""
                      },
                      "description": "This will accept variables from different modules, to then validate if API is enabled."
                    },
                    "cmek_validation": {
                      "default": {
                        "cmek": "",
                        "enabled": false
                      },
                      "description": "This will accept variables from different modules, to then validate correct labels are being passed. Additional labels can be passed but are not required for validation."
                    },
                    "labels_validation": {
                      "description": "This will accept variables from different modules, to then validate correct labels are being passed. Additional labels can be passed but are not required for validation."
                    },
                    "network_validation": {
                      "default": {
                        "enabled": false,
                        "network": "",
                        "network_project": "",
                        "region": "",
                        "subnet": "",
                        "subnet_min_size": 0,
                        "subnet_secondary_ranges": []
                      },
                      "description": "This will accept variables from different modules, to then validate network and subnet."
                    },
                    "project_validation": {
                      "default": {
                        "enabled": false,
                        "project": ""
                      },
                      "description": "Validate if the project exists"
                    },
                    "region_validation": {
                      "description": "Only the following regions are allowed: us-east1, us-east4, us-west2, us-central1, and us"
                    }
                  }
                }
              }
            },
            "variables": {
              "autoscaling_limits": {
                "default": {
                  "high_priority_cpu_utilization_percent": 65,
                  "max_nodes": 5,
                  "max_processing_units": 5000,
                  "min_nodes": 1,
                  "min_processing_units": 1000,
                  "storage_utilization_percent": 95
                },
                "description": "The auto scaling limits for spanner in Processing Units or Number of Nodes. The minimum required Edition for this feature is ENTERPRISE"
              },
              "backup_schedules": {
                "default": [],
                "description": "The list of the spanner backup schedules for the spanner databases"
              },
              "database_iam_members": {
                "default": [],
                "description": "The list of the spanner database IAM members"
              },
              "databases": {
                "default": [],
                "description": "The list of the databases to be created for the spanner instance"
              },
              "ddl_users": {
                "default": [],
                "description": "The list of the database DDL(Data Definition Language) users who can create, modify and remove database objects, such as tables, indexes."
              },
              "default_backup_schedule_type": {
                "default": "NONE",
                "description": "Default backup schedule type (NONE, AUTOMATIC)"
              },
              "display_name": {
                "description": "The name of the spanner instance in GCP"
              },
              "dml_users": {
                "default": [],
                "description": "The list of the database DML(Data Manipulation Language) users who can insert, delete, and update data in a database."
              },
              "edition": {
                "default": "EDITION_UNSPECIFIED",
                "description": "The edition selected for this instance. Different editions provide different capabilities at different price points. Possible values are: EDITION_UNSPECIFIED, STANDARD, ENTERPRISE, ENTERPRISE_PLUS"
              },
              "enable_autoscaling": {
                "default": false,
                "description": "Whether to enable auto scaling."
              },
              "environment": {
                "description": "The environment for the spanner instance (dev, qa, uat, pt, preprod, prod)"
              },
              "force_destroy": {
                "default": false,
                "description": "When deleting a spanner instance, this boolean option will delete all backups of this instance. This must be set to true if you created a backup manually in the console."
              },
              "instance_iam_members": {
                "default": [],
                "description": "The list of the spanner instance IAM members"
              },
              "instance_name": {
                "description": "The unique identifier of the spanner instance."
              },
              "labels": {
                "description": "The labels to be added to the spanner instance in GCP (a list of \"key\": value pairs)"
              },
              "num_nodes": {
                "default": 1,
                "description": "The size of the spanner instance in Num Nodes which affects the cost of the database"
              },
              "processing_units": {
                "default": 100,
                "description": "The size of the spanner instance in Processing Units which affects the cost of the database"
              },
              "project": {
                "description": "The ID of the GCP project in which the resource belongs"
              },
              "read_only_users": {
                "default": [],
                "description": "The list of the database DDL(Data Definition Language) users who can read data from a database."
              },
              "region": {
                "description": "The name of the spanner region. For regional databases ex:'us-west2' or 'us-east4' and for multi-region databases ex: 'nam3'"
              },
              "region_type": {
                "description": "The region type for the region where your data is stored. Allowed values are: Regional, Dual-region, Multi-region."
              },
              "use_processing_units": {
                "default": true,
                "description": "Whether to use processing units for sizing or nodes"
              }
            }
          }
        }
      },
      "variables": {
        "autoscaling_limits": {
          "default": {
            "high_priority_cpu_utilization_percent": 65,
            "max_nodes": 5,
            "max_processing_units": 5000,
            "min_nodes": 1,
            "min_processing_units": 1000,
            "storage_utilization_percent": 95
          },
          "description": "The auto scaling limits for spanner in Processing Units or Number of Nodes. The minimum required Edition for this feature is ENTERPRISE"
        },
        "backup_schedules": {
          "default": [],
          "description": "The list of the spanner backup schedules for the spanner databases"
        },
        "database_iam_members": {
          "default": [],
          "description": "The list of the spanner database IAM members"
        },
        "databases": {
          "default": [],
          "description": "The list of the databases to be created for the spanner instance"
        },
        "ddl_users": {
          "default": [],
          "description": "The list of the database DDL(Data Definition Language) users who can create, modify and remove database objects, such as tables, indexes."
        },
        "default_backup_schedule_type": {
          "default": "NONE",
          "description": "Default backup schedule type (NONE, AUTOMATIC)"
        },
        "display_name": {
          "description": "The name of the spanner instance in GCP"
        },
        "dml_users": {
          "default": [],
          "description": "The list of the database DML(Data Manipulation Language) users who can insert, delete, and update data in a database."
        },
        "edition": {
          "default": "EDITION_UNSPECIFIED",
          "description": "The edition selected for this instance. Different editions provide different capabilities at different price points. Possible values are: EDITION_UNSPECIFIED, STANDARD, ENTERPRISE, ENTERPRISE_PLUS"
        },
        "enable_autoscaling": {
          "default": false,
          "description": "Whether to enable auto scaling."
        },
        "environment": {
          "description": "The environment for the spanner instance (dev, qa, uat, pt, preprod, prod)"
        },
        "force_destroy": {
          "default": false,
          "description": "When deleting a spanner instance, this boolean option will delete all backups of this instance. This must be set to true if you created a backup manually in the console."
        },
        "instance_iam_members": {
          "default": [],
          "description": "The list of the spanner instance IAM members"
        },
        "instance_name": {
          "description": "The unique identifier of the spanner instance."
        },
        "labels": {
          "description": "The labels to be added to the spanner instance in GCP (a list of \"key\": value pairs)"
        },
        "num_nodes": {
          "default": 1,
          "description": "The size of the spanner instance in Num Nodes which affects the cost of the database"
        },
        "processing_units": {
          "default": 100,
          "description": "The size of the spanner instance in Processing Units which affects the cost of the database"
        },
        "project": {
          "description": "The ID of the GCP project in which the resource belongs"
        },
        "read_only_users": {
          "default": [],
          "description": "The list of the database DDL(Data Definition Language) users who can read data from a database."
        },
        "region": {
          "description": "The name of the spanner region. For regional databases ex:'us-west2' or 'us-east4' and for multi-region databases ex: 'nam3'"
        },
        "region_type": {
          "description": "The region type for the region where your data is stored. Allowed values are: Regional, Dual-region, Multi-region."
        },
        "use_processing_units": {
          "default": true,
          "description": "Whether to use processing units for sizing or nodes"
        }
      }
    }
  },
  "relevant_attributes": [
    {
      "resource": "module.taxi-dba-spn-11.module.utilities_cmek.module.validations.module.network[0].data.google_compute_subnetwork.compute_subnetwork[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.taxi-dba-spn-11.module.validations.module.network[0].data.google_compute_network.compute_network[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.taxi-dba-spn-11.module.utilities_cmek.data.google_project.cvs_key_vault_project",
      "attribute": [
        "labels",
        "environmenttype"
      ]
    },
    {
      "resource": "module.taxi-dba-spn-11.module.validations.module.network[0].data.google_compute_subnetwork.compute_subnetwork[0]",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.taxi-dba-spn-11.module.spanner-database.google_spanner_database.spanner_database",
      "attribute": []
    },
    {
      "resource": "module.taxi-dba-spn-11.module.spanner-instance.google_spanner_instance.spanner_instance",
      "attribute": []
    },
    {
      "resource": "module.taxi-dba-spn-11.module.spanner-database[\"spndbaaspt_db_pharmacy\"].google_spanner_database.spanner_database",
      "attribute": []
    },
    {
      "resource": "module.taxi-dba-spn-11.module.utilities_cmek.module.validations.module.network[0].data.google_compute_network.compute_network[0]",
      "attribute": [
        "id"
      ]
    }
  ],
  "checks": [
    {
      "address": {
        "kind": "resource",
        "mode": "data",
        "module": "module.taxi-dba-spn-11.module.cmek_validations.module.api-enbaled",
        "name": "project_service",
        "to_display": "module.taxi-dba-spn-11.module.cmek_validations.module.api-enbaled.data.google_project_service.project_service",
        "type": "google_project_service"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "resource",
        "mode": "data",
        "module": "module.taxi-dba-spn-11.module.cmek_validations.module.cmek",
        "name": "kms_crypto_key",
        "to_display": "module.taxi-dba-spn-11.module.cmek_validations.module.cmek.data.google_kms_crypto_key.kms_crypto_key",
        "type": "google_kms_crypto_key"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "var",
        "module": "module.taxi-dba-spn-11.module.cmek_validations.module.labels",
        "name": "labels",
        "to_display": "module.taxi-dba-spn-11.module.cmek_validations.module.labels.var.labels"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "resource",
        "mode": "data",
        "module": "module.taxi-dba-spn-11.module.cmek_validations.module.network",
        "name": "compute_network",
        "to_display": "module.taxi-dba-spn-11.module.cmek_validations.module.network.data.google_compute_network.compute_network",
        "type": "google_compute_network"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "resource",
        "mode": "data",
        "module": "module.taxi-dba-spn-11.module.cmek_validations.module.network",
        "name": "compute_subnetwork",
        "to_display": "module.taxi-dba-spn-11.module.cmek_validations.module.network.data.google_compute_subnetwork.compute_subnetwork",
        "type": "google_compute_subnetwork"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "var",
        "module": "module.taxi-dba-spn-11.module.cmek_validations.module.region",
        "name": "region",
        "to_display": "module.taxi-dba-spn-11.module.cmek_validations.module.region.var.region"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "var",
        "module": "module.taxi-dba-spn-11.module.spanner-backup-schedule",
        "name": "backup_type",
        "to_display": "module.taxi-dba-spn-11.module.spanner-backup-schedule.var.backup_type"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.taxi-dba-spn-11.module.spanner-backup-schedule[\"spndbaaspt_db_pharmacy_spndbaaspt_db_pharmacy_full_backup\"]",
            "to_display": "module.taxi-dba-spn-11.module.spanner-backup-schedule[\"spndbaaspt_db_pharmacy_spndbaaspt_db_pharmacy_full_backup\"].var.backup_type"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.taxi-dba-spn-11.module.spanner-backup-schedule",
        "name": "retention_duration",
        "to_display": "module.taxi-dba-spn-11.module.spanner-backup-schedule.var.retention_duration"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.taxi-dba-spn-11.module.spanner-backup-schedule[\"spndbaaspt_db_pharmacy_spndbaaspt_db_pharmacy_full_backup\"]",
            "to_display": "module.taxi-dba-spn-11.module.spanner-backup-schedule[\"spndbaaspt_db_pharmacy_spndbaaspt_db_pharmacy_full_backup\"].var.retention_duration"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.taxi-dba-spn-11.module.spanner-backup-schedule",
        "name": "schedule_name",
        "to_display": "module.taxi-dba-spn-11.module.spanner-backup-schedule.var.schedule_name"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.taxi-dba-spn-11.module.spanner-backup-schedule[\"spndbaaspt_db_pharmacy_spndbaaspt_db_pharmacy_full_backup\"]",
            "to_display": "module.taxi-dba-spn-11.module.spanner-backup-schedule[\"spndbaaspt_db_pharmacy_spndbaaspt_db_pharmacy_full_backup\"].var.schedule_name"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.taxi-dba-spn-11.module.spanner-database",
        "name": "database_name",
        "to_display": "module.taxi-dba-spn-11.module.spanner-database.var.database_name"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.taxi-dba-spn-11.module.spanner-database[\"spndbaaspt_db_pharmacy\"]",
            "to_display": "module.taxi-dba-spn-11.module.spanner-database[\"spndbaaspt_db_pharmacy\"].var.database_name"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.taxi-dba-spn-11.module.spanner-instance",
        "name": "default_backup_schedule_type",
        "to_display": "module.taxi-dba-spn-11.module.spanner-instance.var.default_backup_schedule_type"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.taxi-dba-spn-11.module.spanner-instance",
            "to_display": "module.taxi-dba-spn-11.module.spanner-instance.var.default_backup_schedule_type"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.taxi-dba-spn-11.module.spanner-instance",
        "name": "display_name",
        "to_display": "module.taxi-dba-spn-11.module.spanner-instance.var.display_name"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.taxi-dba-spn-11.module.spanner-instance",
            "to_display": "module.taxi-dba-spn-11.module.spanner-instance.var.display_name"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.taxi-dba-spn-11.module.spanner-instance",
        "name": "edition",
        "to_display": "module.taxi-dba-spn-11.module.spanner-instance.var.edition"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.taxi-dba-spn-11.module.spanner-instance",
            "to_display": "module.taxi-dba-spn-11.module.spanner-instance.var.edition"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.taxi-dba-spn-11.module.spanner-instance",
        "name": "instance_name",
        "to_display": "module.taxi-dba-spn-11.module.spanner-instance.var.instance_name"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.taxi-dba-spn-11.module.spanner-instance",
            "to_display": "module.taxi-dba-spn-11.module.spanner-instance.var.instance_name"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.taxi-dba-spn-11.module.spanner-instance",
        "name": "region_type",
        "to_display": "module.taxi-dba-spn-11.module.spanner-instance.var.region_type"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.taxi-dba-spn-11.module.spanner-instance",
            "to_display": "module.taxi-dba-spn-11.module.spanner-instance.var.region_type"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "resource",
        "mode": "data",
        "module": "module.taxi-dba-spn-11.module.utilities_cmek.module.validations.module.api-enbaled",
        "name": "project_service",
        "to_display": "module.taxi-dba-spn-11.module.utilities_cmek.module.validations.module.api-enbaled.data.google_project_service.project_service",
        "type": "google_project_service"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "resource",
        "mode": "data",
        "module": "module.taxi-dba-spn-11.module.utilities_cmek.module.validations.module.cmek",
        "name": "kms_crypto_key",
        "to_display": "module.taxi-dba-spn-11.module.utilities_cmek.module.validations.module.cmek.data.google_kms_crypto_key.kms_crypto_key",
        "type": "google_kms_crypto_key"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.taxi-dba-spn-11.module.utilities_cmek.module.validations.module.cmek[0]",
            "to_display": "module.taxi-dba-spn-11.module.utilities_cmek.module.validations.module.cmek[0].data.google_kms_crypto_key.kms_crypto_key"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "var",
        "module": "module.taxi-dba-spn-11.module.utilities_cmek.module.validations.module.labels",
        "name": "labels",
        "to_display": "module.taxi-dba-spn-11.module.utilities_cmek.module.validations.module.labels.var.labels"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "resource",
        "mode": "data",
        "module": "module.taxi-dba-spn-11.module.utilities_cmek.module.validations.module.network",
        "name": "compute_network",
        "to_display": "module.taxi-dba-spn-11.module.utilities_cmek.module.validations.module.network.data.google_compute_network.compute_network",
        "type": "google_compute_network"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "resource",
        "mode": "data",
        "module": "module.taxi-dba-spn-11.module.utilities_cmek.module.validations.module.network",
        "name": "compute_subnetwork",
        "to_display": "module.taxi-dba-spn-11.module.utilities_cmek.module.validations.module.network.data.google_compute_subnetwork.compute_subnetwork",
        "type": "google_compute_subnetwork"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "var",
        "module": "module.taxi-dba-spn-11.module.utilities_cmek.module.validations.module.region",
        "name": "region",
        "to_display": "module.taxi-dba-spn-11.module.utilities_cmek.module.validations.module.region.var.region"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "resource",
        "mode": "data",
        "module": "module.taxi-dba-spn-11.module.validations.module.api-enbaled",
        "name": "project_service",
        "to_display": "module.taxi-dba-spn-11.module.validations.module.api-enbaled.data.google_project_service.project_service",
        "type": "google_project_service"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.taxi-dba-spn-11.module.validations.module.api-enbaled[0]",
            "to_display": "module.taxi-dba-spn-11.module.validations.module.api-enbaled[0].data.google_project_service.project_service"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "resource",
        "mode": "data",
        "module": "module.taxi-dba-spn-11.module.validations.module.cmek",
        "name": "kms_crypto_key",
        "to_display": "module.taxi-dba-spn-11.module.validations.module.cmek.data.google_kms_crypto_key.kms_crypto_key",
        "type": "google_kms_crypto_key"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "var",
        "module": "module.taxi-dba-spn-11.module.validations.module.labels",
        "name": "labels",
        "to_display": "module.taxi-dba-spn-11.module.validations.module.labels.var.labels"
      },
      "status": "pass",
      "instances": [
        {
          "address": {
            "module": "module.taxi-dba-spn-11.module.validations.module.labels[0]",
            "to_display": "module.taxi-dba-spn-11.module.validations.module.labels[0].var.labels"
          },
          "status": "pass"
        }
      ]
    },
    {
      "address": {
        "kind": "resource",
        "mode": "data",
        "module": "module.taxi-dba-spn-11.module.validations.module.network",
        "name": "compute_network",
        "to_display": "module.taxi-dba-spn-11.module.validations.module.network.data.google_compute_network.compute_network",
        "type": "google_compute_network"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "resource",
        "mode": "data",
        "module": "module.taxi-dba-spn-11.module.validations.module.network",
        "name": "compute_subnetwork",
        "to_display": "module.taxi-dba-spn-11.module.validations.module.network.data.google_compute_subnetwork.compute_subnetwork",
        "type": "google_compute_subnetwork"
      },
      "status": "pass"
    },
    {
      "address": {
        "kind": "var",
        "module": "module.taxi-dba-spn-11.module.validations.module.region",
        "name": "region",
        "to_display": "module.taxi-dba-spn-11.module.validations.module.region.var.region"
      },
      "status": "pass"
    }
  ],
  "timestamp": "2025-07-16T21:12:12Z",
  "applyable": true,
  "complete": true,
  "errored": false
}
